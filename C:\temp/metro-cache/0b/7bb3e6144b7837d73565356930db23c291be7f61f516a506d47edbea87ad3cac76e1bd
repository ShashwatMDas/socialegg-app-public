{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"lodash/isEqual","data":{"isAsync":false}},{"name":"lodash/pick","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createToolbarAndroidComponent;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _isEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"lodash/isEqual\"));\n\n  var _pick = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"lodash/pick\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12], \"react\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[14], \"react-native\");\n\n  var _jsxFileName = \"/media/shashwatmdas/Shashwat2/finalapp/socialegg_app/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/toolbar-android.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var ICON_PROP_NAMES = ['iconSize', 'iconColor', 'titleColor'];\n  var LOGO_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['logoName']);\n  var NAV_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['navIconName']);\n  var OVERFLOW_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['overflowIconName']);\n  var ACTIONS_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['actions']);\n\n  var arePropsEqual = function arePropsEqual(keys) {\n    return function (prevProps, nextProps) {\n      return (0, _isEqual.default)((0, _pick.default)(prevProps, keys), (0, _pick.default)(nextProps, keys));\n    };\n  };\n\n  var areLogoIconPropsEqual = arePropsEqual(LOGO_ICON_PROP_NAMES);\n  var areNavIconPropsEqual = arePropsEqual(NAV_ICON_PROP_NAMES);\n  var areOverflowIconPropsEqual = arePropsEqual(OVERFLOW_ICON_PROP_NAMES);\n  var areActionPropsEqual = arePropsEqual(ACTIONS_PROP_NAMES);\n\n  function createToolbarAndroidComponent(IconNamePropType, getImageSource) {\n    var _class, _temp;\n\n    return _temp = _class = function (_PureComponent) {\n      (0, _inherits2.default)(IconToolbarAndroid, _PureComponent);\n\n      var _super = _createSuper(IconToolbarAndroid);\n\n      function IconToolbarAndroid() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, IconToolbarAndroid);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.state = {\n          logo: undefined,\n          navIcon: undefined,\n          overflowIcon: undefined,\n          actions: undefined\n        };\n        return _this;\n      }\n\n      (0, _createClass2.default)(IconToolbarAndroid, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.updateLogoIconSource();\n          this.updateNavIconSource();\n          this.updateOverflowIconSource();\n          this.updateActionIconSources();\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!areLogoIconPropsEqual(prevProps, this.props)) {\n            this.updateLogoIconSource();\n          }\n\n          if (!areNavIconPropsEqual(prevProps, this.props)) {\n            this.updateNavIconSource();\n          }\n\n          if (!areOverflowIconPropsEqual(prevProps, this.props)) {\n            this.updateOverflowIconSource();\n          }\n\n          if (!areActionPropsEqual(prevProps, this.props)) {\n            this.updateActionIconSources();\n          }\n        }\n      }, {\n        key: \"updateLogoIconSource\",\n        value: function updateLogoIconSource() {\n          var _this$props, logoName, iconSize, iconColor, titleColor, logo;\n\n          return _regenerator.default.async(function updateLogoIconSource$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this$props = this.props, logoName = _this$props.logoName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor, titleColor = _this$props.titleColor;\n\n                  if (!logoName) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return _regenerator.default.awrap(getImageSource(logoName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  logo = _context.sent;\n                  this.setState({\n                    logo: logo\n                  });\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.logo) {\n                    this.setState({\n                      logo: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, this, null, Promise);\n        }\n      }, {\n        key: \"updateNavIconSource\",\n        value: function updateNavIconSource() {\n          var _this$props2, navIconName, iconSize, iconColor, titleColor, navIcon;\n\n          return _regenerator.default.async(function updateNavIconSource$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this$props2 = this.props, navIconName = _this$props2.navIconName, iconSize = _this$props2.iconSize, iconColor = _this$props2.iconColor, titleColor = _this$props2.titleColor;\n\n                  if (!navIconName) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  _context2.next = 4;\n                  return _regenerator.default.awrap(getImageSource(navIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  navIcon = _context2.sent;\n                  this.setState({\n                    navIcon: navIcon\n                  });\n                  _context2.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.navIcon) {\n                    this.setState({\n                      navIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, this, null, Promise);\n        }\n      }, {\n        key: \"updateOverflowIconSource\",\n        value: function updateOverflowIconSource() {\n          var _this$props3, overflowIconName, iconSize, iconColor, titleColor, overflowIcon;\n\n          return _regenerator.default.async(function updateOverflowIconSource$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this$props3 = this.props, overflowIconName = _this$props3.overflowIconName, iconSize = _this$props3.iconSize, iconColor = _this$props3.iconColor, titleColor = _this$props3.titleColor;\n\n                  if (!overflowIconName) {\n                    _context3.next = 8;\n                    break;\n                  }\n\n                  _context3.next = 4;\n                  return _regenerator.default.awrap(getImageSource(overflowIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  overflowIcon = _context3.sent;\n                  this.setState({\n                    overflowIcon: overflowIcon\n                  });\n                  _context3.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.overflowIcon) {\n                    this.setState({\n                      overflowIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, this, null, Promise);\n        }\n      }, {\n        key: \"updateActionIconSources\",\n        value: function updateActionIconSources() {\n          var _this$props4, actions, iconSize, iconColor, titleColor, updatedActions;\n\n          return _regenerator.default.async(function updateActionIconSources$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this$props4 = this.props, actions = _this$props4.actions, iconSize = _this$props4.iconSize, iconColor = _this$props4.iconColor, titleColor = _this$props4.titleColor;\n                  _context4.next = 3;\n                  return _regenerator.default.awrap(Promise.all((actions || []).map(function (action) {\n                    if (action.iconName) {\n                      return getImageSource(action.iconName, action.iconSize || iconSize, action.iconColor || iconColor || titleColor).then(function (icon) {\n                        return _objectSpread({}, action, {\n                          icon: icon\n                        });\n                      });\n                    }\n\n                    return Promise.resolve(action);\n                  })));\n\n                case 3:\n                  updatedActions = _context4.sent;\n                  this.setState({\n                    actions: updatedActions\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, null, this, null, Promise);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return _react.default.createElement(_reactNative.ToolbarAndroid, (0, _extends2.default)({}, this.props, this.state, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 14\n            }\n          }));\n        }\n      }]);\n      return IconToolbarAndroid;\n    }(_react.PureComponent), _class.propTypes = {\n      logoName: IconNamePropType,\n      navIconName: IconNamePropType,\n      overflowIconName: IconNamePropType,\n      actions: _propTypes.default.arrayOf(_propTypes.default.shape({\n        title: _propTypes.default.string.isRequired,\n        iconName: IconNamePropType,\n        iconSize: _propTypes.default.number,\n        iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n        show: _propTypes.default.oneOf(['always', 'ifRoom', 'never']),\n        showWithText: _propTypes.default.bool\n      })),\n      iconSize: _propTypes.default.number,\n      iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n      titleColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n    }, _class.defaultProps = {\n      iconSize: 24\n    }, _temp;\n  }\n});","lineCount":309,"map":[[27,0,2,0],[29,0,3,0],[31,0,4,0],[33,0,5,0],[35,0,6,0],[47,0,8,0],[47,6,8,6,"ICON_PROP_NAMES"],[47,21,8,21],[47,24,8,24],[47,25,8,25],[47,35,8,24],[47,37,8,37],[47,48,8,24],[47,50,8,50],[47,62,8,24],[47,63,8,0],[48,0,9,0],[48,6,9,6,"LOGO_ICON_PROP_NAMES"],[48,26,9,26],[48,39,9,33,"ICON_PROP_NAMES"],[48,54,9,26],[48,57,9,50],[48,67,9,26],[48,69,9,0],[49,0,10,0],[49,6,10,6,"NAV_ICON_PROP_NAMES"],[49,25,10,25],[49,38,10,32,"ICON_PROP_NAMES"],[49,53,10,25],[49,56,10,49],[49,69,10,25],[49,71,10,0],[50,0,11,0],[50,6,11,6,"OVERFLOW_ICON_PROP_NAMES"],[50,30,11,30],[50,43,11,37,"ICON_PROP_NAMES"],[50,58,11,30],[50,61,11,54],[50,79,11,30],[50,81,11,0],[51,0,12,0],[51,6,12,6,"ACTIONS_PROP_NAMES"],[51,24,12,24],[51,37,12,31,"ICON_PROP_NAMES"],[51,52,12,24],[51,55,12,48],[51,64,12,24],[51,66,12,0],[53,0,14,0],[53,6,14,6,"arePropsEqual"],[53,19,14,19],[53,22,14,22],[53,31,14,6,"arePropsEqual"],[53,44,14,22],[53,45,14,22,"keys"],[53,49,14,26],[54,0,14,26],[54,11,14,30],[54,21,14,31,"prevProps"],[54,30,14,30],[54,32,14,42,"nextProps"],[54,41,14,30],[55,0,14,30],[55,13,15,2],[55,35,15,10],[55,54,15,15,"prevProps"],[55,63,15,10],[55,65,15,26,"keys"],[55,69,15,10],[55,70,15,2],[55,72,15,33],[55,91,15,38,"nextProps"],[55,100,15,33],[55,102,15,49,"keys"],[55,106,15,33],[55,107,15,2],[55,108,14,30],[56,0,14,30],[56,5,14,26],[57,0,14,26],[57,3,14,0],[59,0,17,0],[59,6,17,6,"areLogoIconPropsEqual"],[59,27,17,27],[59,30,17,30,"arePropsEqual"],[59,43,17,43],[59,44,17,44,"LOGO_ICON_PROP_NAMES"],[59,64,17,43],[59,65,17,0],[60,0,18,0],[60,6,18,6,"areNavIconPropsEqual"],[60,26,18,26],[60,29,18,29,"arePropsEqual"],[60,42,18,42],[60,43,18,43,"NAV_ICON_PROP_NAMES"],[60,62,18,42],[60,63,18,0],[61,0,19,0],[61,6,19,6,"areOverflowIconPropsEqual"],[61,31,19,31],[61,34,19,34,"arePropsEqual"],[61,47,19,47],[61,48,19,48,"OVERFLOW_ICON_PROP_NAMES"],[61,72,19,47],[61,73,19,0],[62,0,20,0],[62,6,20,6,"areActionPropsEqual"],[62,25,20,25],[62,28,20,28,"arePropsEqual"],[62,41,20,41],[62,42,20,42,"ACTIONS_PROP_NAMES"],[62,60,20,41],[62,61,20,0],[64,0,22,15],[64,11,22,24,"createToolbarAndroidComponent"],[64,40,22,15],[64,41,23,2,"IconNamePropType"],[64,57,22,15],[64,59,24,2,"getImageSource"],[64,73,22,15],[64,75,25,2],[65,0,25,2],[67,0,26,2],[68,0,26,2],[70,0,26,2],[72,0,26,2],[73,0,26,2],[75,0,26,2],[77,0,26,2],[78,0,26,2],[79,0,26,2],[81,0,26,2],[82,0,26,2],[82,14,50,4,"state"],[82,19,26,2],[82,22,50,12],[83,0,51,6,"logo"],[83,10,51,6,"logo"],[83,14,51,10],[83,16,51,12,"undefined"],[83,25,50,12],[84,0,52,6,"navIcon"],[84,10,52,6,"navIcon"],[84,17,52,13],[84,19,52,15,"undefined"],[84,28,50,12],[85,0,53,6,"overflowIcon"],[85,10,53,6,"overflowIcon"],[85,22,53,18],[85,24,53,20,"undefined"],[85,33,50,12],[86,0,54,6,"actions"],[86,10,54,6,"actions"],[86,17,54,13],[86,19,54,15,"undefined"],[87,0,50,12],[87,9,26,2],[88,0,26,2],[89,0,26,2],[91,0,26,2],[92,0,26,2],[93,0,26,2],[93,44,57,24],[94,0,58,6],[94,15,58,11,"updateLogoIconSource"],[94,35,58,6],[95,0,59,6],[95,15,59,11,"updateNavIconSource"],[95,34,59,6],[96,0,60,6],[96,15,60,11,"updateOverflowIconSource"],[96,39,60,6],[97,0,61,6],[97,15,61,11,"updateActionIconSources"],[97,38,61,6],[98,0,62,5],[99,0,26,2],[100,0,26,2],[101,0,26,2],[101,43,64,23,"prevProps"],[101,52,26,2],[101,54,64,34],[102,0,65,6],[102,14,65,10],[102,15,65,11,"areLogoIconPropsEqual"],[102,36,65,32],[102,37,65,33,"prevProps"],[102,46,65,32],[102,48,65,44],[102,53,65,49,"props"],[102,58,65,32],[102,59,65,6],[102,61,65,57],[103,0,66,8],[103,17,66,13,"updateLogoIconSource"],[103,37,66,8],[104,0,67,7],[106,0,68,6],[106,14,68,10],[106,15,68,11,"areNavIconPropsEqual"],[106,35,68,31],[106,36,68,32,"prevProps"],[106,45,68,31],[106,47,68,43],[106,52,68,48,"props"],[106,57,68,31],[106,58,68,6],[106,60,68,56],[107,0,69,8],[107,17,69,13,"updateNavIconSource"],[107,36,69,8],[108,0,70,7],[110,0,71,6],[110,14,71,10],[110,15,71,11,"areOverflowIconPropsEqual"],[110,40,71,36],[110,41,71,37,"prevProps"],[110,50,71,36],[110,52,71,48],[110,57,71,53,"props"],[110,62,71,36],[110,63,71,6],[110,65,71,61],[111,0,72,8],[111,17,72,13,"updateOverflowIconSource"],[111,41,72,8],[112,0,73,7],[114,0,74,6],[114,14,74,10],[114,15,74,11,"areActionPropsEqual"],[114,34,74,30],[114,35,74,31,"prevProps"],[114,44,74,30],[114,46,74,42],[114,51,74,47,"props"],[114,56,74,30],[114,57,74,6],[114,59,74,55],[115,0,75,8],[115,17,75,13,"updateActionIconSources"],[115,40,75,8],[116,0,76,7],[117,0,77,5],[118,0,26,2],[119,0,26,2],[120,0,26,2],[121,0,26,2],[123,0,26,2],[124,0,26,2],[125,0,26,2],[126,0,26,2],[127,0,26,2],[127,32,80,60],[127,37,80,65,"props"],[127,42,26,2],[127,44,80,14,"logoName"],[127,52,26,2],[127,67,80,14,"logoName"],[127,75,26,2],[127,77,80,24,"iconSize"],[127,85,26,2],[127,100,80,24,"iconSize"],[127,108,26,2],[127,110,80,34,"iconColor"],[127,119,26,2],[127,134,80,34,"iconColor"],[127,143,26,2],[127,145,80,45,"titleColor"],[127,155,26,2],[127,170,80,45,"titleColor"],[127,180,26,2],[129,0,26,2],[129,23,81,10,"logoName"],[129,31,26,2],[130,0,26,2],[131,0,26,2],[132,0,26,2],[134,0,26,2],[135,0,26,2],[135,52,82,27,"getImageSource"],[135,66,82,41],[135,67,83,10,"logoName"],[135,75,82,41],[135,77,84,10,"iconSize"],[135,85,82,41],[135,87,85,10,"iconColor"],[135,96,85,19],[135,100,85,23,"titleColor"],[135,110,82,41],[135,111,26,2],[137,0,26,2],[138,0,82,14,"logo"],[138,18,82,14,"logo"],[138,22,26,2],[139,0,87,8],[139,23,87,13,"setState"],[139,31,87,8],[139,32,87,22],[140,0,87,24,"logo"],[140,20,87,24,"logo"],[140,24,87,28],[140,26,87,24,"logo"],[141,0,87,22],[141,19,87,8],[142,0,26,2],[143,0,26,2],[145,0,26,2],[146,0,89,13],[146,22,89,17],[146,27,89,22,"state"],[146,32,89,17],[146,33,89,28,"logo"],[146,37,89,13],[146,39,89,34],[147,0,90,8],[147,25,90,13,"setState"],[147,33,90,8],[147,34,90,22],[148,0,90,24,"logo"],[148,22,90,24,"logo"],[148,26,90,28],[148,28,90,30,"undefined"],[149,0,90,22],[149,21,90,8],[150,0,91,7],[152,0,26,2],[153,0,26,2],[154,0,26,2],[155,0,26,2],[156,0,26,2],[157,0,26,2],[158,0,26,2],[159,0,26,2],[160,0,26,2],[161,0,26,2],[162,0,26,2],[164,0,26,2],[165,0,26,2],[166,0,26,2],[167,0,26,2],[168,0,26,2],[168,33,95,63],[168,38,95,68,"props"],[168,43,26,2],[168,45,95,14,"navIconName"],[168,56,26,2],[168,72,95,14,"navIconName"],[168,83,26,2],[168,85,95,27,"iconSize"],[168,93,26,2],[168,109,95,27,"iconSize"],[168,117,26,2],[168,119,95,37,"iconColor"],[168,128,26,2],[168,144,95,37,"iconColor"],[168,153,26,2],[168,155,95,48,"titleColor"],[168,165,26,2],[168,181,95,48,"titleColor"],[168,191,26,2],[170,0,26,2],[170,23,96,10,"navIconName"],[170,34,26,2],[171,0,26,2],[172,0,26,2],[173,0,26,2],[175,0,26,2],[176,0,26,2],[176,52,97,30,"getImageSource"],[176,66,97,44],[176,67,98,10,"navIconName"],[176,78,97,44],[176,80,99,10,"iconSize"],[176,88,97,44],[176,90,100,10,"iconColor"],[176,99,100,19],[176,103,100,23,"titleColor"],[176,113,97,44],[176,114,26,2],[178,0,26,2],[179,0,97,14,"navIcon"],[179,18,97,14,"navIcon"],[179,25,26,2],[180,0,102,8],[180,23,102,13,"setState"],[180,31,102,8],[180,32,102,22],[181,0,102,24,"navIcon"],[181,20,102,24,"navIcon"],[181,27,102,31],[181,29,102,24,"navIcon"],[182,0,102,22],[182,19,102,8],[183,0,26,2],[184,0,26,2],[186,0,26,2],[187,0,104,13],[187,22,104,17],[187,27,104,22,"state"],[187,32,104,17],[187,33,104,28,"navIcon"],[187,40,104,13],[187,42,104,37],[188,0,105,8],[188,25,105,13,"setState"],[188,33,105,8],[188,34,105,22],[189,0,105,24,"navIcon"],[189,22,105,24,"navIcon"],[189,29,105,31],[189,31,105,33,"undefined"],[190,0,105,22],[190,21,105,8],[191,0,106,7],[193,0,26,2],[194,0,26,2],[195,0,26,2],[196,0,26,2],[197,0,26,2],[198,0,26,2],[199,0,26,2],[200,0,26,2],[201,0,26,2],[202,0,26,2],[203,0,26,2],[205,0,26,2],[206,0,26,2],[207,0,26,2],[208,0,26,2],[209,0,26,2],[209,33,110,68],[209,38,110,73,"props"],[209,43,26,2],[209,45,110,14,"overflowIconName"],[209,61,26,2],[209,77,110,14,"overflowIconName"],[209,93,26,2],[209,95,110,32,"iconSize"],[209,103,26,2],[209,119,110,32,"iconSize"],[209,127,26,2],[209,129,110,42,"iconColor"],[209,138,26,2],[209,154,110,42,"iconColor"],[209,163,26,2],[209,165,110,53,"titleColor"],[209,175,26,2],[209,191,110,53,"titleColor"],[209,201,26,2],[211,0,26,2],[211,23,111,10,"overflowIconName"],[211,39,26,2],[212,0,26,2],[213,0,26,2],[214,0,26,2],[216,0,26,2],[217,0,26,2],[217,52,112,35,"getImageSource"],[217,66,112,49],[217,67,113,10,"overflowIconName"],[217,83,112,49],[217,85,114,10,"iconSize"],[217,93,112,49],[217,95,115,10,"iconColor"],[217,104,115,19],[217,108,115,23,"titleColor"],[217,118,112,49],[217,119,26,2],[219,0,26,2],[220,0,112,14,"overflowIcon"],[220,18,112,14,"overflowIcon"],[220,30,26,2],[221,0,117,8],[221,23,117,13,"setState"],[221,31,117,8],[221,32,117,22],[222,0,117,24,"overflowIcon"],[222,20,117,24,"overflowIcon"],[222,32,117,36],[222,34,117,24,"overflowIcon"],[223,0,117,22],[223,19,117,8],[224,0,26,2],[225,0,26,2],[227,0,26,2],[228,0,119,13],[228,22,119,17],[228,27,119,22,"state"],[228,32,119,17],[228,33,119,28,"overflowIcon"],[228,45,119,13],[228,47,119,42],[229,0,120,8],[229,25,120,13,"setState"],[229,33,120,8],[229,34,120,22],[230,0,120,24,"overflowIcon"],[230,22,120,24,"overflowIcon"],[230,34,120,36],[230,36,120,38,"undefined"],[231,0,120,22],[231,21,120,8],[232,0,121,7],[234,0,26,2],[235,0,26,2],[236,0,26,2],[237,0,26,2],[238,0,26,2],[239,0,26,2],[240,0,26,2],[241,0,26,2],[242,0,26,2],[243,0,26,2],[244,0,26,2],[246,0,26,2],[247,0,26,2],[248,0,26,2],[249,0,26,2],[250,0,26,2],[250,33,125,59],[250,38,125,64,"props"],[250,43,26,2],[250,45,125,14,"actions"],[250,52,26,2],[250,68,125,14,"actions"],[250,75,26,2],[250,77,125,23,"iconSize"],[250,85,26,2],[250,101,125,23,"iconSize"],[250,109,26,2],[250,111,125,33,"iconColor"],[250,120,26,2],[250,136,125,33,"iconColor"],[250,145,26,2],[250,147,125,44,"titleColor"],[250,157,26,2],[250,173,125,44,"titleColor"],[250,183,26,2],[251,0,26,2],[252,0,26,2],[252,52,126,35,"Promise"],[252,59,126,42],[252,60,126,43,"all"],[252,63,126,35],[252,64,127,8],[252,65,127,9,"actions"],[252,72,127,16],[252,76,127,20],[252,78,127,8],[252,80,127,24,"map"],[252,83,127,8],[252,84,127,28],[252,94,127,28,"action"],[252,100,127,34],[252,102,127,38],[253,0,128,10],[253,24,128,14,"action"],[253,30,128,20],[253,31,128,21,"iconName"],[253,39,128,10],[253,41,128,31],[254,0,129,12],[254,29,129,19,"getImageSource"],[254,43,129,33],[254,44,130,14,"action"],[254,50,130,20],[254,51,130,21,"iconName"],[254,59,129,33],[254,61,131,14,"action"],[254,67,131,20],[254,68,131,21,"iconSize"],[254,76,131,14],[254,80,131,33,"iconSize"],[254,88,129,33],[254,90,132,14,"action"],[254,96,132,20],[254,97,132,21,"iconColor"],[254,106,132,14],[254,110,132,34,"iconColor"],[254,119,132,14],[254,123,132,47,"titleColor"],[254,133,129,33],[254,134,129,19],[254,135,133,14,"then"],[254,139,129,19],[254,140,133,19],[254,150,133,19,"icon"],[254,154,133,23],[255,0,133,23],[255,49,133,33,"action"],[255,55,133,23],[256,0,133,41,"icon"],[256,26,133,41,"icon"],[256,30,133,45],[256,32,133,41,"icon"],[257,0,133,23],[258,0,133,23],[258,23,129,19],[258,24,129,12],[259,0,134,11],[261,0,135,10],[261,27,135,17,"Promise"],[261,34,135,24],[261,35,135,25,"resolve"],[261,42,135,17],[261,43,135,33,"action"],[261,49,135,17],[261,50,135,10],[262,0,136,9],[262,19,127,8],[262,20,126,35],[262,21,26,2],[264,0,26,2],[265,0,126,12,"updatedActions"],[265,18,126,12,"updatedActions"],[265,32,26,2],[266,0,138,6],[266,23,138,11,"setState"],[266,31,138,6],[266,32,138,20],[267,0,138,22,"actions"],[267,20,138,22,"actions"],[267,27,138,29],[267,29,138,31,"updatedActions"],[268,0,138,20],[268,19,138,6],[270,0,26,2],[271,0,26,2],[272,0,26,2],[273,0,26,2],[274,0,26,2],[275,0,26,2],[276,0,26,2],[277,0,26,2],[278,0,26,2],[279,0,26,2],[279,33,141,13],[280,0,142,6],[280,17,142,13],[280,46,142,14],[280,73,142,13],[280,102,142,33],[280,107,142,38,"props"],[280,112,142,13],[280,114,142,49],[280,119,142,54,"state"],[280,124,142,13],[281,0,142,13],[282,0,142,13],[283,0,142,13],[284,0,142,13],[285,0,142,13],[286,0,142,13],[286,13,142,6],[287,0,143,5],[288,0,26,2],[289,0,26,2],[290,0,26,2],[290,6,26,42,"PureComponent"],[290,26,26,2],[290,36,27,11,"propTypes"],[290,45,26,2],[290,48,27,23],[291,0,28,6,"logoName"],[291,6,28,6,"logoName"],[291,14,28,14],[291,16,28,16,"IconNamePropType"],[291,32,27,23],[292,0,29,6,"navIconName"],[292,6,29,6,"navIconName"],[292,17,29,17],[292,19,29,19,"IconNamePropType"],[292,35,27,23],[293,0,30,6,"overflowIconName"],[293,6,30,6,"overflowIconName"],[293,22,30,22],[293,24,30,24,"IconNamePropType"],[293,40,27,23],[294,0,31,6,"actions"],[294,6,31,6,"actions"],[294,13,31,13],[294,15,31,15,"PropTypes"],[294,34,31,25,"arrayOf"],[294,41,31,15],[294,42,32,8,"PropTypes"],[294,61,32,18,"shape"],[294,66,32,8],[294,67,32,24],[295,0,33,10,"title"],[295,8,33,10,"title"],[295,13,33,15],[295,15,33,17,"PropTypes"],[295,34,33,27,"string"],[295,40,33,17],[295,41,33,34,"isRequired"],[295,51,32,24],[296,0,34,10,"iconName"],[296,8,34,10,"iconName"],[296,16,34,18],[296,18,34,20,"IconNamePropType"],[296,34,32,24],[297,0,35,10,"iconSize"],[297,8,35,10,"iconSize"],[297,16,35,18],[297,18,35,20,"PropTypes"],[297,37,35,30,"number"],[297,43,32,24],[298,0,36,10,"iconColor"],[298,8,36,10,"iconColor"],[298,17,36,19],[298,19,36,21,"PropTypes"],[298,38,36,31,"oneOfType"],[298,47,36,21],[298,48,36,41],[298,49,36,42,"PropTypes"],[298,68,36,52,"string"],[298,74,36,41],[298,76,36,60,"PropTypes"],[298,95,36,70,"number"],[298,101,36,41],[298,102,36,21],[298,103,32,24],[299,0,37,10,"show"],[299,8,37,10,"show"],[299,12,37,14],[299,14,37,16,"PropTypes"],[299,33,37,26,"oneOf"],[299,38,37,16],[299,39,37,32],[299,40,37,33],[299,48,37,32],[299,50,37,43],[299,58,37,32],[299,60,37,53],[299,67,37,32],[299,68,37,16],[299,69,32,24],[300,0,38,10,"showWithText"],[300,8,38,10,"showWithText"],[300,20,38,22],[300,22,38,24,"PropTypes"],[300,41,38,34,"bool"],[301,0,32,24],[301,7,32,8],[301,8,31,15],[301,9,27,23],[302,0,41,6,"iconSize"],[302,6,41,6,"iconSize"],[302,14,41,14],[302,16,41,16,"PropTypes"],[302,35,41,26,"number"],[302,41,27,23],[303,0,42,6,"iconColor"],[303,6,42,6,"iconColor"],[303,15,42,15],[303,17,42,17,"PropTypes"],[303,36,42,27,"oneOfType"],[303,45,42,17],[303,46,42,37],[303,47,42,38,"PropTypes"],[303,66,42,48,"string"],[303,72,42,37],[303,74,42,56,"PropTypes"],[303,93,42,66,"number"],[303,99,42,37],[303,100,42,17],[303,101,27,23],[304,0,43,6,"titleColor"],[304,6,43,6,"titleColor"],[304,16,43,16],[304,18,43,18,"PropTypes"],[304,37,43,28,"oneOfType"],[304,46,43,18],[304,47,43,38],[304,48,43,39,"PropTypes"],[304,67,43,49,"string"],[304,73,43,38],[304,75,43,57,"PropTypes"],[304,94,43,67,"number"],[304,100,43,38],[304,101,43,18],[305,0,27,23],[305,5,26,2],[305,14,46,11,"defaultProps"],[305,26,26,2],[305,29,46,26],[306,0,47,6,"iconSize"],[306,6,47,6,"iconSize"],[306,14,47,14],[306,16,47,16],[307,0,46,26],[307,5,26,2],[308,0,145,1]],"functionMap":{"names":["<global>","arePropsEqual","<anonymous>","createToolbarAndroidComponent","IconToolbarAndroid","IconToolbarAndroid#componentDidMount","IconToolbarAndroid#componentDidUpdate","IconToolbarAndroid#updateLogoIconSource","IconToolbarAndroid#updateNavIconSource","IconToolbarAndroid#updateOverflowIconSource","IconToolbarAndroid#updateActionIconSources","map$argument_0","getImageSource.then$argument_0","IconToolbarAndroid#render"],"mappings":"AAA;sBCa,QC;uDFC;eGO;SCI;IC+B;KDK;IEE;KFa;IGE;KHa;IIE;KJa;IKE;KLa;IME;4BCG;mBCM,6BD;SDG;KNG;ISE;KTE;GDC;CHC"}},"type":"js/module"}]}