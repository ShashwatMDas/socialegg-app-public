{"dependencies":[{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"./InspectorAgent","data":{"isAsync":false}},{"name":"./JSInspector","data":{"isAsync":false}},{"name":"../Network/XMLHttpRequest","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/inherits\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\");\n\n  function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var InspectorAgent = _$$_REQUIRE(_dependencyMap[5], \"./InspectorAgent\");\n\n  var JSInspector = _$$_REQUIRE(_dependencyMap[6], \"./JSInspector\");\n\n  var XMLHttpRequest = _$$_REQUIRE(_dependencyMap[7], \"../Network/XMLHttpRequest\");\n\n  var Interceptor = function () {\n    function Interceptor(agent) {\n      _classCallCheck(this, Interceptor);\n\n      this._agent = agent;\n      this._requests = new Map();\n    }\n\n    _createClass(Interceptor, [{\n      key: \"getData\",\n      value: function getData(requestId) {\n        return this._requests.get(requestId);\n      }\n    }, {\n      key: \"requestSent\",\n      value: function requestSent(id, url, method, headers) {\n        var requestId = String(id);\n\n        this._requests.set(requestId, '');\n\n        var request = {\n          url: url,\n          method: method,\n          headers: headers,\n          initialPriority: 'Medium'\n        };\n        var event = {\n          requestId: requestId,\n          documentURL: '',\n          frameId: '1',\n          loaderId: '1',\n          request: request,\n          timestamp: JSInspector.getTimestamp(),\n          initiator: {\n            type: 'other'\n          },\n          type: 'Other'\n        };\n\n        this._agent.sendEvent('requestWillBeSent', event);\n      }\n    }, {\n      key: \"responseReceived\",\n      value: function responseReceived(id, url, status, headers) {\n        var requestId = String(id);\n        var response = {\n          url: url,\n          status: status,\n          statusText: String(status),\n          headers: headers,\n          requestHeaders: {},\n          mimeType: this._getMimeType(headers),\n          connectionReused: false,\n          connectionId: -1,\n          encodedDataLength: 0,\n          securityState: 'unknown'\n        };\n        var event = {\n          requestId: requestId,\n          frameId: '1',\n          loaderId: '1',\n          timestamp: JSInspector.getTimestamp(),\n          type: 'Other',\n          response: response\n        };\n\n        this._agent.sendEvent('responseReceived', event);\n      }\n    }, {\n      key: \"dataReceived\",\n      value: function dataReceived(id, data) {\n        var requestId = String(id);\n        var existingData = this._requests.get(requestId) || '';\n\n        this._requests.set(requestId, existingData.concat(data));\n\n        var event = {\n          requestId: requestId,\n          timestamp: JSInspector.getTimestamp(),\n          dataLength: data.length,\n          encodedDataLength: data.length\n        };\n\n        this._agent.sendEvent('dataReceived', event);\n      }\n    }, {\n      key: \"loadingFinished\",\n      value: function loadingFinished(id, encodedDataLength) {\n        var event = {\n          requestId: String(id),\n          timestamp: JSInspector.getTimestamp(),\n          encodedDataLength: encodedDataLength\n        };\n\n        this._agent.sendEvent('loadingFinished', event);\n      }\n    }, {\n      key: \"loadingFailed\",\n      value: function loadingFailed(id, error) {\n        var event = {\n          requestId: String(id),\n          timestamp: JSInspector.getTimestamp(),\n          type: 'Other',\n          errorText: error\n        };\n\n        this._agent.sendEvent('loadingFailed', event);\n      }\n    }, {\n      key: \"_getMimeType\",\n      value: function _getMimeType(headers) {\n        var contentType = headers['Content-Type'] || '';\n        return contentType.split(';')[0];\n      }\n    }]);\n\n    return Interceptor;\n  }();\n\n  var NetworkAgent = function (_InspectorAgent) {\n    _inherits(NetworkAgent, _InspectorAgent);\n\n    var _super = _createSuper(NetworkAgent);\n\n    function NetworkAgent() {\n      _classCallCheck(this, NetworkAgent);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(NetworkAgent, [{\n      key: \"enable\",\n      value: function enable(_ref) {\n        var maxResourceBufferSize = _ref.maxResourceBufferSize,\n            maxTotalBufferSize = _ref.maxTotalBufferSize;\n        this._interceptor = new Interceptor(this);\n        XMLHttpRequest.setInterceptor(this._interceptor);\n      }\n    }, {\n      key: \"disable\",\n      value: function disable() {\n        XMLHttpRequest.setInterceptor(null);\n        this._interceptor = null;\n      }\n    }, {\n      key: \"getResponseBody\",\n      value: function getResponseBody(_ref2) {\n        var requestId = _ref2.requestId;\n        return {\n          body: this.interceptor().getData(requestId),\n          base64Encoded: false\n        };\n      }\n    }, {\n      key: \"interceptor\",\n      value: function interceptor() {\n        if (this._interceptor) {\n          return this._interceptor;\n        } else {\n          throw Error('_interceptor can not be null');\n        }\n      }\n    }]);\n\n    return NetworkAgent;\n  }(InspectorAgent);\n\n  NetworkAgent.DOMAIN = 'Network';\n  module.exports = NetworkAgent;\n});","lineCount":193,"map":[[2,0,11,0],[18,0,13,0],[18,6,13,6,"InspectorAgent"],[18,20,13,20],[18,23,13,23,"require"],[18,34,13,30],[18,73,13,0],[20,0,14,0],[20,6,14,6,"JSInspector"],[20,17,14,17],[20,20,14,20,"require"],[20,31,14,27],[20,67,14,0],[22,0,15,0],[22,6,15,6,"XMLHttpRequest"],[22,20,15,20],[22,23,15,23,"require"],[22,34,15,30],[22,82,15,0],[24,6,142,6,"Interceptor"],[24,17],[25,0,146,2],[25,25,146,14,"agent"],[25,30,146,2],[25,32,146,35],[26,0,146,35],[28,0,147,4],[28,11,147,9,"_agent"],[28,17,147,4],[28,20,147,18,"agent"],[28,25,147,4],[29,0,148,4],[29,11,148,9,"_requests"],[29,20,148,4],[29,23,148,21],[29,27,148,25,"Map"],[29,30,148,21],[29,32,148,4],[30,0,149,3],[34,30,151,10,"requestId"],[34,39],[34,41,151,38],[35,0,152,4],[35,15,152,11],[35,20,152,16,"_requests"],[35,29,152,11],[35,30,152,26,"get"],[35,33,152,11],[35,34,152,30,"requestId"],[35,43,152,11],[35,44,152,4],[36,0,153,3],[39,34,155,14,"id"],[39,36],[39,38,155,26,"url"],[39,41],[39,43,155,39,"method"],[39,49],[39,51,155,55,"headers"],[39,58],[39,60,155,72],[40,0,156,4],[40,12,156,10,"requestId"],[40,21,156,19],[40,24,156,22,"String"],[40,30,156,28],[40,31,156,29,"id"],[40,33,156,28],[40,34,156,4],[42,0,157,4],[42,13,157,9,"_requests"],[42,22,157,4],[42,23,157,19,"set"],[42,26,157,4],[42,27,157,23,"requestId"],[42,36,157,4],[42,38,157,34],[42,40,157,4],[44,0,159,4],[44,12,159,10,"request"],[44,19,159,26],[44,22,159,29],[45,0,160,6,"url"],[45,10,160,6,"url"],[45,13,160,9],[45,15,160,6,"url"],[45,18,159,29],[46,0,161,6,"method"],[46,10,161,6,"method"],[46,16,161,12],[46,18,161,6,"method"],[46,24,159,29],[47,0,162,6,"headers"],[47,10,162,6,"headers"],[47,17,162,13],[47,19,162,6,"headers"],[47,26,159,29],[48,0,163,6,"initialPriority"],[48,10,163,6,"initialPriority"],[48,25,163,21],[48,27,163,23],[49,0,159,29],[49,9,159,4],[50,0,165,4],[50,12,165,10,"event"],[50,17,165,39],[50,20,165,42],[51,0,166,6,"requestId"],[51,10,166,6,"requestId"],[51,19,166,15],[51,21,166,6,"requestId"],[51,30,165,42],[52,0,167,6,"documentURL"],[52,10,167,6,"documentURL"],[52,21,167,17],[52,23,167,19],[52,25,165,42],[53,0,168,6,"frameId"],[53,10,168,6,"frameId"],[53,17,168,13],[53,19,168,15],[53,22,165,42],[54,0,169,6,"loaderId"],[54,10,169,6,"loaderId"],[54,18,169,14],[54,20,169,16],[54,23,165,42],[55,0,170,6,"request"],[55,10,170,6,"request"],[55,17,170,13],[55,19,170,6,"request"],[55,26,165,42],[56,0,171,6,"timestamp"],[56,10,171,6,"timestamp"],[56,19,171,15],[56,21,171,17,"JSInspector"],[56,32,171,28],[56,33,171,29,"getTimestamp"],[56,45,171,17],[56,47,165,42],[57,0,172,6,"initiator"],[57,10,172,6,"initiator"],[57,19,172,15],[57,21,172,17],[58,0,176,8,"type"],[58,12,176,8,"type"],[58,16,176,12],[58,18,176,14],[59,0,172,17],[59,11,165,42],[60,0,178,6,"type"],[60,10,178,6,"type"],[60,14,178,10],[60,16,178,12],[61,0,165,42],[61,9,165,4],[63,0,180,4],[63,13,180,9,"_agent"],[63,19,180,4],[63,20,180,16,"sendEvent"],[63,29,180,4],[63,30,180,26],[63,49,180,4],[63,51,180,47,"event"],[63,56,180,4],[64,0,181,3],[67,39,183,19,"id"],[67,41],[67,43,183,31,"url"],[67,46],[67,48,183,44,"status"],[67,54],[67,56,183,60,"headers"],[67,63],[67,65,183,77],[68,0,184,4],[68,12,184,10,"requestId"],[68,21,184,19],[68,24,184,22,"String"],[68,30,184,28],[68,31,184,29,"id"],[68,33,184,28],[68,34,184,4],[69,0,185,4],[69,12,185,10,"response"],[69,20,185,28],[69,23,185,31],[70,0,186,6,"url"],[70,10,186,6,"url"],[70,13,186,9],[70,15,186,6,"url"],[70,18,185,31],[71,0,187,6,"status"],[71,10,187,6,"status"],[71,16,187,12],[71,18,187,6,"status"],[71,24,185,31],[72,0,188,6,"statusText"],[72,10,188,6,"statusText"],[72,20,188,16],[72,22,188,18,"String"],[72,28,188,24],[72,29,188,25,"status"],[72,35,188,24],[72,36,185,31],[73,0,189,6,"headers"],[73,10,189,6,"headers"],[73,17,189,13],[73,19,189,6,"headers"],[73,26,185,31],[74,0,191,6,"requestHeaders"],[74,10,191,6,"requestHeaders"],[74,24,191,20],[74,26,191,22],[74,28,185,31],[75,0,192,6,"mimeType"],[75,10,192,6,"mimeType"],[75,18,192,14],[75,20,192,16],[75,25,192,21,"_getMimeType"],[75,37,192,16],[75,38,192,34,"headers"],[75,45,192,16],[75,46,185,31],[76,0,193,6,"connectionReused"],[76,10,193,6,"connectionReused"],[76,26,193,22],[76,28,193,24],[76,33,185,31],[77,0,194,6,"connectionId"],[77,10,194,6,"connectionId"],[77,22,194,18],[77,24,194,20],[77,25,194,21],[77,26,185,31],[78,0,195,6,"encodedDataLength"],[78,10,195,6,"encodedDataLength"],[78,27,195,23],[78,29,195,25],[78,30,185,31],[79,0,196,6,"securityState"],[79,10,196,6,"securityState"],[79,23,196,19],[79,25,196,21],[80,0,185,31],[80,9,185,4],[81,0,199,4],[81,12,199,10,"event"],[81,17,199,38],[81,20,199,41],[82,0,200,6,"requestId"],[82,10,200,6,"requestId"],[82,19,200,15],[82,21,200,6,"requestId"],[82,30,199,41],[83,0,201,6,"frameId"],[83,10,201,6,"frameId"],[83,17,201,13],[83,19,201,15],[83,22,199,41],[84,0,202,6,"loaderId"],[84,10,202,6,"loaderId"],[84,18,202,14],[84,20,202,16],[84,23,199,41],[85,0,203,6,"timestamp"],[85,10,203,6,"timestamp"],[85,19,203,15],[85,21,203,17,"JSInspector"],[85,32,203,28],[85,33,203,29,"getTimestamp"],[85,45,203,17],[85,47,199,41],[86,0,204,6,"type"],[86,10,204,6,"type"],[86,14,204,10],[86,16,204,12],[86,23,199,41],[87,0,205,6,"response"],[87,10,205,6,"response"],[87,18,205,14],[87,20,205,6,"response"],[88,0,199,41],[88,9,199,4],[90,0,207,4],[90,13,207,9,"_agent"],[90,19,207,4],[90,20,207,16,"sendEvent"],[90,29,207,4],[90,30,207,26],[90,48,207,4],[90,50,207,46,"event"],[90,55,207,4],[91,0,208,3],[94,35,210,15,"id"],[94,37],[94,39,210,27,"data"],[94,43],[94,45,210,41],[95,0,211,4],[95,12,211,10,"requestId"],[95,21,211,19],[95,24,211,22,"String"],[95,30,211,28],[95,31,211,29,"id"],[95,33,211,28],[95,34,211,4],[96,0,212,4],[96,12,212,10,"existingData"],[96,24,212,22],[96,27,212,25],[96,32,212,30,"_requests"],[96,41,212,25],[96,42,212,40,"get"],[96,45,212,25],[96,46,212,44,"requestId"],[96,55,212,25],[96,60,212,58],[96,62,212,4],[98,0,213,4],[98,13,213,9,"_requests"],[98,22,213,4],[98,23,213,19,"set"],[98,26,213,4],[98,27,213,23,"requestId"],[98,36,213,4],[98,38,213,34,"existingData"],[98,50,213,46],[98,51,213,47,"concat"],[98,57,213,34],[98,58,213,54,"data"],[98,62,213,34],[98,63,213,4],[100,0,214,4],[100,12,214,10,"event"],[100,17,214,29],[100,20,214,32],[101,0,215,6,"requestId"],[101,10,215,6,"requestId"],[101,19,215,15],[101,21,215,6,"requestId"],[101,30,214,32],[102,0,216,6,"timestamp"],[102,10,216,6,"timestamp"],[102,19,216,15],[102,21,216,17,"JSInspector"],[102,32,216,28],[102,33,216,29,"getTimestamp"],[102,45,216,17],[102,47,214,32],[103,0,217,6,"dataLength"],[103,10,217,6,"dataLength"],[103,20,217,16],[103,22,217,18,"data"],[103,26,217,22],[103,27,217,23,"length"],[103,33,214,32],[104,0,218,6,"encodedDataLength"],[104,10,218,6,"encodedDataLength"],[104,27,218,23],[104,29,218,25,"data"],[104,33,218,29],[104,34,218,30,"length"],[105,0,214,32],[105,9,214,4],[107,0,220,4],[107,13,220,9,"_agent"],[107,19,220,4],[107,20,220,16,"sendEvent"],[107,29,220,4],[107,30,220,26],[107,44,220,4],[107,46,220,42,"event"],[107,51,220,4],[108,0,221,3],[111,38,223,18,"id"],[111,40],[111,42,223,30,"encodedDataLength"],[111,59],[111,61,223,57],[112,0,224,4],[112,12,224,10,"event"],[112,17,224,37],[112,20,224,40],[113,0,225,6,"requestId"],[113,10,225,6,"requestId"],[113,19,225,15],[113,21,225,17,"String"],[113,27,225,23],[113,28,225,24,"id"],[113,30,225,23],[113,31,224,40],[114,0,226,6,"timestamp"],[114,10,226,6,"timestamp"],[114,19,226,15],[114,21,226,17,"JSInspector"],[114,32,226,28],[114,33,226,29,"getTimestamp"],[114,45,226,17],[114,47,224,40],[115,0,227,6,"encodedDataLength"],[115,10,227,6,"encodedDataLength"],[115,27,227,23],[115,29,227,25,"encodedDataLength"],[116,0,224,40],[116,9,224,4],[118,0,229,4],[118,13,229,9,"_agent"],[118,19,229,4],[118,20,229,16,"sendEvent"],[118,29,229,4],[118,30,229,26],[118,47,229,4],[118,49,229,45,"event"],[118,54,229,4],[119,0,230,3],[122,36,232,16,"id"],[122,38],[122,40,232,28,"error"],[122,45],[122,47,232,43],[123,0,233,4],[123,12,233,10,"event"],[123,17,233,35],[123,20,233,38],[124,0,234,6,"requestId"],[124,10,234,6,"requestId"],[124,19,234,15],[124,21,234,17,"String"],[124,27,234,23],[124,28,234,24,"id"],[124,30,234,23],[124,31,233,38],[125,0,235,6,"timestamp"],[125,10,235,6,"timestamp"],[125,19,235,15],[125,21,235,17,"JSInspector"],[125,32,235,28],[125,33,235,29,"getTimestamp"],[125,45,235,17],[125,47,233,38],[126,0,236,6,"type"],[126,10,236,6,"type"],[126,14,236,10],[126,16,236,12],[126,23,233,38],[127,0,237,6,"errorText"],[127,10,237,6,"errorText"],[127,19,237,15],[127,21,237,17,"error"],[128,0,233,38],[128,9,233,4],[130,0,239,4],[130,13,239,9,"_agent"],[130,19,239,4],[130,20,239,16,"sendEvent"],[130,29,239,4],[130,30,239,26],[130,45,239,4],[130,47,239,43,"event"],[130,52,239,4],[131,0,240,3],[134,35,242,15,"headers"],[134,42],[134,44,242,40],[135,0,243,4],[135,12,243,10,"contentType"],[135,23,243,21],[135,26,243,24,"headers"],[135,33,243,31],[135,34,243,32],[135,48,243,31],[135,49,243,24],[135,53,243,51],[135,55,243,4],[136,0,244,4],[136,15,244,11,"contentType"],[136,26,244,22],[136,27,244,23,"split"],[136,32,244,11],[136,33,244,29],[136,36,244,11],[136,38,244,34],[136,39,244,11],[136,40,244,4],[137,0,245,3],[143,6,253,6,"NetworkAgent"],[143,18],[156,35,259,66],[157,0,259,66],[157,12,259,10,"maxResourceBufferSize"],[157,33,259,66],[157,41,259,10,"maxResourceBufferSize"],[157,62,259,66],[158,0,259,66],[158,12,259,33,"maxTotalBufferSize"],[158,30,259,66],[158,38,259,33,"maxTotalBufferSize"],[158,56,259,66],[159,0,260,4],[159,13,260,9,"_interceptor"],[159,25,260,4],[159,28,260,24],[159,32,260,28,"Interceptor"],[159,43,260,24],[159,44,260,40],[159,48,260,24],[159,49,260,4],[160,0,261,4,"XMLHttpRequest"],[160,8,261,4,"XMLHttpRequest"],[160,22,261,18],[160,23,261,19,"setInterceptor"],[160,37,261,4],[160,38,261,34],[160,43,261,39,"_interceptor"],[160,55,261,4],[161,0,262,3],[164,32,264,12],[165,0,265,4,"XMLHttpRequest"],[165,8,265,4,"XMLHttpRequest"],[165,22,265,18],[165,23,265,19,"setInterceptor"],[165,37,265,4],[165,38,265,34],[165,42,265,4],[166,0,266,4],[166,13,266,9,"_interceptor"],[166,25,266,4],[166,28,266,24],[166,32,266,4],[167,0,267,3],[170,45,273,46],[171,0,273,46],[171,12,270,4,"requestId"],[171,21,273,46],[171,30,270,4,"requestId"],[171,39,273,46],[172,0,274,4],[172,15,274,11],[173,0,274,12,"body"],[173,10,274,12,"body"],[173,14,274,16],[173,16,274,18],[173,21,274,23,"interceptor"],[173,32,274,18],[173,35,274,37,"getData"],[173,42,274,18],[173,43,274,45,"requestId"],[173,52,274,18],[173,53,274,11],[174,0,274,57,"base64Encoded"],[174,10,274,57,"base64Encoded"],[174,23,274,70],[174,25,274,72],[175,0,274,11],[175,9,274,4],[176,0,275,3],[179,36,277,29],[180,0,278,4],[180,12,278,8],[180,17,278,13,"_interceptor"],[180,29,278,4],[180,31,278,27],[181,0,279,6],[181,17,279,13],[181,22,279,18,"_interceptor"],[181,34,279,6],[182,0,280,5],[182,9,278,4],[182,15,280,11],[183,0,281,6],[183,16,281,12,"Error"],[183,21,281,17],[183,22,281,18],[183,52,281,17],[183,53,281,6],[184,0,282,5],[185,0,283,3],[189,4,253,27,"InspectorAgent"],[189,18],[191,0,253,6,"NetworkAgent"],[191,2,253,6,"NetworkAgent"],[191,14],[191,15,254,9,"DOMAIN"],[191,21],[191,24,254,48],[191,33],[192,0,286,0,"module"],[192,2,286,0,"module"],[192,8,286,6],[192,9,286,7,"exports"],[192,16,286,0],[192,19,286,17,"NetworkAgent"],[192,31,286,0]],"functionMap":{"names":["<global>","Interceptor","Interceptor#constructor","Interceptor#getData","Interceptor#requestSent","Interceptor#responseReceived","Interceptor#dataReceived","Interceptor#loadingFinished","Interceptor#loadingFailed","Interceptor#_getMimeType","NetworkAgent","enable","disable","getResponseBody","interceptor"],"mappings":"AAA;AC6I;ECI;GDG;EEE;GFE;EGE;GH0B;EIE;GJyB;EKE;GLW;EME;GNO;EOE;GPQ;EQE;GRG;CDC;AUO;ECM;GDG;EEE;GFG;EGE;GHM;EIE;GJM;CVC"}},"type":"js/module"}]}