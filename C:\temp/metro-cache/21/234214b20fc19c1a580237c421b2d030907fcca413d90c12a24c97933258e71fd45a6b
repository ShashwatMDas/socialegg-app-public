{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _createForOfIteratorHelperLoose(o) { var i = 0; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } i = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return i.next.bind(i); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"invariant\");\n\n  var ViewabilityHelper = function () {\n    function ViewabilityHelper() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        viewAreaCoveragePercentThreshold: 0\n      };\n\n      _classCallCheck(this, ViewabilityHelper);\n\n      this._hasInteracted = false;\n      this._timers = new Set();\n      this._viewableIndices = [];\n      this._viewableItems = new Map();\n      this._config = config;\n    }\n\n    _createClass(ViewabilityHelper, [{\n      key: \"dispose\",\n      value: function dispose() {\n        this._timers.forEach(clearTimeout);\n      }\n    }, {\n      key: \"computeViewableItems\",\n      value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n        var _this$_config = this._config,\n            itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n            viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n        var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n        var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n        invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n        var viewableIndices = [];\n\n        if (itemCount === 0) {\n          return viewableIndices;\n        }\n\n        var firstVisible = -1;\n\n        var _ref = renderRange || {\n          first: 0,\n          last: itemCount - 1\n        },\n            first = _ref.first,\n            last = _ref.last;\n\n        if (last >= itemCount) {\n          console.warn('Invalid render range computing viewability ' + JSON.stringify({\n            renderRange: renderRange,\n            itemCount: itemCount\n          }));\n          return [];\n        }\n\n        for (var idx = first; idx <= last; idx++) {\n          var metrics = getFrameMetrics(idx);\n\n          if (!metrics) {\n            continue;\n          }\n\n          var top = metrics.offset - scrollOffset;\n          var bottom = top + metrics.length;\n\n          if (top < viewportHeight && bottom > 0) {\n            firstVisible = idx;\n\n            if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n              viewableIndices.push(idx);\n            }\n          } else if (firstVisible >= 0) {\n            break;\n          }\n        }\n\n        return viewableIndices;\n      }\n    }, {\n      key: \"onUpdate\",\n      value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n        var _this = this;\n\n        if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n          return;\n        }\n\n        var viewableIndices = [];\n\n        if (itemCount) {\n          viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n        }\n\n        if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n          return v === viewableIndices[ii];\n        })) {\n          return;\n        }\n\n        this._viewableIndices = viewableIndices;\n\n        if (this._config.minimumViewTime) {\n          var handle = setTimeout(function () {\n            _this._timers.delete(handle);\n\n            _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n          }, this._config.minimumViewTime);\n\n          this._timers.add(handle);\n        } else {\n          this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n        }\n      }\n    }, {\n      key: \"resetViewableIndices\",\n      value: function resetViewableIndices() {\n        this._viewableIndices = [];\n      }\n    }, {\n      key: \"recordInteraction\",\n      value: function recordInteraction() {\n        this._hasInteracted = true;\n      }\n    }, {\n      key: \"_onUpdateSync\",\n      value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n        var _this2 = this;\n\n        viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n          return _this2._viewableIndices.includes(ii);\n        });\n        var prevItems = this._viewableItems;\n        var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n          var viewable = createViewToken(ii, true);\n          return [viewable.key, viewable];\n        }));\n        var changed = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(nextItems), _step; !(_step = _iterator()).done;) {\n          var _ref2 = _step.value;\n\n          var _ref3 = _slicedToArray(_ref2, 2);\n\n          var key = _ref3[0];\n          var viewable = _ref3[1];\n\n          if (!prevItems.has(key)) {\n            changed.push(viewable);\n          }\n        }\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n          var _ref4 = _step2.value;\n\n          var _ref5 = _slicedToArray(_ref4, 2);\n\n          var _key = _ref5[0];\n          var _viewable = _ref5[1];\n\n          if (!nextItems.has(_key)) {\n            changed.push(_objectSpread({}, _viewable, {\n              isViewable: false\n            }));\n          }\n        }\n\n        if (changed.length > 0) {\n          this._viewableItems = nextItems;\n          onViewableItemsChanged({\n            viewableItems: Array.from(nextItems.values()),\n            changed: changed,\n            viewabilityConfig: this._config\n          });\n        }\n      }\n    }]);\n\n    return ViewabilityHelper;\n  }();\n\n  function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n    if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n      return true;\n    } else {\n      var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n      var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n      return percent >= viewablePercentThreshold;\n    }\n  }\n\n  function _getPixelsVisible(top, bottom, viewportHeight) {\n    var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n    return Math.max(0, visibleHeight);\n  }\n\n  function _isEntirelyVisible(top, bottom, viewportHeight) {\n    return top >= 0 && bottom <= viewportHeight && bottom > top;\n  }\n\n  module.exports = ViewabilityHelper;\n});","lineCount":222,"map":[[2,0,10,0],[22,0,12,0],[22,6,12,6,"invariant"],[22,15,12,15],[22,18,12,18,"require"],[22,29,12,25],[22,61,12,0],[24,6,71,6,"ViewabilityHelper"],[24,23],[25,0,81,2],[25,33,83,4],[26,0,83,4],[26,10,82,4,"config"],[26,16,83,4],[26,87,82,32],[27,0,82,33,"viewAreaCoveragePercentThreshold"],[27,8,82,33,"viewAreaCoveragePercentThreshold"],[27,40,82,65],[27,42,82,67],[28,0,82,32],[28,7,83,4],[30,0,83,4],[32,0,83,4],[32,11,73,2,"_hasInteracted"],[32,25,83,4],[32,28,73,28],[32,33,83,4],[33,0,83,4],[33,11,77,2,"_timers"],[33,18,83,4],[33,21,77,25],[33,25,77,29,"Set"],[33,28,77,25],[33,30,83,4],[34,0,83,4],[34,11,78,2,"_viewableIndices"],[34,27,83,4],[34,30,78,36],[34,32,83,4],[35,0,83,4],[35,11,79,2,"_viewableItems"],[35,25,83,4],[35,28,79,43],[35,32,79,47,"Map"],[35,35,79,43],[35,37,83,4],[36,0,84,4],[36,11,84,9,"_config"],[36,18,84,4],[36,21,84,19,"config"],[36,27,84,4],[37,0,85,3],[41,32,90,12],[42,0,91,4],[42,13,91,9,"_timers"],[42,20,91,4],[42,21,91,17,"forEach"],[42,28,91,4],[42,29,91,25,"clearTimeout"],[42,41,91,4],[43,0,92,3],[46,43,98,4,"itemCount"],[46,52],[46,54,99,4,"scrollOffset"],[46,66],[46,68,100,4,"viewportHeight"],[46,82],[46,84,101,4,"getFrameMetrics"],[46,99],[46,101,102,4,"renderRange"],[46,112],[46,114,103,19],[47,0,103,19],[47,28,107,8],[47,33,107,13,"_config"],[47,40,103,19],[48,0,103,19],[48,12,105,6,"itemVisiblePercentThreshold"],[48,39,103,19],[48,56,105,6,"itemVisiblePercentThreshold"],[48,83,103,19],[49,0,103,19],[49,12,106,6,"viewAreaCoveragePercentThreshold"],[49,44,103,19],[49,61,106,6,"viewAreaCoveragePercentThreshold"],[49,93,103,19],[50,0,108,4],[50,12,108,10,"viewAreaMode"],[50,24,108,22],[50,27,108,25,"viewAreaCoveragePercentThreshold"],[50,59,108,57],[50,63,108,61],[50,67,108,4],[51,0,109,4],[51,12,109,10,"viewablePercentThreshold"],[51,36,109,34],[51,39,109,37,"viewAreaMode"],[51,51,109,49],[51,54,110,8,"viewAreaCoveragePercentThreshold"],[51,86,109,49],[51,89,111,8,"itemVisiblePercentThreshold"],[51,116,109,4],[52,0,112,4,"invariant"],[52,8,112,4,"invariant"],[52,17,112,13],[52,18,113,6,"viewablePercentThreshold"],[52,42,113,30],[52,46,113,34],[52,50,113,6],[52,54,114,9,"itemVisiblePercentThreshold"],[52,81,114,36],[52,85,114,40],[52,89,114,8],[52,95,115,11,"viewAreaCoveragePercentThreshold"],[52,127,115,43],[52,131,115,47],[52,135,114,8],[52,136,112,13],[52,138,116,6],[52,227,112,13],[52,228,112,4],[53,0,118,4],[53,12,118,10,"viewableIndices"],[53,27,118,25],[53,30,118,28],[53,32,118,4],[55,0,119,4],[55,12,119,8,"itemCount"],[55,21,119,17],[55,26,119,22],[55,27,119,4],[55,29,119,25],[56,0,120,6],[56,17,120,13,"viewableIndices"],[56,32,120,6],[57,0,121,5],[59,0,122,4],[59,12,122,8,"firstVisible"],[59,24,122,20],[59,27,122,23],[59,28,122,24],[59,29,122,4],[61,0,103,19],[61,19,123,26,"renderRange"],[61,30,123,37],[61,34,123,41],[62,0,123,42,"first"],[62,10,123,42,"first"],[62,15,123,47],[62,17,123,49],[62,18,123,41],[63,0,123,52,"last"],[63,10,123,52,"last"],[63,14,123,56],[63,16,123,58,"itemCount"],[63,25,123,67],[63,28,123,70],[64,0,123,41],[64,9,103,19],[65,0,103,19],[65,12,123,11,"first"],[65,17,103,19],[65,25,123,11,"first"],[65,30,103,19],[66,0,103,19],[66,12,123,18,"last"],[66,16,103,19],[66,24,123,18,"last"],[66,28,103,19],[68,0,124,4],[68,12,124,8,"last"],[68,16,124,12],[68,20,124,16,"itemCount"],[68,29,124,4],[68,31,124,27],[69,0,125,6,"console"],[69,10,125,6,"console"],[69,17,125,13],[69,18,125,14,"warn"],[69,22,125,6],[69,23,126,8],[69,71,127,10,"JSON"],[69,75,127,14],[69,76,127,15,"stringify"],[69,85,127,10],[69,86,127,25],[70,0,127,26,"renderRange"],[70,12,127,26,"renderRange"],[70,23,127,37],[70,25,127,26,"renderRange"],[70,36,127,25],[71,0,127,39,"itemCount"],[71,12,127,39,"itemCount"],[71,21,127,48],[71,23,127,39,"itemCount"],[72,0,127,25],[72,11,127,10],[72,12,125,6],[73,0,129,6],[73,17,129,13],[73,19,129,6],[74,0,130,5],[76,0,131,4],[76,13,131,9],[76,17,131,13,"idx"],[76,20,131,16],[76,23,131,19,"first"],[76,28,131,4],[76,30,131,26,"idx"],[76,33,131,29],[76,37,131,33,"last"],[76,41,131,4],[76,43,131,39,"idx"],[76,46,131,42],[76,48,131,4],[76,50,131,46],[77,0,132,6],[77,14,132,12,"metrics"],[77,21,132,19],[77,24,132,22,"getFrameMetrics"],[77,39,132,37],[77,40,132,38,"idx"],[77,43,132,37],[77,44,132,6],[79,0,133,6],[79,14,133,10],[79,15,133,11,"metrics"],[79,22,133,6],[79,24,133,20],[80,0,134,8],[81,0,135,7],[83,0,136,6],[83,14,136,12,"top"],[83,17,136,15],[83,20,136,18,"metrics"],[83,27,136,25],[83,28,136,26,"offset"],[83,34,136,18],[83,37,136,35,"scrollOffset"],[83,49,136,6],[84,0,137,6],[84,14,137,12,"bottom"],[84,20,137,18],[84,23,137,21,"top"],[84,26,137,24],[84,29,137,27,"metrics"],[84,36,137,34],[84,37,137,35,"length"],[84,43,137,6],[86,0,138,6],[86,14,138,10,"top"],[86,17,138,13],[86,20,138,16,"viewportHeight"],[86,34,138,10],[86,38,138,34,"bottom"],[86,44,138,40],[86,47,138,43],[86,48,138,6],[86,50,138,46],[87,0,139,8,"firstVisible"],[87,12,139,8,"firstVisible"],[87,24,139,20],[87,27,139,23,"idx"],[87,30,139,8],[89,0,140,8],[89,16,141,10,"_isViewable"],[89,27,141,21],[89,28,142,12,"viewAreaMode"],[89,40,141,21],[89,42,143,12,"viewablePercentThreshold"],[89,66,141,21],[89,68,144,12,"top"],[89,71,141,21],[89,73,145,12,"bottom"],[89,79,141,21],[89,81,146,12,"viewportHeight"],[89,95,141,21],[89,97,147,12,"metrics"],[89,104,147,19],[89,105,147,20,"length"],[89,111,141,21],[89,112,140,8],[89,114,149,10],[90,0,150,10,"viewableIndices"],[90,14,150,10,"viewableIndices"],[90,29,150,25],[90,30,150,26,"push"],[90,34,150,10],[90,35,150,31,"idx"],[90,38,150,10],[91,0,151,9],[92,0,152,7],[92,11,138,6],[92,17,152,13],[92,21,152,17,"firstVisible"],[92,33,152,29],[92,37,152,33],[92,38,152,13],[92,40,152,36],[93,0,153,8],[94,0,154,7],[95,0,155,5],[97,0,156,4],[97,15,156,11,"viewableIndices"],[97,30,156,4],[98,0,157,3],[101,31,164,4,"itemCount"],[101,40],[101,42,165,4,"scrollOffset"],[101,54],[101,56,166,4,"viewportHeight"],[101,70],[101,72,167,4,"getFrameMetrics"],[101,87],[101,89,168,4,"createViewToken"],[101,104],[101,106,169,4,"onViewableItemsChanged"],[101,128],[101,130,173,4,"renderRange"],[101,141],[101,143,174,10],[102,0,174,10],[104,0,175,4],[104,12,176,7],[104,17,176,12,"_config"],[104,24,176,7],[104,25,176,20,"waitForInteraction"],[104,43,176,7],[104,47,176,42],[104,48,176,43],[104,53,176,48,"_hasInteracted"],[104,67,176,6],[104,71,177,6,"itemCount"],[104,80,177,15],[104,85,177,20],[104,86,176,6],[104,90,178,6],[104,91,178,7,"getFrameMetrics"],[104,106,178,22],[104,107,178,23],[104,108,178,22],[104,109,175,4],[104,111,179,6],[105,0,180,6],[106,0,181,5],[108,0,182,4],[108,12,182,8,"viewableIndices"],[108,27,182,23],[108,30,182,26],[108,32,182,4],[110,0,183,4],[110,12,183,8,"itemCount"],[110,21,183,4],[110,23,183,19],[111,0,184,6,"viewableIndices"],[111,10,184,6,"viewableIndices"],[111,25,184,21],[111,28,184,24],[111,33,184,29,"computeViewableItems"],[111,53,184,24],[111,54,185,8,"itemCount"],[111,63,184,24],[111,65,186,8,"scrollOffset"],[111,77,184,24],[111,79,187,8,"viewportHeight"],[111,93,184,24],[111,95,188,8,"getFrameMetrics"],[111,110,184,24],[111,112,189,8,"renderRange"],[111,123,184,24],[111,124,184,6],[112,0,191,5],[114,0,192,4],[114,12,193,6],[114,17,193,11,"_viewableIndices"],[114,33,193,6],[114,34,193,28,"length"],[114,40,193,6],[114,45,193,39,"viewableIndices"],[114,60,193,54],[114,61,193,55,"length"],[114,67,193,6],[114,71,194,6],[114,76,194,11,"_viewableIndices"],[114,92,194,6],[114,93,194,28,"every"],[114,98,194,6],[114,99,194,34],[114,109,194,35,"v"],[114,110,194,34],[114,112,194,38,"ii"],[114,114,194,34],[115,0,194,34],[115,17,194,45,"v"],[115,18,194,46],[115,23,194,51,"viewableIndices"],[115,38,194,66],[115,39,194,67,"ii"],[115,41,194,66],[115,42,194,34],[116,0,194,34],[116,9,194,6],[116,10,192,4],[116,12,195,6],[117,0,198,6],[118,0,199,5],[120,0,200,4],[120,13,200,9,"_viewableIndices"],[120,29,200,4],[120,32,200,28,"viewableIndices"],[120,47,200,4],[122,0,201,4],[122,12,201,8],[122,17,201,13,"_config"],[122,24,201,8],[122,25,201,21,"minimumViewTime"],[122,40,201,4],[122,42,201,38],[123,0,202,6],[123,14,202,12,"handle"],[123,20,202,18],[123,23,202,21,"setTimeout"],[123,33,202,31],[123,34,202,32],[123,46,202,38],[124,0,203,8],[124,12,203,8],[124,17,203,12],[124,18,203,13,"_timers"],[124,25,203,8],[124,26,203,21,"delete"],[124,32,203,8],[124,33,203,28,"handle"],[124,39,203,8],[126,0,204,8],[126,12,204,8],[126,17,204,12],[126,18,204,13,"_onUpdateSync"],[126,31,204,8],[126,32,205,10,"viewableIndices"],[126,47,204,8],[126,49,206,10,"onViewableItemsChanged"],[126,71,204,8],[126,73,207,10,"createViewToken"],[126,88,204,8],[127,0,209,7],[127,11,202,31],[127,13,209,9],[127,18,209,14,"_config"],[127,25,209,9],[127,26,209,22,"minimumViewTime"],[127,41,202,31],[127,42,202,6],[129,0,210,6],[129,15,210,11,"_timers"],[129,22,210,6],[129,23,210,19,"add"],[129,26,210,6],[129,27,210,23,"handle"],[129,33,210,6],[130,0,211,5],[130,9,201,4],[130,15,211,11],[131,0,212,6],[131,15,212,11,"_onUpdateSync"],[131,28,212,6],[131,29,213,8,"viewableIndices"],[131,44,212,6],[131,46,214,8,"onViewableItemsChanged"],[131,68,212,6],[131,70,215,8,"createViewToken"],[131,85,212,6],[132,0,217,5],[133,0,218,3],[136,45,223,25],[137,0,224,4],[137,13,224,9,"_viewableIndices"],[137,29,224,4],[137,32,224,28],[137,34,224,4],[138,0,225,3],[141,42,230,22],[142,0,231,4],[142,13,231,9,"_hasInteracted"],[142,27,231,4],[142,30,231,26],[142,34,231,4],[143,0,232,3],[146,36,235,4,"viewableIndicesToCheck"],[146,58],[146,60,236,4,"onViewableItemsChanged"],[146,82],[146,84,237,4,"createViewToken"],[146,99],[146,101,238,4],[147,0,238,4],[149,0,240,4,"viewableIndicesToCheck"],[149,8,240,4,"viewableIndicesToCheck"],[149,30,240,26],[149,33,240,29,"viewableIndicesToCheck"],[149,55,240,51],[149,56,240,52,"filter"],[149,62,240,29],[149,63,240,59],[149,73,240,59,"ii"],[149,75,240,61],[150,0,240,61],[150,17,241,6],[150,23,241,10],[150,24,241,11,"_viewableIndices"],[150,40,241,6],[150,41,241,28,"includes"],[150,49,241,6],[150,50,241,37,"ii"],[150,52,241,6],[150,53,240,61],[151,0,240,61],[151,9,240,29],[151,10,240,4],[152,0,243,4],[152,12,243,10,"prevItems"],[152,21,243,19],[152,24,243,22],[152,29,243,27,"_viewableItems"],[152,43,243,4],[153,0,244,4],[153,12,244,10,"nextItems"],[153,21,244,19],[153,24,244,22],[153,28,244,26,"Map"],[153,31,244,22],[153,32,245,6,"viewableIndicesToCheck"],[153,54,245,28],[153,55,245,29,"map"],[153,58,245,6],[153,59,245,33],[153,69,245,33,"ii"],[153,71,245,35],[153,73,245,39],[154,0,246,8],[154,14,246,14,"viewable"],[154,22,246,22],[154,25,246,25,"createViewToken"],[154,40,246,40],[154,41,246,41,"ii"],[154,43,246,40],[154,45,246,45],[154,49,246,40],[154,50,246,8],[155,0,247,8],[155,17,247,15],[155,18,247,16,"viewable"],[155,26,247,24],[155,27,247,25,"key"],[155,30,247,15],[155,32,247,30,"viewable"],[155,40,247,15],[155,41,247,8],[156,0,248,7],[156,9,245,6],[156,10,244,22],[156,11,244,4],[157,0,251,4],[157,12,251,10,"changed"],[157,19,251,17],[157,22,251,20],[157,24,251,4],[159,0,252,4],[159,61,252,34,"nextItems"],[159,70,252,4],[159,110,252,45],[160,0,252,45],[162,0,252,45],[164,0,252,45],[164,14,252,16,"key"],[164,17,252,45],[165,0,252,45],[165,14,252,21,"viewable"],[165,22,252,45],[167,0,253,6],[167,14,253,10],[167,15,253,11,"prevItems"],[167,24,253,20],[167,25,253,21,"has"],[167,28,253,11],[167,29,253,25,"key"],[167,32,253,11],[167,33,253,6],[167,35,253,31],[168,0,254,8,"changed"],[168,12,254,8,"changed"],[168,19,254,15],[168,20,254,16,"push"],[168,24,254,8],[168,25,254,21,"viewable"],[168,33,254,8],[169,0,255,7],[170,0,256,5],[172,0,257,4],[172,62,257,34,"prevItems"],[172,71,257,4],[172,114,257,45],[173,0,257,45],[175,0,257,45],[177,0,257,45],[177,14,257,16,"key"],[177,18,257,45],[178,0,257,45],[178,14,257,21,"viewable"],[178,23,257,45],[180,0,258,6],[180,14,258,10],[180,15,258,11,"nextItems"],[180,24,258,20],[180,25,258,21,"has"],[180,28,258,11],[180,29,258,25,"key"],[180,33,258,11],[180,34,258,6],[180,36,258,31],[181,0,259,8,"changed"],[181,12,259,8,"changed"],[181,19,259,15],[181,20,259,16,"push"],[181,24,259,8],[181,43,259,25,"viewable"],[181,52,259,8],[182,0,259,35,"isViewable"],[182,14,259,35,"isViewable"],[182,24,259,45],[182,26,259,47],[183,0,259,8],[184,0,260,7],[185,0,261,5],[187,0,262,4],[187,12,262,8,"changed"],[187,19,262,15],[187,20,262,16,"length"],[187,26,262,8],[187,29,262,25],[187,30,262,4],[187,32,262,28],[188,0,263,6],[188,15,263,11,"_viewableItems"],[188,29,263,6],[188,32,263,28,"nextItems"],[188,41,263,6],[189,0,264,6,"onViewableItemsChanged"],[189,10,264,6,"onViewableItemsChanged"],[189,32,264,28],[189,33,264,29],[190,0,265,8,"viewableItems"],[190,12,265,8,"viewableItems"],[190,25,265,21],[190,27,265,23,"Array"],[190,32,265,28],[190,33,265,29,"from"],[190,37,265,23],[190,38,265,34,"nextItems"],[190,47,265,43],[190,48,265,44,"values"],[190,54,265,34],[190,56,265,23],[190,57,264,29],[191,0,266,8,"changed"],[191,12,266,8,"changed"],[191,19,266,15],[191,21,266,8,"changed"],[191,28,264,29],[192,0,267,8,"viewabilityConfig"],[192,12,267,8,"viewabilityConfig"],[192,29,267,25],[192,31,267,27],[192,36,267,32,"_config"],[193,0,264,29],[193,11,264,28],[193,12,264,6],[194,0,269,5],[195,0,270,3],[201,0,273,0],[201,11,273,9,"_isViewable"],[201,22,273,0],[201,23,274,2,"viewAreaMode"],[201,35,273,0],[201,37,275,2,"viewablePercentThreshold"],[201,61,273,0],[201,63,276,2,"top"],[201,66,273,0],[201,68,277,2,"bottom"],[201,74,273,0],[201,76,278,2,"viewportHeight"],[201,90,273,0],[201,92,279,2,"itemLength"],[201,102,273,0],[201,104,280,11],[202,0,281,2],[202,8,281,6,"_isEntirelyVisible"],[202,26,281,24],[202,27,281,25,"top"],[202,30,281,24],[202,32,281,30,"bottom"],[202,38,281,24],[202,40,281,38,"viewportHeight"],[202,54,281,24],[202,55,281,2],[202,57,281,55],[203,0,282,4],[203,13,282,11],[203,17,282,4],[204,0,283,3],[204,5,281,2],[204,11,283,9],[205,0,284,4],[205,10,284,10,"pixels"],[205,16,284,16],[205,19,284,19,"_getPixelsVisible"],[205,36,284,36],[205,37,284,37,"top"],[205,40,284,36],[205,42,284,42,"bottom"],[205,48,284,36],[205,50,284,50,"viewportHeight"],[205,64,284,36],[205,65,284,4],[207,0,285,4],[207,10,285,10,"percent"],[207,17,285,17],[207,20,286,6],[207,27,286,13,"viewAreaMode"],[207,39,286,25],[207,42,286,28,"pixels"],[207,48,286,34],[207,51,286,37,"viewportHeight"],[207,65,286,25],[207,68,286,54,"pixels"],[207,74,286,60],[207,77,286,63,"itemLength"],[207,87,286,6],[207,88,285,4],[208,0,287,4],[208,13,287,11,"percent"],[208,20,287,18],[208,24,287,22,"viewablePercentThreshold"],[208,48,287,4],[209,0,288,3],[210,0,289,1],[212,0,291,0],[212,11,291,9,"_getPixelsVisible"],[212,28,291,0],[212,29,292,2,"top"],[212,32,291,0],[212,34,293,2,"bottom"],[212,40,291,0],[212,42,294,2,"viewportHeight"],[212,56,291,0],[212,58,295,10],[213,0,296,2],[213,8,296,8,"visibleHeight"],[213,21,296,21],[213,24,296,24,"Math"],[213,28,296,28],[213,29,296,29,"min"],[213,32,296,24],[213,33,296,33,"bottom"],[213,39,296,24],[213,41,296,41,"viewportHeight"],[213,55,296,24],[213,59,296,59,"Math"],[213,63,296,63],[213,64,296,64,"max"],[213,67,296,59],[213,68,296,68,"top"],[213,71,296,59],[213,73,296,73],[213,74,296,59],[213,75,296,2],[214,0,297,2],[214,11,297,9,"Math"],[214,15,297,13],[214,16,297,14,"max"],[214,19,297,9],[214,20,297,18],[214,21,297,9],[214,23,297,21,"visibleHeight"],[214,36,297,9],[214,37,297,2],[215,0,298,1],[217,0,300,0],[217,11,300,9,"_isEntirelyVisible"],[217,29,300,0],[217,30,301,2,"top"],[217,33,300,0],[217,35,302,2,"bottom"],[217,41,300,0],[217,43,303,2,"viewportHeight"],[217,57,300,0],[217,59,304,11],[218,0,305,2],[218,11,305,9,"top"],[218,14,305,12],[218,18,305,16],[218,19,305,9],[218,23,305,21,"bottom"],[218,29,305,27],[218,33,305,31,"viewportHeight"],[218,47,305,9],[218,51,305,49,"bottom"],[218,57,305,55],[218,60,305,58,"top"],[218,63,305,2],[219,0,306,1],[221,0,308,0,"module"],[221,2,308,0,"module"],[221,8,308,6],[221,9,308,7,"exports"],[221,16,308,0],[221,19,308,17,"ViewabilityHelper"],[221,36,308,0]],"functionMap":{"names":["<global>","ViewabilityHelper","constructor","dispose","computeViewableItems","onUpdate","_viewableIndices.every$argument_0","setTimeout$argument_0","resetViewableIndices","recordInteraction","_onUpdateSync","viewableIndicesToCheck.filter$argument_0","viewableIndicesToCheck.map$argument_0","_isViewable","_getPixelsVisible","_isEntirelyVisible"],"mappings":"AAA;ACsE;ECU;GDI;EEK;GFE;EGK;GH4D;EIM;kCC+B,oCD;gCEQ;OFO;GJS;EOK;GPE;EQK;GRE;ESE;2DCM;wCDC;iCEI;OFG;GTsB;CDC;AaE;CbgB;AcE;CdO;AeE;CfM"}},"type":"js/module"}]}