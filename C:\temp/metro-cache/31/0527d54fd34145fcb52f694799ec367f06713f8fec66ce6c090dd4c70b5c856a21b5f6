{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}},{"name":"fbemitter","data":{"isAsync":false}},{"name":"./ExponentUpdates","data":{"isAsync":false}},{"name":"./Updates.types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    localAssets: true,\n    manifest: true,\n    isEmergencyLaunch: true,\n    reloadAsync: true,\n    checkForUpdateAsync: true,\n    fetchUpdateAsync: true,\n    addListener: true\n  };\n  exports.reloadAsync = reloadAsync;\n  exports.checkForUpdateAsync = checkForUpdateAsync;\n  exports.fetchUpdateAsync = fetchUpdateAsync;\n  exports.addListener = addListener;\n  exports.isEmergencyLaunch = exports.manifest = exports.localAssets = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[2], \"@unimodules/core\");\n\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"expo-constants\"));\n\n  var _fbemitter = _$$_REQUIRE(_dependencyMap[4], \"fbemitter\");\n\n  var _ExponentUpdates = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExponentUpdates\"));\n\n  var _Updates = _$$_REQUIRE(_dependencyMap[6], \"./Updates.types\");\n\n  Object.keys(_Updates).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _Updates[key];\n      }\n    });\n  });\n\n  var _Constants$manifest;\n\n  var localAssets = {};\n  exports.localAssets = localAssets;\n  var manifest = (_Constants$manifest = _expoConstants.default.manifest) != null ? _Constants$manifest : {};\n  exports.manifest = manifest;\n  var isEmergencyLaunch = false;\n  exports.isEmergencyLaunch = isEmergencyLaunch;\n\n  function reloadAsync() {\n    return _regenerator.default.async(function reloadAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (_ExponentUpdates.default.reloadFromCache) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Updates', 'reloadAsync');\n\n          case 2:\n            _context.next = 4;\n            return _regenerator.default.awrap(_ExponentUpdates.default.reloadFromCache());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function checkForUpdateAsync() {\n    var result;\n    return _regenerator.default.async(function checkForUpdateAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (_ExponentUpdates.default.checkForUpdateAsync) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Updates', 'checkForUpdateAsync');\n\n          case 2:\n            _context2.next = 4;\n            return _regenerator.default.awrap(_ExponentUpdates.default.checkForUpdateAsync());\n\n          case 4:\n            result = _context2.sent;\n\n            if (result) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              isAvailable: false\n            });\n\n          case 7:\n            return _context2.abrupt(\"return\", {\n              isAvailable: true,\n              manifest: typeof result === 'string' ? JSON.parse(result) : result\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function fetchUpdateAsync() {\n    var result;\n    return _regenerator.default.async(function fetchUpdateAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (_ExponentUpdates.default.fetchUpdateAsync) {\n              _context3.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Updates', 'fetchUpdateAsync');\n\n          case 2:\n            _isFetchingUpdate = true;\n            _context3.next = 5;\n            return _regenerator.default.awrap(_ExponentUpdates.default.fetchUpdateAsync());\n\n          case 5:\n            result = _context3.sent;\n            setTimeout(function () {\n              _isFetchingUpdate = false;\n            }, 0);\n\n            if (result) {\n              _context3.next = 9;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", {\n              isNew: false\n            });\n\n          case 9:\n            return _context3.abrupt(\"return\", {\n              isNew: true,\n              manifest: typeof result === 'string' ? JSON.parse(result) : result\n            });\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var _emitter;\n\n  var _isFetchingUpdate = false;\n\n  function _getEmitter() {\n    if (!_emitter) {\n      _emitter = new _fbemitter.EventEmitter();\n\n      _core.RCTDeviceEventEmitter.addListener('Exponent.nativeUpdatesEvent', _emitEvent);\n    }\n\n    return _emitter;\n  }\n\n  function _emitEvent(params) {\n    if (_isFetchingUpdate) {\n      return;\n    }\n\n    var newParams = params;\n\n    if (typeof params === 'string') {\n      newParams = JSON.parse(params);\n    }\n\n    if (newParams.manifestString) {\n      newParams.manifest = JSON.parse(newParams.manifestString);\n      delete newParams.manifestString;\n    }\n\n    if (newParams.type === LegacyUpdatesEventType.DOWNLOAD_STARTED || newParams.type === LegacyUpdatesEventType.DOWNLOAD_PROGRESS) {\n      return;\n    } else if (newParams.type === LegacyUpdatesEventType.DOWNLOAD_FINISHED) {\n      newParams.type = _Updates.UpdateEventType.UPDATE_AVAILABLE;\n    }\n\n    if (!_emitter) {\n      throw new Error(\"EventEmitter must be initialized to use from its listener\");\n    }\n\n    _emitter.emit('Expo.updatesEvent', newParams);\n  }\n\n  function addListener(listener) {\n    var emitter = _getEmitter();\n\n    return emitter.addListener('Expo.updatesEvent', listener);\n  }\n\n  var LegacyUpdatesEventType;\n\n  (function (LegacyUpdatesEventType) {\n    LegacyUpdatesEventType[\"DOWNLOAD_STARTED\"] = \"downloadStart\";\n    LegacyUpdatesEventType[\"DOWNLOAD_PROGRESS\"] = \"downloadProgress\";\n    LegacyUpdatesEventType[\"DOWNLOAD_FINISHED\"] = \"downloadFinished\";\n    LegacyUpdatesEventType[\"NO_UPDATE_AVAILABLE\"] = \"noUpdateAvailable\";\n    LegacyUpdatesEventType[\"ERROR\"] = \"error\";\n  })(LegacyUpdatesEventType || (LegacyUpdatesEventType = {}));\n});","lineCount":226,"map":[[24,0,1,0],[26,0,2,0],[28,0,3,0],[30,0,4,0],[32,0,5,0],[34,0,6,0],[35,0,6,0],[36,0,6,0],[37,0,6,0],[38,0,6,0],[39,0,6,0],[40,0,6,0],[41,0,6,0],[42,0,6,0],[43,0,6,0],[47,0,7,7],[47,6,7,13,"localAssets"],[47,17,7,24],[47,20,7,27],[47,22,7,7],[49,0,8,7],[49,6,8,13,"manifest"],[49,14,8,21],[49,40,8,24,"Constants"],[49,63,8,34,"manifest"],[49,71,8,21],[49,105,8,46],[49,107,8,7],[51,0,9,7],[51,6,9,13,"isEmergencyLaunch"],[51,23,9,30],[51,26,9,33],[51,31,9,7],[54,0,10,7],[54,11,10,22,"reloadAsync"],[54,22,10,7],[55,0,10,7],[56,0,10,7],[57,0,10,7],[58,0,10,7],[59,0,10,7],[59,16,11,9,"ExponentUpdates"],[59,41,11,25,"reloadFromCache"],[59,56,10,7],[60,0,10,7],[61,0,10,7],[62,0,10,7],[64,0,10,7],[64,18,12,14],[64,22,12,18,"UnavailabilityError"],[64,47,12,14],[64,48,12,38],[64,57,12,14],[64,59,12,49],[64,72,12,14],[64,73,10,7],[66,0,10,7],[67,0,10,7],[68,0,10,7],[68,46,14,10,"ExponentUpdates"],[68,71,14,26,"reloadFromCache"],[68,86,14,10],[68,88,10,7],[70,0,10,7],[71,0,10,7],[72,0,10,7],[73,0,10,7],[74,0,10,7],[75,0,10,7],[76,0,10,7],[78,0,16,7],[78,11,16,22,"checkForUpdateAsync"],[78,30,16,7],[79,0,16,7],[80,0,16,7],[81,0,16,7],[82,0,16,7],[83,0,16,7],[84,0,16,7],[84,16,17,9,"ExponentUpdates"],[84,41,17,25,"checkForUpdateAsync"],[84,60,16,7],[85,0,16,7],[86,0,16,7],[87,0,16,7],[89,0,16,7],[89,18,18,14],[89,22,18,18,"UnavailabilityError"],[89,47,18,14],[89,48,18,38],[89,57,18,14],[89,59,18,49],[89,80,18,14],[89,81,16,7],[91,0,16,7],[92,0,16,7],[93,0,16,7],[93,46,20,25,"ExponentUpdates"],[93,71,20,41,"checkForUpdateAsync"],[93,90,20,25],[93,92,16,7],[95,0,16,7],[96,0,20,10,"result"],[96,12,20,10,"result"],[96,18,16,7],[98,0,16,7],[98,16,21,9,"result"],[98,22,16,7],[99,0,16,7],[100,0,16,7],[101,0,16,7],[103,0,16,7],[103,46,22,15],[104,0,22,17,"isAvailable"],[104,14,22,17,"isAvailable"],[104,25,22,28],[104,27,22,30],[105,0,22,15],[105,13,16,7],[107,0,16,7],[108,0,16,7],[108,46,24,11],[109,0,25,8,"isAvailable"],[109,14,25,8,"isAvailable"],[109,25,25,19],[109,27,25,21],[109,31,24,11],[110,0,26,8,"manifest"],[110,14,26,8,"manifest"],[110,22,26,16],[110,24,26,18],[110,31,26,25,"result"],[110,37,26,18],[110,42,26,36],[110,50,26,18],[110,53,26,47,"JSON"],[110,57,26,51],[110,58,26,52,"parse"],[110,63,26,47],[110,64,26,58,"result"],[110,70,26,47],[110,71,26,18],[110,74,26,68,"result"],[111,0,24,11],[111,13,16,7],[113,0,16,7],[114,0,16,7],[115,0,16,7],[116,0,16,7],[117,0,16,7],[118,0,16,7],[119,0,16,7],[121,0,29,7],[121,11,29,22,"fetchUpdateAsync"],[121,27,29,7],[122,0,29,7],[123,0,29,7],[124,0,29,7],[125,0,29,7],[126,0,29,7],[127,0,29,7],[127,16,30,9,"ExponentUpdates"],[127,41,30,25,"fetchUpdateAsync"],[127,57,29,7],[128,0,29,7],[129,0,29,7],[130,0,29,7],[132,0,29,7],[132,18,31,14],[132,22,31,18,"UnavailabilityError"],[132,47,31,14],[132,48,31,38],[132,57,31,14],[132,59,31,49],[132,77,31,14],[132,78,29,7],[134,0,29,7],[135,0,33,4,"_isFetchingUpdate"],[135,12,33,4,"_isFetchingUpdate"],[135,29,33,21],[135,32,33,24],[135,36,33,4],[136,0,29,7],[137,0,29,7],[137,46,34,25,"ExponentUpdates"],[137,71,34,41,"fetchUpdateAsync"],[137,87,34,25],[137,89,29,7],[139,0,29,7],[140,0,34,10,"result"],[140,12,34,10,"result"],[140,18,29,7],[141,0,35,4,"setTimeout"],[141,12,35,4,"setTimeout"],[141,22,35,14],[141,23,35,15],[141,35,35,21],[142,0,36,8,"_isFetchingUpdate"],[142,14,36,8,"_isFetchingUpdate"],[142,31,36,25],[142,34,36,28],[142,39,36,8],[143,0,37,5],[143,13,35,14],[143,15,37,7],[143,16,35,14],[143,17,35,4],[145,0,29,7],[145,16,38,9,"result"],[145,22,29,7],[146,0,29,7],[147,0,29,7],[148,0,29,7],[150,0,29,7],[150,46,39,15],[151,0,39,17,"isNew"],[151,14,39,17,"isNew"],[151,19,39,22],[151,21,39,24],[152,0,39,15],[152,13,29,7],[154,0,29,7],[155,0,29,7],[155,46,41,11],[156,0,42,8,"isNew"],[156,14,42,8,"isNew"],[156,19,42,13],[156,21,42,15],[156,25,41,11],[157,0,43,8,"manifest"],[157,14,43,8,"manifest"],[157,22,43,16],[157,24,43,18],[157,31,43,25,"result"],[157,37,43,18],[157,42,43,36],[157,50,43,18],[157,53,43,47,"JSON"],[157,57,43,51],[157,58,43,52,"parse"],[157,63,43,47],[157,64,43,58,"result"],[157,70,43,47],[157,71,43,18],[157,74,43,68,"result"],[158,0,41,11],[158,13,29,7],[160,0,29,7],[161,0,29,7],[162,0,29,7],[163,0,29,7],[164,0,29,7],[165,0,29,7],[166,0,29,7],[168,0,46,0],[168,6,46,4,"_emitter"],[168,14,46,0],[170,0,47,0],[170,6,47,4,"_isFetchingUpdate"],[170,23,47,21],[170,26,47,24],[170,31,47,0],[172,0,48,0],[172,11,48,9,"_getEmitter"],[172,22,48,0],[172,25,48,23],[173,0,49,4],[173,8,49,8],[173,9,49,9,"_emitter"],[173,17,49,4],[173,19,49,19],[174,0,50,8,"_emitter"],[174,6,50,8,"_emitter"],[174,14,50,16],[174,17,50,19],[174,21,50,23,"EventEmitter"],[174,44,50,19],[174,46,50,8],[176,0,51,8,"RCTDeviceEventEmitter"],[176,34,51,30,"addListener"],[176,45,51,8],[176,46,51,42],[176,75,51,8],[176,77,51,73,"_emitEvent"],[176,87,51,8],[177,0,52,5],[179,0,53,4],[179,11,53,11,"_emitter"],[179,19,53,4],[180,0,54,1],[182,0,55,0],[182,11,55,9,"_emitEvent"],[182,21,55,0],[182,22,55,20,"params"],[182,28,55,0],[182,30,55,28],[183,0,58,4],[183,8,58,8,"_isFetchingUpdate"],[183,25,58,4],[183,27,58,27],[184,0,59,8],[185,0,60,5],[187,0,61,4],[187,8,61,8,"newParams"],[187,17,61,17],[187,20,61,20,"params"],[187,26,61,4],[189,0,62,4],[189,8,62,8],[189,15,62,15,"params"],[189,21,62,8],[189,26,62,26],[189,34,62,4],[189,36,62,36],[190,0,63,8,"newParams"],[190,6,63,8,"newParams"],[190,15,63,17],[190,18,63,20,"JSON"],[190,22,63,24],[190,23,63,25,"parse"],[190,28,63,20],[190,29,63,31,"params"],[190,35,63,20],[190,36,63,8],[191,0,64,5],[193,0,65,4],[193,8,65,8,"newParams"],[193,17,65,17],[193,18,65,18,"manifestString"],[193,32,65,4],[193,34,65,34],[194,0,66,8,"newParams"],[194,6,66,8,"newParams"],[194,15,66,17],[194,16,66,18,"manifest"],[194,24,66,8],[194,27,66,29,"JSON"],[194,31,66,33],[194,32,66,34,"parse"],[194,37,66,29],[194,38,66,40,"newParams"],[194,47,66,49],[194,48,66,50,"manifestString"],[194,62,66,29],[194,63,66,8],[195,0,67,8],[195,13,67,15,"newParams"],[195,22,67,24],[195,23,67,25,"manifestString"],[195,37,67,8],[196,0,68,5],[198,0,70,4],[198,8,70,8,"newParams"],[198,17,70,17],[198,18,70,18,"type"],[198,22,70,8],[198,27,70,27,"LegacyUpdatesEventType"],[198,49,70,49],[198,50,70,50,"DOWNLOAD_STARTED"],[198,66,70,8],[198,70,71,8,"newParams"],[198,79,71,17],[198,80,71,18,"type"],[198,84,71,8],[198,89,71,27,"LegacyUpdatesEventType"],[198,111,71,49],[198,112,71,50,"DOWNLOAD_PROGRESS"],[198,129,70,4],[198,131,71,69],[199,0,72,8],[200,0,73,5],[200,5,70,4],[200,11,74,9],[200,15,74,13,"newParams"],[200,24,74,22],[200,25,74,23,"type"],[200,29,74,13],[200,34,74,32,"LegacyUpdatesEventType"],[200,56,74,54],[200,57,74,55,"DOWNLOAD_FINISHED"],[200,74,74,9],[200,76,74,74],[201,0,75,8,"newParams"],[201,6,75,8,"newParams"],[201,15,75,17],[201,16,75,18,"type"],[201,20,75,8],[201,23,75,25,"UpdateEventType"],[201,48,75,41,"UPDATE_AVAILABLE"],[201,64,75,8],[202,0,76,5],[204,0,77,4],[204,8,77,8],[204,9,77,9,"_emitter"],[204,17,77,4],[204,19,77,19],[205,0,78,8],[205,12,78,14],[205,16,78,18,"Error"],[205,21,78,14],[205,82,78,8],[206,0,79,5],[208,0,80,4,"_emitter"],[208,4,80,4,"_emitter"],[208,12,80,12],[208,13,80,13,"emit"],[208,17,80,4],[208,18,80,18],[208,37,80,4],[208,39,80,39,"newParams"],[208,48,80,4],[209,0,81,1],[211,0,82,7],[211,11,82,16,"addListener"],[211,22,82,7],[211,23,82,28,"listener"],[211,31,82,7],[211,33,82,38],[212,0,83,4],[212,8,83,10,"emitter"],[212,15,83,17],[212,18,83,20,"_getEmitter"],[212,29,83,31],[212,31,83,4],[214,0,84,4],[214,11,84,11,"emitter"],[214,18,84,18],[214,19,84,19,"addListener"],[214,30,84,11],[214,31,84,31],[214,50,84,11],[214,52,84,52,"listener"],[214,60,84,11],[214,61,84,4],[215,0,85,1],[217,0,86,0],[217,6,86,4,"LegacyUpdatesEventType"],[217,28,86,0],[219,0,87,0],[219,3,87,1],[219,13,87,11,"LegacyUpdatesEventType"],[219,35,87,1],[219,37,87,35],[220,0,88,4,"LegacyUpdatesEventType"],[220,4,88,4,"LegacyUpdatesEventType"],[220,26,88,26],[220,27,88,27],[220,45,88,26],[220,46,88,4],[220,49,88,49],[220,64,88,4],[221,0,89,4,"LegacyUpdatesEventType"],[221,4,89,4,"LegacyUpdatesEventType"],[221,26,89,26],[221,27,89,27],[221,46,89,26],[221,47,89,4],[221,50,89,50],[221,68,89,4],[222,0,90,4,"LegacyUpdatesEventType"],[222,4,90,4,"LegacyUpdatesEventType"],[222,26,90,26],[222,27,90,27],[222,46,90,26],[222,47,90,4],[222,50,90,50],[222,68,90,4],[223,0,91,4,"LegacyUpdatesEventType"],[223,4,91,4,"LegacyUpdatesEventType"],[223,26,91,26],[223,27,91,27],[223,48,91,26],[223,49,91,4],[223,52,91,52],[223,71,91,4],[224,0,92,4,"LegacyUpdatesEventType"],[224,4,92,4,"LegacyUpdatesEventType"],[224,26,92,26],[224,27,92,27],[224,34,92,26],[224,35,92,4],[224,38,92,38],[224,45,92,4],[225,0,93,1],[225,3,87,0],[225,5,93,3,"LegacyUpdatesEventType"],[225,27,93,25],[225,32,93,30,"LegacyUpdatesEventType"],[225,54,93,52],[225,57,93,55],[225,59,93,25],[225,60,87,0]],"functionMap":{"names":["<global>","reloadAsync","checkForUpdateAsync","fetchUpdateAsync","setTimeout$argument_0","_getEmitter","_emitEvent","addListener","<anonymous>"],"mappings":"AAA;OCS;CDK;OEC;CFY;OGC;eCM;KDE;CHQ;AKG;CLM;AMC;CN0B;OOC;CPG;CQE;CRM"}},"type":"js/module"}]}