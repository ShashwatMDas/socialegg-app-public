{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"nanoid/non-secure","data":{"isAsync":false}},{"name":"./BaseRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = StackRouter;\n  exports.StackActions = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\");\n\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./BaseRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var StackActions = {\n    replace: function replace(name, params) {\n      return {\n        type: 'REPLACE',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    push: function push(name, params) {\n      return {\n        type: 'PUSH',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    pop: function pop() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return {\n        type: 'POP',\n        payload: {\n          count: count\n        }\n      };\n    },\n    popToTop: function popToTop() {\n      return {\n        type: 'POP_TO_TOP'\n      };\n    }\n  };\n  exports.StackActions = StackActions;\n\n  function StackRouter(options) {\n    var router = _objectSpread({}, _BaseRouter.default, {\n      type: 'stack',\n      getInitialState: function getInitialState(_ref) {\n        var routeNames = _ref.routeNames,\n            routeParamList = _ref.routeParamList;\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        return {\n          stale: false,\n          type: 'stack',\n          key: \"stack-\" + (0, _nonSecure.nanoid)(),\n          index: 0,\n          routeNames: routeNames,\n          routes: [{\n            key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          }]\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var state = partialState;\n\n        if (state.stale === false) {\n          return state;\n        }\n\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        }).map(function (route) {\n          return _objectSpread({}, route, {\n            key: route.key || route.name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[route.name] !== undefined ? _objectSpread({}, routeParamList[route.name], {}, route.params) : route.params\n          });\n        });\n\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n\n        return {\n          stale: false,\n          type: 'stack',\n          key: \"stack-\" + (0, _nonSecure.nanoid)(),\n          index: routes.length - 1,\n          routeNames: routeNames,\n          routes: routes\n        };\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        });\n\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n\n        return _objectSpread({}, state, {\n          routeNames: routeNames,\n          routes: routes,\n          index: Math.min(state.index, routes.length - 1)\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n\n        return _objectSpread({}, state, {\n          index: index,\n          routes: state.routes.slice(0, index + 1)\n        });\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        var routeParamList = options.routeParamList;\n\n        switch (action.type) {\n          case 'REPLACE':\n            {\n              var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n\n              if (index === -1) {\n                return null;\n              }\n\n              var _action$payload = action.payload,\n                  name = _action$payload.name,\n                  key = _action$payload.key,\n                  params = _action$payload.params;\n\n              if (!state.routeNames.includes(name)) {\n                return null;\n              }\n\n              return _objectSpread({}, state, {\n                routes: state.routes.map(function (route, i) {\n                  return i === index ? {\n                    key: key !== undefined ? key : name + \"-\" + (0, _nonSecure.nanoid)(),\n                    name: name,\n                    params: routeParamList[name] !== undefined ? _objectSpread({}, routeParamList[name], {}, params) : params\n                  } : route;\n                })\n              });\n            }\n\n          case 'PUSH':\n            if (state.routeNames.includes(action.payload.name)) {\n              return _objectSpread({}, state, {\n                index: state.index + 1,\n                routes: [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                  key: action.payload.key === undefined ? action.payload.name + \"-\" + (0, _nonSecure.nanoid)() : action.payload.key,\n                  name: action.payload.name,\n                  params: routeParamList[action.payload.name] !== undefined ? _objectSpread({}, routeParamList[action.payload.name], {}, action.payload.params) : action.payload.params\n                }])\n              });\n            }\n\n            return null;\n\n          case 'POP':\n            {\n              var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n\n              if (_index > 0) {\n                var _count = Math.max(_index - action.payload.count + 1, 1);\n\n                var routes = state.routes.slice(0, _count).concat(state.routes.slice(_index + 1));\n                return _objectSpread({}, state, {\n                  index: routes.length - 1,\n                  routes: routes\n                });\n              }\n\n              return null;\n            }\n\n          case 'POP_TO_TOP':\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: state.routes.length - 1\n              }\n            }, options);\n\n          case 'NAVIGATE':\n            if (action.payload.key || action.payload.name && state.routeNames.includes(action.payload.name)) {\n              var _index2 = -1;\n\n              if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n                _index2 = state.index;\n              } else {\n                for (var i = state.routes.length - 1; i >= 0; i--) {\n                  if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                    _index2 = i;\n                    break;\n                  }\n                }\n              }\n\n              if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n                return null;\n              }\n\n              if (_index2 === -1 && action.payload.name !== undefined) {\n                return router.getStateForAction(state, {\n                  type: 'PUSH',\n                  payload: {\n                    key: action.payload.key,\n                    name: action.payload.name,\n                    params: action.payload.params\n                  }\n                }, options);\n              }\n\n              return _objectSpread({}, state, {\n                index: _index2,\n                routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [action.payload.params !== undefined ? _objectSpread({}, state.routes[_index2], {\n                  params: _objectSpread({}, state.routes[_index2].params, {}, action.payload.params)\n                }) : state.routes[_index2]])\n              });\n            }\n\n            return null;\n\n          case 'GO_BACK':\n            if (state.index > 0) {\n              return router.getStateForAction(state, {\n                type: 'POP',\n                payload: {\n                  count: 1\n                },\n                target: action.target,\n                source: action.source\n              }, options);\n            }\n\n            return null;\n\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      actionCreators: StackActions\n    });\n\n    return router;\n  }\n});","lineCount":288,"map":[[14,0,1,0],[16,0,2,0],[22,0,82,7],[22,6,82,13,"StackActions"],[22,18,82,25],[22,21,82,28],[23,0,83,2,"replace"],[23,4,83,2,"replace"],[23,11,82,28],[23,30,83,10,"name"],[23,34,82,28],[23,36,83,24,"params"],[23,42,82,28],[23,44,83,58],[24,0,84,4],[24,13,84,11],[25,0,84,13,"type"],[25,8,84,13,"type"],[25,12,84,17],[25,14,84,19],[25,23,84,11],[26,0,84,30,"payload"],[26,8,84,30,"payload"],[26,15,84,37],[26,17,84,39],[27,0,84,41,"name"],[27,10,84,41,"name"],[27,14,84,45],[27,16,84,41,"name"],[27,20,84,39],[28,0,84,47,"params"],[28,10,84,47,"params"],[28,16,84,53],[28,18,84,47,"params"],[29,0,84,39],[30,0,84,11],[30,7,84,4],[31,0,85,3],[31,5,82,28],[32,0,86,2,"push"],[32,4,86,2,"push"],[32,8,82,28],[32,24,86,7,"name"],[32,28,82,28],[32,30,86,21,"params"],[32,36,82,28],[32,38,86,55],[33,0,87,4],[33,13,87,11],[34,0,87,13,"type"],[34,8,87,13,"type"],[34,12,87,17],[34,14,87,19],[34,20,87,11],[35,0,87,27,"payload"],[35,8,87,27,"payload"],[35,15,87,34],[35,17,87,36],[36,0,87,38,"name"],[36,10,87,38,"name"],[36,14,87,42],[36,16,87,38,"name"],[36,20,87,36],[37,0,87,44,"params"],[37,10,87,44,"params"],[37,16,87,50],[37,18,87,44,"params"],[38,0,87,36],[39,0,87,11],[39,7,87,4],[40,0,88,3],[40,5,82,28],[41,0,89,2,"pop"],[41,4,89,2,"pop"],[41,7,82,28],[41,24,89,42],[42,0,89,42],[42,10,89,6,"count"],[42,15,89,42],[42,86,89,22],[42,87,89,42],[43,0,90,4],[43,13,90,11],[44,0,90,13,"type"],[44,8,90,13,"type"],[44,12,90,17],[44,14,90,19],[44,19,90,11],[45,0,90,26,"payload"],[45,8,90,26,"payload"],[45,15,90,33],[45,17,90,35],[46,0,90,37,"count"],[46,10,90,37,"count"],[46,15,90,42],[46,17,90,37,"count"],[47,0,90,35],[48,0,90,11],[48,7,90,4],[49,0,91,3],[49,5,82,28],[50,0,92,2,"popToTop"],[50,4,92,2,"popToTop"],[50,12,82,28],[50,34,92,30],[51,0,93,4],[51,13,93,11],[52,0,93,13,"type"],[52,8,93,13,"type"],[52,12,93,17],[52,14,93,19],[53,0,93,11],[53,7,93,4],[54,0,94,3],[55,0,82,28],[55,3,82,7],[58,0,97,15],[58,11,97,24,"StackRouter"],[58,22,97,15],[58,23,97,36,"options"],[58,30,97,15],[58,32,97,65],[59,0,98,2],[59,8,98,8,"router"],[59,14,101,3],[59,35,102,7,"BaseRouter"],[59,54,101,3],[60,0,104,4,"type"],[60,6,104,4,"type"],[60,10,104,8],[60,12,104,10],[60,19,101,3],[61,0,106,4,"getInitialState"],[61,6,106,4,"getInitialState"],[61,21,101,3],[61,54,106,52],[62,0,106,52],[62,12,106,22,"routeNames"],[62,22,106,52],[62,30,106,22,"routeNames"],[62,40,106,52],[63,0,106,52],[63,12,106,34,"routeParamList"],[63,26,106,52],[63,34,106,34,"routeParamList"],[63,48,106,52],[64,0,107,6],[64,12,107,12,"initialRouteName"],[64,28,107,28],[64,31,108,8,"options"],[64,38,108,15],[64,39,108,16,"initialRouteName"],[64,55,108,8],[64,60,108,37,"undefined"],[64,69,108,8],[64,73,109,8,"routeNames"],[64,83,109,18],[64,84,109,19,"includes"],[64,92,109,8],[64,93,109,28,"options"],[64,100,109,35],[64,101,109,36,"initialRouteName"],[64,117,109,8],[64,118,108,8],[64,121,110,12,"options"],[64,128,110,19],[64,129,110,20,"initialRouteName"],[64,145,108,8],[64,148,111,12,"routeNames"],[64,158,111,22],[64,159,111,23],[64,160,111,22],[64,161,107,6],[65,0,113,6],[65,15,113,13],[66,0,114,8,"stale"],[66,10,114,8,"stale"],[66,15,114,13],[66,17,114,15],[66,22,113,13],[67,0,115,8,"type"],[67,10,115,8,"type"],[67,14,115,12],[67,16,115,14],[67,23,113,13],[68,0,116,8,"key"],[68,10,116,8,"key"],[68,13,116,11],[68,26,116,22],[68,50,113,13],[69,0,117,8,"index"],[69,10,117,8,"index"],[69,15,117,13],[69,17,117,15],[69,18,113,13],[70,0,118,8,"routeNames"],[70,10,118,8,"routeNames"],[70,20,118,18],[70,22,118,8,"routeNames"],[70,32,113,13],[71,0,119,8,"routes"],[71,10,119,8,"routes"],[71,16,119,14],[71,18,119,16],[71,19,120,10],[72,0,121,12,"key"],[72,12,121,12,"key"],[72,15,121,15],[72,17,121,20,"initialRouteName"],[72,33,121,15],[72,42,121,40],[72,66,120,10],[73,0,122,12,"name"],[73,12,122,12,"name"],[73,16,122,16],[73,18,122,18,"initialRouteName"],[73,34,120,10],[74,0,123,12,"params"],[74,12,123,12,"params"],[74,18,123,18],[74,20,123,20,"routeParamList"],[74,34,123,34],[74,35,123,35,"initialRouteName"],[74,51,123,34],[75,0,120,10],[75,11,119,16],[76,0,113,13],[76,9,113,6],[77,0,127,5],[77,7,101,3],[78,0,129,4,"getRehydratedState"],[78,6,129,4,"getRehydratedState"],[78,24,101,3],[78,54,129,23,"partialState"],[78,66,101,3],[78,75,129,69],[79,0,129,69],[79,12,129,39,"routeNames"],[79,22,129,69],[79,31,129,39,"routeNames"],[79,41,129,69],[80,0,129,69],[80,12,129,51,"routeParamList"],[80,26,129,69],[80,35,129,51,"routeParamList"],[80,49,129,69],[81,0,130,6],[81,12,130,10,"state"],[81,17,130,15],[81,20,130,18,"partialState"],[81,32,130,6],[83,0,132,6],[83,12,132,10,"state"],[83,17,132,15],[83,18,132,16,"stale"],[83,23,132,10],[83,28,132,26],[83,33,132,6],[83,35,132,33],[84,0,133,8],[84,17,133,15,"state"],[84,22,133,8],[85,0,134,7],[87,0,136,6],[87,12,136,12,"routes"],[87,18,136,18],[87,21,136,21,"state"],[87,26,136,26],[87,27,136,27,"routes"],[87,33,136,21],[87,34,137,9,"filter"],[87,40,136,21],[87,41,137,16],[87,51,137,17,"route"],[87,56,137,16],[88,0,137,16],[88,17,137,27,"routeNames"],[88,27,137,37],[88,28,137,38,"includes"],[88,36,137,27],[88,37,137,47,"route"],[88,42,137,52],[88,43,137,53,"name"],[88,47,137,27],[88,48,137,16],[89,0,137,16],[89,9,136,21],[89,11,138,9,"map"],[89,14,136,21],[89,15,139,10],[89,25,139,11,"route"],[89,30,139,10],[90,0,139,10],[90,35,141,17,"route"],[90,40,139,10],[91,0,142,14,"key"],[91,12,142,14,"key"],[91,15,142,17],[91,17,142,19,"route"],[91,22,142,24],[91,23,142,25,"key"],[91,26,142,19],[91,30,142,35,"route"],[91,35,142,40],[91,36,142,41,"name"],[91,40,142,19],[91,49,142,49],[91,73,139,10],[92,0,143,14,"params"],[92,12,143,14,"params"],[92,18,143,20],[92,20,144,16,"routeParamList"],[92,34,144,30],[92,35,144,31,"route"],[92,40,144,36],[92,41,144,37,"name"],[92,45,144,30],[92,46,144,16],[92,51,144,47,"undefined"],[92,60,144,16],[92,81,146,25,"routeParamList"],[92,95,146,39],[92,96,146,40,"route"],[92,101,146,45],[92,102,146,46,"name"],[92,106,146,39],[92,107,144,16],[92,113,147,25,"route"],[92,118,147,30],[92,119,147,31,"params"],[92,125,144,16],[92,129,149,20,"route"],[92,134,149,25],[92,135,149,26,"params"],[93,0,139,10],[94,0,139,10],[94,9,136,21],[94,10,136,6],[96,0,153,6],[96,12,153,10,"routes"],[96,18,153,16],[96,19,153,17,"length"],[96,25,153,10],[96,30,153,28],[96,31,153,6],[96,33,153,31],[97,0,154,8],[97,14,154,14,"initialRouteName"],[97,30,154,30],[97,33,155,10,"options"],[97,40,155,17],[97,41,155,18,"initialRouteName"],[97,57,155,10],[97,62,155,39,"undefined"],[97,71,155,10],[97,74,156,14,"options"],[97,81,156,21],[97,82,156,22,"initialRouteName"],[97,98,155,10],[97,101,157,14,"routeNames"],[97,111,157,24],[97,112,157,25],[97,113,157,24],[97,114,154,8],[98,0,159,8,"routes"],[98,10,159,8,"routes"],[98,16,159,14],[98,17,159,15,"push"],[98,21,159,8],[98,22,159,20],[99,0,160,10,"key"],[99,12,160,10,"key"],[99,15,160,13],[99,17,160,18,"initialRouteName"],[99,33,160,13],[99,42,160,38],[99,66,159,20],[100,0,161,10,"name"],[100,12,161,10,"name"],[100,16,161,14],[100,18,161,16,"initialRouteName"],[100,34,159,20],[101,0,162,10,"params"],[101,12,162,10,"params"],[101,18,162,16],[101,20,162,18,"routeParamList"],[101,34,162,32],[101,35,162,33,"initialRouteName"],[101,51,162,32],[102,0,159,20],[102,11,159,8],[103,0,164,7],[105,0,166,6],[105,15,166,13],[106,0,167,8,"stale"],[106,10,167,8,"stale"],[106,15,167,13],[106,17,167,15],[106,22,166,13],[107,0,168,8,"type"],[107,10,168,8,"type"],[107,14,168,12],[107,16,168,14],[107,23,166,13],[108,0,169,8,"key"],[108,10,169,8,"key"],[108,13,169,11],[108,26,169,22],[108,50,166,13],[109,0,170,8,"index"],[109,10,170,8,"index"],[109,15,170,13],[109,17,170,15,"routes"],[109,23,170,21],[109,24,170,22,"length"],[109,30,170,15],[109,33,170,31],[109,34,166,13],[110,0,171,8,"routeNames"],[110,10,171,8,"routeNames"],[110,20,171,18],[110,22,171,8,"routeNames"],[110,32,166,13],[111,0,172,8,"routes"],[111,10,172,8,"routes"],[111,16,172,14],[111,18,172,8,"routes"],[112,0,166,13],[112,9,166,6],[113,0,174,5],[113,7,101,3],[114,0,176,4,"getStateForRouteNamesChange"],[114,6,176,4,"getStateForRouteNamesChange"],[114,33,101,3],[114,72,176,32,"state"],[114,77,101,3],[114,86,176,71],[115,0,176,71],[115,12,176,41,"routeNames"],[115,22,176,71],[115,31,176,41,"routeNames"],[115,41,176,71],[116,0,176,71],[116,12,176,53,"routeParamList"],[116,26,176,71],[116,35,176,53,"routeParamList"],[116,49,176,71],[117,0,177,6],[117,12,177,12,"routes"],[117,18,177,18],[117,21,177,21,"state"],[117,26,177,26],[117,27,177,27,"routes"],[117,33,177,21],[117,34,177,34,"filter"],[117,40,177,21],[117,41,177,41],[117,51,177,42,"route"],[117,56,177,41],[118,0,177,41],[118,17,178,8,"routeNames"],[118,27,178,18],[118,28,178,19,"includes"],[118,36,178,8],[118,37,178,28,"route"],[118,42,178,33],[118,43,178,34,"name"],[118,47,178,8],[118,48,177,41],[119,0,177,41],[119,9,177,21],[119,10,177,6],[121,0,181,6],[121,12,181,10,"routes"],[121,18,181,16],[121,19,181,17,"length"],[121,25,181,10],[121,30,181,28],[121,31,181,6],[121,33,181,31],[122,0,182,8],[122,14,182,14,"initialRouteName"],[122,30,182,30],[122,33,183,10,"options"],[122,40,183,17],[122,41,183,18,"initialRouteName"],[122,57,183,10],[122,62,183,39,"undefined"],[122,71,183,10],[122,75,184,10,"routeNames"],[122,85,184,20],[122,86,184,21,"includes"],[122,94,184,10],[122,95,184,30,"options"],[122,102,184,37],[122,103,184,38,"initialRouteName"],[122,119,184,10],[122,120,183,10],[122,123,185,14,"options"],[122,130,185,21],[122,131,185,22,"initialRouteName"],[122,147,183,10],[122,150,186,14,"routeNames"],[122,160,186,24],[122,161,186,25],[122,162,186,24],[122,163,182,8],[123,0,188,8,"routes"],[123,10,188,8,"routes"],[123,16,188,14],[123,17,188,15,"push"],[123,21,188,8],[123,22,188,20],[124,0,189,10,"key"],[124,12,189,10,"key"],[124,15,189,13],[124,17,189,18,"initialRouteName"],[124,33,189,13],[124,42,189,38],[124,66,188,20],[125,0,190,10,"name"],[125,12,190,10,"name"],[125,16,190,14],[125,18,190,16,"initialRouteName"],[125,34,188,20],[126,0,191,10,"params"],[126,12,191,10,"params"],[126,18,191,16],[126,20,191,18,"routeParamList"],[126,34,191,32],[126,35,191,33,"initialRouteName"],[126,51,191,32],[127,0,188,20],[127,11,188,8],[128,0,193,7],[130,0,195,6],[130,33,196,11,"state"],[130,38,195,6],[131,0,197,8,"routeNames"],[131,10,197,8,"routeNames"],[131,20,197,18],[131,22,197,8,"routeNames"],[131,32,195,6],[132,0,198,8,"routes"],[132,10,198,8,"routes"],[132,16,198,14],[132,18,198,8,"routes"],[132,24,195,6],[133,0,199,8,"index"],[133,10,199,8,"index"],[133,15,199,13],[133,17,199,15,"Math"],[133,21,199,19],[133,22,199,20,"min"],[133,25,199,15],[133,26,199,24,"state"],[133,31,199,29],[133,32,199,30,"index"],[133,37,199,15],[133,39,199,37,"routes"],[133,45,199,43],[133,46,199,44,"length"],[133,52,199,37],[133,55,199,53],[133,56,199,15],[134,0,195,6],[135,0,201,5],[135,7,101,3],[136,0,203,4,"getStateForRouteFocus"],[136,6,203,4,"getStateForRouteFocus"],[136,27,101,3],[136,60,203,26,"state"],[136,65,101,3],[136,67,203,33,"key"],[136,70,101,3],[136,72,203,38],[137,0,204,6],[137,12,204,12,"index"],[137,17,204,17],[137,20,204,20,"state"],[137,25,204,25],[137,26,204,26,"routes"],[137,32,204,20],[137,33,204,33,"findIndex"],[137,42,204,20],[137,43,204,43],[137,53,204,44,"r"],[137,54,204,43],[138,0,204,43],[138,17,204,50,"r"],[138,18,204,51],[138,19,204,52,"key"],[138,22,204,50],[138,27,204,60,"key"],[138,30,204,43],[139,0,204,43],[139,9,204,20],[139,10,204,6],[141,0,206,6],[141,12,206,10,"index"],[141,17,206,15],[141,22,206,20],[141,23,206,21],[141,24,206,10],[141,28,206,26,"index"],[141,33,206,31],[141,38,206,36,"state"],[141,43,206,41],[141,44,206,42,"index"],[141,49,206,6],[141,51,206,49],[142,0,207,8],[142,17,207,15,"state"],[142,22,207,8],[143,0,208,7],[145,0,210,6],[145,33,211,11,"state"],[145,38,210,6],[146,0,212,8,"index"],[146,10,212,8,"index"],[146,15,212,13],[146,17,212,8,"index"],[146,22,210,6],[147,0,213,8,"routes"],[147,10,213,8,"routes"],[147,16,213,14],[147,18,213,16,"state"],[147,23,213,21],[147,24,213,22,"routes"],[147,30,213,16],[147,31,213,29,"slice"],[147,36,213,16],[147,37,213,35],[147,38,213,16],[147,40,213,38,"index"],[147,45,213,43],[147,48,213,46],[147,49,213,16],[148,0,210,6],[149,0,215,5],[149,7,101,3],[150,0,217,4,"getStateForAction"],[150,6,217,4,"getStateForAction"],[150,23,101,3],[150,52,217,22,"state"],[150,57,101,3],[150,59,217,29,"action"],[150,65,101,3],[150,67,217,37,"options"],[150,74,101,3],[150,76,217,46],[151,0,217,46],[151,12,218,14,"routeParamList"],[151,26,217,46],[151,29,218,33,"options"],[151,36,217,46],[151,37,218,14,"routeParamList"],[151,51,217,46],[153,0,220,6],[153,16,220,14,"action"],[153,22,220,20],[153,23,220,21,"type"],[153,27,220,6],[154,0,221,8],[154,15,221,13],[154,24,221,8],[155,0,221,24],[156,0,222,10],[156,18,222,16,"index"],[156,23,222,21],[156,26,223,12,"action"],[156,32,223,18],[156,33,223,19,"target"],[156,39,223,12],[156,44,223,30,"state"],[156,49,223,35],[156,50,223,36,"key"],[156,53,223,12],[156,57,223,43,"action"],[156,63,223,49],[156,64,223,50,"source"],[156,70,223,12],[156,73,224,16,"state"],[156,78,224,21],[156,79,224,22,"routes"],[156,85,224,16],[156,86,224,29,"findIndex"],[156,95,224,16],[156,96,224,39],[156,106,224,40,"r"],[156,107,224,39],[157,0,224,39],[157,23,224,46,"r"],[157,24,224,47],[157,25,224,48,"key"],[157,28,224,46],[157,33,224,56,"action"],[157,39,224,62],[157,40,224,63,"source"],[157,46,224,39],[158,0,224,39],[158,15,224,16],[158,16,223,12],[158,19,225,16,"state"],[158,24,225,21],[158,25,225,22,"index"],[158,30,222,10],[160,0,227,10],[160,18,227,14,"index"],[160,23,227,19],[160,28,227,24],[160,29,227,25],[160,30,227,10],[160,32,227,28],[161,0,228,12],[161,23,228,19],[161,27,228,12],[162,0,229,11],[164,0,221,24],[164,36,231,40,"action"],[164,42,231,46],[164,43,231,47,"payload"],[164,50,221,24],[165,0,221,24],[165,18,231,18,"name"],[165,22,221,24],[165,41,231,18,"name"],[165,45,221,24],[166,0,221,24],[166,18,231,24,"key"],[166,21,221,24],[166,40,231,24,"key"],[166,43,221,24],[167,0,221,24],[167,18,231,29,"params"],[167,24,221,24],[167,43,231,29,"params"],[167,49,221,24],[169,0,233,10],[169,18,233,14],[169,19,233,15,"state"],[169,24,233,20],[169,25,233,21,"routeNames"],[169,35,233,15],[169,36,233,32,"includes"],[169,44,233,15],[169,45,233,41,"name"],[169,49,233,15],[169,50,233,10],[169,52,233,48],[170,0,234,12],[170,23,234,19],[170,27,234,12],[171,0,235,11],[173,0,237,10],[173,39,238,15,"state"],[173,44,237,10],[174,0,239,12,"routes"],[174,16,239,12,"routes"],[174,22,239,18],[174,24,239,20,"state"],[174,29,239,25],[174,30,239,26,"routes"],[174,36,239,20],[174,37,239,33,"map"],[174,40,239,20],[174,41,239,37],[174,51,239,38,"route"],[174,56,239,37],[174,58,239,45,"i"],[174,59,239,37],[175,0,239,37],[175,25,240,14,"i"],[175,26,240,15],[175,31,240,20,"index"],[175,36,240,14],[175,39,241,18],[176,0,242,20,"key"],[176,20,242,20,"key"],[176,23,242,23],[176,25,242,25,"key"],[176,28,242,28],[176,33,242,33,"undefined"],[176,42,242,25],[176,45,242,45,"key"],[176,48,242,25],[176,51,242,54,"name"],[176,55,242,25],[176,64,242,62],[176,88,241,18],[177,0,243,20,"name"],[177,20,243,20,"name"],[177,24,243,24],[177,26,243,20,"name"],[177,30,241,18],[178,0,244,20,"params"],[178,20,244,20,"params"],[178,26,244,26],[178,28,245,22,"routeParamList"],[178,42,245,36],[178,43,245,37,"name"],[178,47,245,36],[178,48,245,22],[178,53,245,47,"undefined"],[178,62,245,22],[178,83,247,31,"routeParamList"],[178,97,247,45],[178,98,247,46,"name"],[178,102,247,45],[178,103,245,22],[178,109,248,31,"params"],[178,115,245,22],[178,119,250,26,"params"],[179,0,241,18],[179,19,240,14],[179,22,252,18,"route"],[179,27,239,37],[180,0,239,37],[180,17,239,20],[181,0,237,10],[182,0,255,9],[184,0,257,8],[184,15,257,13],[184,21,257,8],[185,0,258,10],[185,16,258,14,"state"],[185,21,258,19],[185,22,258,20,"routeNames"],[185,32,258,14],[185,33,258,31,"includes"],[185,41,258,14],[185,42,258,40,"action"],[185,48,258,46],[185,49,258,47,"payload"],[185,56,258,40],[185,57,258,55,"name"],[185,61,258,14],[185,62,258,10],[185,64,258,62],[186,0,259,12],[186,39,260,17,"state"],[186,44,259,12],[187,0,261,14,"index"],[187,16,261,14,"index"],[187,21,261,19],[187,23,261,21,"state"],[187,28,261,26],[187,29,261,27,"index"],[187,34,261,21],[187,37,261,35],[187,38,259,12],[188,0,262,14,"routes"],[188,16,262,14,"routes"],[188,22,262,20],[188,67,263,19,"state"],[188,72,263,24],[188,73,263,25,"routes"],[188,79,262,20],[188,83,264,16],[189,0,265,18,"key"],[189,18,265,18,"key"],[189,21,265,21],[189,23,266,20,"action"],[189,29,266,26],[189,30,266,27,"payload"],[189,37,266,20],[189,38,266,35,"key"],[189,41,266,20],[189,46,266,43,"undefined"],[189,55,266,20],[189,58,267,27,"action"],[189,64,267,33],[189,65,267,34,"payload"],[189,72,267,27],[189,73,267,42,"name"],[189,77,266,20],[189,86,267,50],[189,110,266,20],[189,113,268,24,"action"],[189,119,268,30],[189,120,268,31,"payload"],[189,127,268,24],[189,128,268,39,"key"],[189,131,264,16],[190,0,269,18,"name"],[190,18,269,18,"name"],[190,22,269,22],[190,24,269,24,"action"],[190,30,269,30],[190,31,269,31,"payload"],[190,38,269,24],[190,39,269,39,"name"],[190,43,264,16],[191,0,270,18,"params"],[191,18,270,18,"params"],[191,24,270,24],[191,26,271,20,"routeParamList"],[191,40,271,34],[191,41,271,35,"action"],[191,47,271,41],[191,48,271,42,"payload"],[191,55,271,35],[191,56,271,50,"name"],[191,60,271,34],[191,61,271,20],[191,66,271,60,"undefined"],[191,75,271,20],[191,96,273,29,"routeParamList"],[191,110,273,43],[191,111,273,44,"action"],[191,117,273,50],[191,118,273,51,"payload"],[191,125,273,44],[191,126,273,59,"name"],[191,130,273,43],[191,131,271,20],[191,137,274,29,"action"],[191,143,274,35],[191,144,274,36,"payload"],[191,151,274,29],[191,152,274,44,"params"],[191,158,271,20],[191,162,276,24,"action"],[191,168,276,30],[191,169,276,31,"payload"],[191,176,276,24],[191,177,276,39,"params"],[192,0,264,16],[192,17,262,20],[193,0,259,12],[194,0,280,11],[196,0,282,10],[196,19,282,17],[196,23,282,10],[198,0,284,8],[198,15,284,13],[198,20,284,8],[199,0,284,20],[200,0,285,10],[200,18,285,16,"index"],[200,24,285,21],[200,27,286,12,"action"],[200,33,286,18],[200,34,286,19,"target"],[200,40,286,12],[200,45,286,30,"state"],[200,50,286,35],[200,51,286,36,"key"],[200,54,286,12],[200,58,286,43,"action"],[200,64,286,49],[200,65,286,50,"source"],[200,71,286,12],[200,74,287,16,"state"],[200,79,287,21],[200,80,287,22,"routes"],[200,86,287,16],[200,87,287,29,"findIndex"],[200,96,287,16],[200,97,287,39],[200,107,287,40,"r"],[200,108,287,39],[201,0,287,39],[201,23,287,46,"r"],[201,24,287,47],[201,25,287,48,"key"],[201,28,287,46],[201,33,287,56,"action"],[201,39,287,62],[201,40,287,63,"source"],[201,46,287,39],[202,0,287,39],[202,15,287,16],[202,16,286,12],[202,19,288,16,"state"],[202,24,288,21],[202,25,288,22,"index"],[202,30,285,10],[204,0,290,10],[204,18,290,14,"index"],[204,24,290,19],[204,27,290,22],[204,28,290,10],[204,30,290,25],[205,0,291,12],[205,20,291,18,"count"],[205,26,291,23],[205,29,291,26,"Math"],[205,33,291,30],[205,34,291,31,"max"],[205,37,291,26],[205,38,291,35,"index"],[205,44,291,40],[205,47,291,43,"action"],[205,53,291,49],[205,54,291,50,"payload"],[205,61,291,43],[205,62,291,58,"count"],[205,67,291,35],[205,70,291,66],[205,71,291,26],[205,73,291,69],[205,74,291,26],[205,75,291,12],[207,0,292,12],[207,20,292,18,"routes"],[207,26,292,24],[207,29,292,27,"state"],[207,34,292,32],[207,35,292,33,"routes"],[207,41,292,27],[207,42,293,15,"slice"],[207,47,292,27],[207,48,293,21],[207,49,292,27],[207,51,293,24,"count"],[207,57,292,27],[207,59,294,15,"concat"],[207,65,292,27],[207,66,294,22,"state"],[207,71,294,27],[207,72,294,28,"routes"],[207,78,294,22],[207,79,294,35,"slice"],[207,84,294,22],[207,85,294,41,"index"],[207,91,294,46],[207,94,294,49],[207,95,294,22],[207,96,292,27],[207,97,292,12],[208,0,296,12],[208,41,297,17,"state"],[208,46,296,12],[209,0,298,14,"index"],[209,18,298,14,"index"],[209,23,298,19],[209,25,298,21,"routes"],[209,31,298,27],[209,32,298,28,"length"],[209,38,298,21],[209,41,298,37],[209,42,296,12],[210,0,299,14,"routes"],[210,18,299,14,"routes"],[210,24,299,20],[210,26,299,14,"routes"],[211,0,296,12],[212,0,301,11],[214,0,303,10],[214,21,303,17],[214,25,303,10],[215,0,304,9],[217,0,306,8],[217,15,306,13],[217,27,306,8],[218,0,307,10],[218,19,307,17,"router"],[218,25,307,23],[218,26,307,24,"getStateForAction"],[218,43,307,17],[218,44,308,12,"state"],[218,49,307,17],[218,51,309,12],[219,0,310,14,"type"],[219,14,310,14,"type"],[219,18,310,18],[219,20,310,20],[219,25,309,12],[220,0,311,14,"payload"],[220,14,311,14,"payload"],[220,21,311,21],[220,23,311,23],[221,0,311,25,"count"],[221,16,311,25,"count"],[221,21,311,30],[221,23,311,32,"state"],[221,28,311,37],[221,29,311,38,"routes"],[221,35,311,32],[221,36,311,45,"length"],[221,42,311,32],[221,45,311,54],[222,0,311,23],[223,0,309,12],[223,13,307,17],[223,15,313,12,"options"],[223,22,307,17],[223,23,307,10],[225,0,316,8],[225,15,316,13],[225,25,316,8],[226,0,317,10],[226,16,318,12,"action"],[226,22,318,18],[226,23,318,19,"payload"],[226,30,318,12],[226,31,318,27,"key"],[226,34,318,12],[226,38,319,13,"action"],[226,44,319,19],[226,45,319,20,"payload"],[226,52,319,13],[226,53,319,28,"name"],[226,57,319,13],[226,61,320,14,"state"],[226,66,320,19],[226,67,320,20,"routeNames"],[226,77,320,14],[226,78,320,31,"includes"],[226,86,320,14],[226,87,320,40,"action"],[226,93,320,46],[226,94,320,47,"payload"],[226,101,320,40],[226,102,320,55,"name"],[226,106,320,14],[226,107,317,10],[226,109,321,12],[227,0,323,12],[227,18,323,16,"index"],[227,25,323,21],[227,28,323,24],[227,29,323,25],[227,30,323,12],[229,0,325,12],[229,18,326,15,"state"],[229,23,326,20],[229,24,326,21,"routes"],[229,30,326,15],[229,31,326,28,"state"],[229,36,326,33],[229,37,326,34,"index"],[229,42,326,15],[229,44,326,41,"name"],[229,48,326,15],[229,53,326,50,"action"],[229,59,326,56],[229,60,326,57,"payload"],[229,67,326,50],[229,68,326,65,"name"],[229,72,326,15],[229,76,327,16,"action"],[229,82,327,22],[229,83,327,23,"payload"],[229,90,327,16],[229,91,327,31,"key"],[229,94,327,16],[229,99,327,39,"undefined"],[229,108,326,14],[229,112,328,14,"state"],[229,117,328,19],[229,118,328,20,"routes"],[229,124,328,14],[229,125,328,27,"state"],[229,130,328,32],[229,131,328,33,"index"],[229,136,328,14],[229,138,328,40,"key"],[229,141,328,14],[229,146,328,48,"action"],[229,152,328,54],[229,153,328,55,"payload"],[229,160,328,48],[229,161,328,63,"key"],[229,164,325,12],[229,166,329,14],[230,0,330,14,"index"],[230,16,330,14,"index"],[230,23,330,19],[230,26,330,22,"state"],[230,31,330,27],[230,32,330,28,"index"],[230,37,330,14],[231,0,331,13],[231,15,325,12],[231,21,331,19],[232,0,332,14],[232,21,332,19],[232,25,332,23,"i"],[232,26,332,24],[232,29,332,27,"state"],[232,34,332,32],[232,35,332,33,"routes"],[232,41,332,27],[232,42,332,40,"length"],[232,48,332,27],[232,51,332,49],[232,52,332,14],[232,54,332,52,"i"],[232,55,332,53],[232,59,332,57],[232,60,332,14],[232,62,332,60,"i"],[232,63,332,61],[232,65,332,14],[232,67,332,65],[233,0,333,16],[233,22,334,19,"state"],[233,27,334,24],[233,28,334,25,"routes"],[233,34,334,19],[233,35,334,32,"i"],[233,36,334,19],[233,38,334,35,"name"],[233,42,334,19],[233,47,334,44,"action"],[233,53,334,50],[233,54,334,51,"payload"],[233,61,334,44],[233,62,334,59,"name"],[233,66,334,19],[233,70,335,20,"action"],[233,76,335,26],[233,77,335,27,"payload"],[233,84,335,20],[233,85,335,35,"key"],[233,88,335,20],[233,93,335,43,"undefined"],[233,102,334,18],[233,106,336,18,"state"],[233,111,336,23],[233,112,336,24,"routes"],[233,118,336,18],[233,119,336,31,"i"],[233,120,336,18],[233,122,336,34,"key"],[233,125,336,18],[233,130,336,42,"action"],[233,136,336,48],[233,137,336,49,"payload"],[233,144,336,42],[233,145,336,57,"key"],[233,148,333,16],[233,150,337,18],[234,0,338,18,"index"],[234,20,338,18,"index"],[234,27,338,23],[234,30,338,26,"i"],[234,31,338,18],[235,0,339,18],[236,0,340,17],[237,0,341,15],[238,0,342,13],[240,0,344,12],[240,18,345,14,"index"],[240,25,345,19],[240,30,345,24],[240,31,345,25],[240,32,345,14],[240,36,346,14,"action"],[240,42,346,20],[240,43,346,21,"payload"],[240,50,346,14],[240,51,346,29,"key"],[240,54,345,14],[240,58,347,14,"action"],[240,64,347,20],[240,65,347,21,"payload"],[240,72,347,14],[240,73,347,29,"name"],[240,77,347,14],[240,82,347,38,"undefined"],[240,91,344,12],[240,93,348,14],[241,0,349,14],[241,23,349,21],[241,27,349,14],[242,0,350,13],[244,0,352,12],[244,18,352,16,"index"],[244,25,352,21],[244,30,352,26],[244,31,352,27],[244,32,352,16],[244,36,352,32,"action"],[244,42,352,38],[244,43,352,39,"payload"],[244,50,352,32],[244,51,352,47,"name"],[244,55,352,32],[244,60,352,56,"undefined"],[244,69,352,12],[244,71,352,67],[245,0,353,14],[245,23,353,21,"router"],[245,29,353,27],[245,30,353,28,"getStateForAction"],[245,47,353,21],[245,48,354,16,"state"],[245,53,353,21],[245,55,355,16],[246,0,356,18,"type"],[246,18,356,18,"type"],[246,22,356,22],[246,24,356,24],[246,30,355,16],[247,0,357,18,"payload"],[247,18,357,18,"payload"],[247,25,357,25],[247,27,357,27],[248,0,358,20,"key"],[248,20,358,20,"key"],[248,23,358,23],[248,25,358,25,"action"],[248,31,358,31],[248,32,358,32,"payload"],[248,39,358,25],[248,40,358,40,"key"],[248,43,357,27],[249,0,359,20,"name"],[249,20,359,20,"name"],[249,24,359,24],[249,26,359,26,"action"],[249,32,359,32],[249,33,359,33,"payload"],[249,40,359,26],[249,41,359,41,"name"],[249,45,357,27],[250,0,360,20,"params"],[250,20,360,20,"params"],[250,26,360,26],[250,28,360,28,"action"],[250,34,360,34],[250,35,360,35,"payload"],[250,42,360,28],[250,43,360,43,"params"],[251,0,357,27],[252,0,355,16],[252,17,353,21],[252,19,363,16,"options"],[252,26,353,21],[252,27,353,14],[253,0,365,13],[255,0,367,12],[255,39,368,17,"state"],[255,44,367,12],[256,0,369,14,"index"],[256,16,369,14,"index"],[256,21,369,19],[256,23,369,14,"index"],[256,30,367,12],[257,0,370,14,"routes"],[257,16,370,14,"routes"],[257,22,370,20],[257,67,371,19,"state"],[257,72,371,24],[257,73,371,25,"routes"],[257,79,371,19],[257,80,371,32,"slice"],[257,85,371,19],[257,86,371,38],[257,87,371,19],[257,89,371,41,"index"],[257,96,371,19],[257,97,370,20],[257,101,372,16,"action"],[257,107,372,22],[257,108,372,23,"payload"],[257,115,372,16],[257,116,372,31,"params"],[257,122,372,16],[257,127,372,42,"undefined"],[257,136,372,16],[257,157,374,25,"state"],[257,162,374,30],[257,163,374,31,"routes"],[257,169,374,25],[257,170,374,38,"index"],[257,177,374,25],[257,178,372,16],[258,0,375,22,"params"],[258,18,375,22,"params"],[258,24,375,28],[258,44,376,27,"state"],[258,49,376,32],[258,50,376,33,"routes"],[258,56,376,27],[258,57,376,40,"index"],[258,64,376,27],[258,66,376,47,"params"],[258,72,375,28],[258,78,377,27,"action"],[258,84,377,33],[258,85,377,34,"payload"],[258,92,377,27],[258,93,377,42,"params"],[258,99,375,28],[259,0,372,16],[259,21,380,20,"state"],[259,26,380,25],[259,27,380,26,"routes"],[259,33,380,20],[259,34,380,33,"index"],[259,41,380,20],[259,42,370,20],[260,0,367,12],[261,0,383,11],[263,0,385,10],[263,19,385,17],[263,23,385,10],[265,0,387,8],[265,15,387,13],[265,24,387,8],[266,0,388,10],[266,16,388,14,"state"],[266,21,388,19],[266,22,388,20,"index"],[266,27,388,14],[266,30,388,28],[266,31,388,10],[266,33,388,31],[267,0,389,12],[267,21,389,19,"router"],[267,27,389,25],[267,28,389,26,"getStateForAction"],[267,45,389,19],[267,46,390,14,"state"],[267,51,389,19],[267,53,391,14],[268,0,392,16,"type"],[268,16,392,16,"type"],[268,20,392,20],[268,22,392,22],[268,27,391,14],[269,0,393,16,"payload"],[269,16,393,16,"payload"],[269,23,393,23],[269,25,393,25],[270,0,393,27,"count"],[270,18,393,27,"count"],[270,23,393,32],[270,25,393,34],[271,0,393,25],[271,17,391,14],[272,0,394,16,"target"],[272,16,394,16,"target"],[272,22,394,22],[272,24,394,24,"action"],[272,30,394,30],[272,31,394,31,"target"],[272,37,391,14],[273,0,395,16,"source"],[273,16,395,16,"source"],[273,22,395,22],[273,24,395,24,"action"],[273,30,395,30],[273,31,395,31,"source"],[274,0,391,14],[274,15,389,19],[274,17,397,14,"options"],[274,24,389,19],[274,25,389,12],[275,0,399,11],[277,0,401,10],[277,19,401,17],[277,23,401,10],[279,0,403,8],[280,0,404,10],[280,19,404,17,"BaseRouter"],[280,39,404,28,"getStateForAction"],[280,56,404,17],[280,57,404,46,"state"],[280,62,404,17],[280,64,404,53,"action"],[280,70,404,17],[280,71,404,10],[281,0,220,6],[282,0,406,5],[282,7,101,3],[283,0,408,4,"actionCreators"],[283,6,408,4,"actionCreators"],[283,20,408,18],[283,22,408,20,"StackActions"],[284,0,101,3],[284,6,98,2],[286,0,411,2],[286,11,411,9,"router"],[286,17,411,2],[287,0,412,1]],"functionMap":{"names":["<global>","StackActions.replace","StackActions.push","StackActions.pop","StackActions.popToTop","StackRouter","router.getInitialState","router.getRehydratedState","state.routes.filter$argument_0","state.routes.filter.map$argument_0","router.getStateForRouteNamesChange","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0"],"mappings":"AAA;ECkF;GDE;EEC;GFE;EGC;GHE;EIC;GJE;eKG;ICS;KDqB;IEE;gBCQ,0CD;UEE;+BFW;KFwB;IKE;yCFC;uCEC;KLuB;IME;2CCC,oBD;KNW;IQE;uCDO,8BC;qCCe;uBDa;uCDmC,8BC;KRuH;CLM"}},"type":"js/module"}]}