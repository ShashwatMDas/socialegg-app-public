{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"nanoid/non-secure","data":{"isAsync":false}},{"name":"./BaseRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = TabRouter;\n  exports.TabActions = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[2], \"nanoid/non-secure\");\n\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./BaseRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo: function jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    }\n  };\n  exports.TabActions = TabActions;\n\n  var getRouteHistory = function getRouteHistory(routes, index, backBehavior) {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n\n    switch (backBehavior) {\n      case 'initialRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n\n        break;\n\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n\n        break;\n\n      case 'history':\n        break;\n    }\n\n    return history;\n  };\n\n  var changeIndex = function changeIndex(state, index, backBehavior) {\n    var history;\n\n    if (backBehavior === 'history') {\n      var currentKey = state.routes[index].key;\n      history = state.history.filter(function (it) {\n        return it.type === 'route' ? it.key !== currentKey : false;\n      }).concat({\n        type: TYPE_ROUTE,\n        key: currentKey\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior);\n    }\n\n    return _objectSpread({}, state, {\n      index: index,\n      history: history\n    });\n  };\n\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n        _ref$backBehavior = _ref.backBehavior,\n        backBehavior = _ref$backBehavior === void 0 ? 'history' : _ref$backBehavior;\n\n    var router = _objectSpread({}, _BaseRouter.default, {\n      type: 'tab',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(function (name) {\n          return {\n            name: name,\n            key: name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[name]\n          };\n        });\n        var history = getRouteHistory(routes, index, backBehavior);\n        return {\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _nonSecure.nanoid)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var _state$history, _history;\n\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n        var state = partialState;\n\n        if (state.stale === false) {\n          return state;\n        }\n\n        var routes = routeNames.map(function (name) {\n          var route = state.routes.find(function (r) {\n            return r.name === name;\n          });\n          return _objectSpread({}, route, {\n            name: name,\n            key: route && route.name === name && route.key ? route.key : name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[name] !== undefined ? _objectSpread({}, routeParamList[name], {}, route ? route.params : undefined) : route ? route.params : undefined\n          });\n        });\n        var index = Math.min(Math.max(typeof state.index === 'number' ? state.index : routeNames.indexOf(state.routes[0].name), 0), routes.length - 1);\n        var history = (_state$history = state.history) == null ? void 0 : _state$history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n\n        if (!((_history = history) == null ? void 0 : _history.length)) {\n          history = getRouteHistory(routes, index, backBehavior);\n        }\n\n        return {\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _nonSecure.nanoid)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n            routeParamList = _ref4.routeParamList;\n        var routes = routeNames.map(function (name) {\n          return state.routes.find(function (r) {\n            return r.name === name;\n          }) || {\n            name: name,\n            key: name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[name]\n          };\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior);\n        }\n\n        return _objectSpread({}, state, {\n          history: history,\n          routeNames: routeNames,\n          routes: routes,\n          index: index\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n\n        return changeIndex(state, index, backBehavior);\n      },\n      getStateForAction: function getStateForAction(state, action) {\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n            {\n              var index = -1;\n\n              if (action.type === 'NAVIGATE' && action.payload.key) {\n                index = state.routes.findIndex(function (route) {\n                  return route.key === action.payload.key;\n                });\n              } else {\n                index = state.routes.findIndex(function (route) {\n                  return route.name === action.payload.name;\n                });\n              }\n\n              if (index === -1) {\n                return null;\n              }\n\n              return changeIndex(_objectSpread({}, state, {\n                routes: action.payload.params !== undefined ? state.routes.map(function (route, i) {\n                  return i === index ? _objectSpread({}, route, {\n                    params: _objectSpread({}, route.params, {}, action.payload.params)\n                  }) : route;\n                }) : state.routes\n              }), index, backBehavior);\n            }\n\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n\n              var previousKey = state.history[state.history.length - 2].key;\n\n              var _index = state.routes.findIndex(function (route) {\n                return route.key === previousKey;\n              });\n\n              if (_index === -1) {\n                return null;\n              }\n\n              return _objectSpread({}, state, {\n                history: state.history.slice(0, -1),\n                index: _index\n              });\n            }\n\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n        return action.type === 'NAVIGATE';\n      },\n      actionCreators: TabActions\n    });\n\n    return router;\n  }\n});","lineCount":265,"map":[[12,0,1,0],[14,0,2,0],[20,0,51,0],[20,6,51,6,"TYPE_ROUTE"],[20,16,51,16],[20,19,51,19],[20,26,51,0],[21,0,53,7],[21,6,53,13,"TabActions"],[21,16,53,23],[21,19,53,26],[22,0,54,2,"jumpTo"],[22,4,54,2,"jumpTo"],[22,10,53,26],[22,28,54,9,"name"],[22,32,53,26],[22,34,54,23,"params"],[22,40,53,26],[22,42,54,55],[23,0,55,4],[23,13,55,11],[24,0,55,13,"type"],[24,8,55,13,"type"],[24,12,55,17],[24,14,55,19],[24,23,55,11],[25,0,55,30,"payload"],[25,8,55,30,"payload"],[25,15,55,37],[25,17,55,39],[26,0,55,41,"name"],[26,10,55,41,"name"],[26,14,55,45],[26,16,55,41,"name"],[26,20,55,39],[27,0,55,47,"params"],[27,10,55,47,"params"],[27,16,55,53],[27,18,55,47,"params"],[28,0,55,39],[29,0,55,11],[29,7,55,4],[30,0,56,3],[31,0,53,26],[31,3,53,7],[34,0,59,0],[34,6,59,6,"getRouteHistory"],[34,21,59,21],[34,24,59,24],[34,33,59,6,"getRouteHistory"],[34,48,59,24],[34,49,60,2,"routes"],[34,55,59,24],[34,57,61,2,"index"],[34,62,59,24],[34,64,62,2,"backBehavior"],[34,76,59,24],[34,78,63,5],[35,0,64,2],[35,8,64,8,"history"],[35,15,64,15],[35,18,64,18],[35,19,64,19],[36,0,64,21,"type"],[36,6,64,21,"type"],[36,10,64,25],[36,12,64,27,"TYPE_ROUTE"],[36,22,64,19],[37,0,64,39,"key"],[37,6,64,39,"key"],[37,9,64,42],[37,11,64,44,"routes"],[37,17,64,50],[37,18,64,51,"index"],[37,23,64,50],[37,24,64,44],[37,25,64,58,"key"],[38,0,64,19],[38,5,64,18],[38,6,64,2],[40,0,66,2],[40,12,66,10,"backBehavior"],[40,24,66,2],[41,0,67,4],[41,11,67,9],[41,25,67,4],[42,0,68,6],[42,12,68,10,"index"],[42,17,68,15],[42,22,68,20],[42,23,68,6],[42,25,68,23],[43,0,69,8,"history"],[43,10,69,8,"history"],[43,17,69,15],[43,18,69,16,"unshift"],[43,25,69,8],[43,26,69,24],[44,0,69,26,"type"],[44,12,69,26,"type"],[44,16,69,30],[44,18,69,32,"TYPE_ROUTE"],[44,28,69,24],[45,0,69,44,"key"],[45,12,69,44,"key"],[45,15,69,47],[45,17,69,49,"routes"],[45,23,69,55],[45,24,69,56],[45,25,69,55],[45,26,69,49],[45,27,69,59,"key"],[46,0,69,24],[46,11,69,8],[47,0,70,7],[49,0,71,6],[51,0,72,4],[51,11,72,9],[51,18,72,4],[52,0,73,6],[52,13,73,11],[52,17,73,15,"i"],[52,18,73,16],[52,21,73,19,"index"],[52,26,73,6],[52,28,73,26,"i"],[52,29,73,27],[52,32,73,30],[52,33,73,6],[52,35,73,33,"i"],[52,36,73,34],[52,38,73,6],[52,40,73,38],[53,0,74,8,"history"],[53,10,74,8,"history"],[53,17,74,15],[53,18,74,16,"unshift"],[53,25,74,8],[53,26,74,24],[54,0,74,26,"type"],[54,12,74,26,"type"],[54,16,74,30],[54,18,74,32,"TYPE_ROUTE"],[54,28,74,24],[55,0,74,44,"key"],[55,12,74,44,"key"],[55,15,74,47],[55,17,74,49,"routes"],[55,23,74,55],[55,24,74,56,"i"],[55,25,74,57],[55,28,74,60],[55,29,74,55],[55,30,74,49],[55,31,74,63,"key"],[56,0,74,24],[56,11,74,8],[57,0,75,7],[59,0,76,6],[61,0,77,4],[61,11,77,9],[61,20,77,4],[62,0,79,6],[63,0,66,2],[65,0,82,2],[65,11,82,9,"history"],[65,18,82,2],[66,0,83,1],[66,3,59,0],[68,0,85,0],[68,6,85,6,"changeIndex"],[68,17,85,17],[68,20,85,20],[68,29,85,6,"changeIndex"],[68,40,85,20],[68,41,86,2,"state"],[68,46,85,20],[68,48,87,2,"index"],[68,53,85,20],[68,55,88,2,"backBehavior"],[68,67,85,20],[68,69,89,5],[69,0,90,2],[69,8,90,6,"history"],[69,15,90,2],[71,0,92,2],[71,8,92,6,"backBehavior"],[71,20,92,18],[71,25,92,23],[71,34,92,2],[71,36,92,34],[72,0,93,4],[72,10,93,10,"currentKey"],[72,20,93,20],[72,23,93,23,"state"],[72,28,93,28],[72,29,93,29,"routes"],[72,35,93,23],[72,36,93,36,"index"],[72,41,93,23],[72,43,93,43,"key"],[72,46,93,4],[73,0,95,4,"history"],[73,6,95,4,"history"],[73,13,95,11],[73,16,95,14,"state"],[73,21,95,19],[73,22,95,20,"history"],[73,29,95,14],[73,30,96,7,"filter"],[73,36,95,14],[73,37,96,14],[73,47,96,15,"it"],[73,49,96,14],[74,0,96,14],[74,15,96,23,"it"],[74,17,96,25],[74,18,96,26,"type"],[74,22,96,23],[74,27,96,35],[74,34,96,23],[74,37,96,45,"it"],[74,39,96,47],[74,40,96,48,"key"],[74,43,96,45],[74,48,96,56,"currentKey"],[74,58,96,23],[74,61,96,69],[74,66,96,14],[75,0,96,14],[75,7,95,14],[75,9,97,7,"concat"],[75,15,95,14],[75,16,97,14],[76,0,97,16,"type"],[76,8,97,16,"type"],[76,12,97,20],[76,14,97,22,"TYPE_ROUTE"],[76,24,97,14],[77,0,97,34,"key"],[77,8,97,34,"key"],[77,11,97,37],[77,13,97,39,"currentKey"],[78,0,97,14],[78,7,95,14],[78,8,95,4],[79,0,98,3],[79,5,92,2],[79,11,98,9],[80,0,99,4,"history"],[80,6,99,4,"history"],[80,13,99,11],[80,16,99,14,"getRouteHistory"],[80,31,99,29],[80,32,99,30,"state"],[80,37,99,35],[80,38,99,36,"routes"],[80,44,99,29],[80,46,99,44,"index"],[80,51,99,29],[80,53,99,51,"backBehavior"],[80,65,99,29],[80,66,99,4],[81,0,100,3],[83,0,102,2],[83,29,103,7,"state"],[83,34,102,2],[84,0,104,4,"index"],[84,6,104,4,"index"],[84,11,104,9],[84,13,104,4,"index"],[84,18,102,2],[85,0,105,4,"history"],[85,6,105,4,"history"],[85,13,105,11],[85,15,105,4,"history"],[86,0,102,2],[87,0,107,1],[87,3,85,0],[89,0,109,15],[89,11,109,24,"TabRouter"],[89,20,109,15],[89,27,112,21],[90,0,112,21],[90,8,110,2,"initialRouteName"],[90,24,112,21],[90,32,110,2,"initialRouteName"],[90,48,112,21],[91,0,112,21],[91,33,111,2,"backBehavior"],[91,45,112,21],[92,0,112,21],[92,8,111,2,"backBehavior"],[92,20,112,21],[92,54,111,17],[92,63,112,21],[94,0,113,2],[94,8,113,8,"router"],[94,14,116,3],[94,35,117,7,"BaseRouter"],[94,54,116,3],[95,0,119,4,"type"],[95,6,119,4,"type"],[95,10,119,8],[95,12,119,10],[95,17,116,3],[96,0,121,4,"getInitialState"],[96,6,121,4,"getInitialState"],[96,21,116,3],[96,55,121,52],[97,0,121,52],[97,12,121,22,"routeNames"],[97,22,121,52],[97,31,121,22,"routeNames"],[97,41,121,52],[98,0,121,52],[98,12,121,34,"routeParamList"],[98,26,121,52],[98,35,121,34,"routeParamList"],[98,49,121,52],[99,0,122,6],[99,12,122,12,"index"],[99,17,122,17],[99,20,123,8,"initialRouteName"],[99,36,123,24],[99,41,123,29,"undefined"],[99,50,123,8],[99,54,123,42,"routeNames"],[99,64,123,52],[99,65,123,53,"includes"],[99,73,123,42],[99,74,123,62,"initialRouteName"],[99,90,123,42],[99,91,123,8],[99,94,124,12,"routeNames"],[99,104,124,22],[99,105,124,23,"indexOf"],[99,112,124,12],[99,113,124,31,"initialRouteName"],[99,129,124,12],[99,130,123,8],[99,133,125,12],[99,134,122,6],[100,0,127,6],[100,12,127,12,"routes"],[100,18,127,18],[100,21,127,21,"routeNames"],[100,31,127,31],[100,32,127,32,"map"],[100,35,127,21],[100,36,127,36],[100,46,127,37,"name"],[100,50,127,36],[101,0,127,36],[101,17,127,47],[102,0,128,8,"name"],[102,12,128,8,"name"],[102,16,128,12],[102,18,128,8,"name"],[102,22,127,47],[103,0,129,8,"key"],[103,12,129,8,"key"],[103,15,129,11],[103,17,129,16,"name"],[103,21,129,11],[103,30,129,24],[103,54,127,47],[104,0,130,8,"params"],[104,12,130,8,"params"],[104,18,130,14],[104,20,130,16,"routeParamList"],[104,34,130,30],[104,35,130,31,"name"],[104,39,130,30],[105,0,127,47],[105,11,127,36],[106,0,127,36],[106,9,127,21],[106,10,127,6],[107,0,133,6],[107,12,133,12,"history"],[107,19,133,19],[107,22,133,22,"getRouteHistory"],[107,37,133,37],[107,38,133,38,"routes"],[107,44,133,37],[107,46,133,46,"index"],[107,51,133,37],[107,53,133,53,"backBehavior"],[107,65,133,37],[107,66,133,6],[108,0,135,6],[108,15,135,13],[109,0,136,8,"stale"],[109,10,136,8,"stale"],[109,15,136,13],[109,17,136,15],[109,22,135,13],[110,0,137,8,"type"],[110,10,137,8,"type"],[110,14,137,12],[110,16,137,14],[110,21,135,13],[111,0,138,8,"key"],[111,10,138,8,"key"],[111,13,138,11],[111,24,138,20],[111,48,135,13],[112,0,139,8,"index"],[112,10,139,8,"index"],[112,15,139,13],[112,17,139,8,"index"],[112,22,135,13],[113,0,140,8,"routeNames"],[113,10,140,8,"routeNames"],[113,20,140,18],[113,22,140,8,"routeNames"],[113,32,135,13],[114,0,141,8,"history"],[114,10,141,8,"history"],[114,17,141,15],[114,19,141,8,"history"],[114,26,135,13],[115,0,142,8,"routes"],[115,10,142,8,"routes"],[115,16,142,14],[115,18,142,8,"routes"],[116,0,135,13],[116,9,135,6],[117,0,144,5],[117,7,116,3],[118,0,146,4,"getRehydratedState"],[118,6,146,4,"getRehydratedState"],[118,24,116,3],[118,54,146,23,"partialState"],[118,66,116,3],[118,75,146,69],[119,0,146,69],[121,0,146,69],[121,12,146,39,"routeNames"],[121,22,146,69],[121,31,146,39,"routeNames"],[121,41,146,69],[122,0,146,69],[122,12,146,51,"routeParamList"],[122,26,146,69],[122,35,146,51,"routeParamList"],[122,49,146,69],[123,0,147,6],[123,12,147,10,"state"],[123,17,147,15],[123,20,147,18,"partialState"],[123,32,147,6],[125,0,149,6],[125,12,149,10,"state"],[125,17,149,15],[125,18,149,16,"stale"],[125,23,149,10],[125,28,149,26],[125,33,149,6],[125,35,149,33],[126,0,150,8],[126,17,150,15,"state"],[126,22,150,8],[127,0,151,7],[129,0,153,6],[129,12,153,12,"routes"],[129,18,153,18],[129,21,153,21,"routeNames"],[129,31,153,31],[129,32,153,32,"map"],[129,35,153,21],[129,36,153,36],[129,46,153,37,"name"],[129,50,153,36],[129,52,153,46],[130,0,154,8],[130,14,154,14,"route"],[130,19,154,19],[130,22,154,23,"state"],[130,27,154,22],[130,28,154,66,"routes"],[130,34,154,22],[130,35,154,73,"find"],[130,39,154,22],[130,40,155,10],[130,50,155,11,"r"],[130,51,155,10],[131,0,155,10],[131,19,155,17,"r"],[131,20,155,18],[131,21,155,19,"name"],[131,25,155,17],[131,30,155,28,"name"],[131,34,155,10],[132,0,155,10],[132,11,154,22],[132,12,154,8],[133,0,158,8],[133,35,159,13,"route"],[133,40,158,8],[134,0,160,10,"name"],[134,12,160,10,"name"],[134,16,160,14],[134,18,160,10,"name"],[134,22,158,8],[135,0,161,10,"key"],[135,12,161,10,"key"],[135,15,161,13],[135,17,162,12,"route"],[135,22,162,17],[135,26,162,21,"route"],[135,31,162,26],[135,32,162,27,"name"],[135,36,162,21],[135,41,162,36,"name"],[135,45,162,12],[135,49,162,44,"route"],[135,54,162,49],[135,55,162,50,"key"],[135,58,162,12],[135,61,163,16,"route"],[135,66,163,21],[135,67,163,22,"key"],[135,70,162,12],[135,73,164,19,"name"],[135,77,162,12],[135,86,164,27],[135,110,158,8],[136,0,165,10,"params"],[136,12,165,10,"params"],[136,18,165,16],[136,20,166,12,"routeParamList"],[136,34,166,26],[136,35,166,27,"name"],[136,39,166,26],[136,40,166,12],[136,45,166,37,"undefined"],[136,54,166,12],[136,75,168,21,"routeParamList"],[136,89,168,35],[136,90,168,36,"name"],[136,94,168,35],[136,95,166,12],[136,101,169,22,"route"],[136,106,169,27],[136,109,169,30,"route"],[136,114,169,35],[136,115,169,36,"params"],[136,121,169,27],[136,124,169,45,"undefined"],[136,133,166,12],[136,137,171,16,"route"],[136,142,171,21],[136,145,172,16,"route"],[136,150,172,21],[136,151,172,22,"params"],[136,157,171,21],[136,160,173,16,"undefined"],[137,0,158,8],[138,0,175,7],[138,9,153,21],[138,10,153,6],[139,0,177,6],[139,12,177,12,"index"],[139,17,177,17],[139,20,177,20,"Math"],[139,24,177,24],[139,25,177,25,"min"],[139,28,177,20],[139,29,178,8,"Math"],[139,33,178,12],[139,34,178,13,"max"],[139,37,178,8],[139,38,179,10],[139,45,179,17,"state"],[139,50,179,22],[139,51,179,23,"index"],[139,56,179,10],[139,61,179,33],[139,69,179,10],[139,72,180,14,"state"],[139,77,180,19],[139,78,180,20,"index"],[139,83,179,10],[139,86,181,14,"routeNames"],[139,96,181,24],[139,97,181,25,"indexOf"],[139,104,181,14],[139,105,181,33,"state"],[139,110,181,38],[139,111,181,39,"routes"],[139,117,181,33],[139,118,181,46],[139,119,181,33],[139,121,181,49,"name"],[139,125,181,14],[139,126,178,8],[139,128,182,10],[139,129,178,8],[139,130,177,20],[139,132,184,8,"routes"],[139,138,184,14],[139,139,184,15,"length"],[139,145,184,8],[139,148,184,24],[139,149,177,20],[139,150,177,6],[140,0,187,6],[140,12,187,10,"history"],[140,19,187,17],[140,40,187,20,"state"],[140,45,187,25],[140,46,187,26,"history"],[140,53,187,17],[140,74,187,20],[140,89,187,35,"filter"],[140,95,187,20],[140,96,187,42],[140,106,187,43,"it"],[140,108,187,42],[141,0,187,42],[141,17,188,8,"routes"],[141,23,188,14],[141,24,188,15,"find"],[141,28,188,8],[141,29,188,20],[141,39,188,21,"r"],[141,40,188,20],[142,0,188,20],[142,19,188,27,"r"],[142,20,188,28],[142,21,188,29,"key"],[142,24,188,27],[142,29,188,37,"it"],[142,31,188,39],[142,32,188,40,"key"],[142,35,188,20],[143,0,188,20],[143,11,188,8],[143,12,187,42],[144,0,187,42],[144,9,187,20],[144,10,187,6],[146,0,191,6],[146,12,191,10],[146,26,191,11,"history"],[146,33,191,10],[146,54,191,11],[146,63,191,20,"length"],[146,69,191,10],[146,70,191,6],[146,72,191,28],[147,0,192,8,"history"],[147,10,192,8,"history"],[147,17,192,15],[147,20,192,18,"getRouteHistory"],[147,35,192,33],[147,36,192,34,"routes"],[147,42,192,33],[147,44,192,42,"index"],[147,49,192,33],[147,51,192,49,"backBehavior"],[147,63,192,33],[147,64,192,8],[148,0,193,7],[150,0,195,6],[150,15,195,13],[151,0,196,8,"stale"],[151,10,196,8,"stale"],[151,15,196,13],[151,17,196,15],[151,22,195,13],[152,0,197,8,"type"],[152,10,197,8,"type"],[152,14,197,12],[152,16,197,14],[152,21,195,13],[153,0,198,8,"key"],[153,10,198,8,"key"],[153,13,198,11],[153,24,198,20],[153,48,195,13],[154,0,199,8,"index"],[154,10,199,8,"index"],[154,15,199,13],[154,17,199,8,"index"],[154,22,195,13],[155,0,200,8,"routeNames"],[155,10,200,8,"routeNames"],[155,20,200,18],[155,22,200,8,"routeNames"],[155,32,195,13],[156,0,201,8,"history"],[156,10,201,8,"history"],[156,17,201,15],[156,19,201,8,"history"],[156,26,195,13],[157,0,202,8,"routes"],[157,10,202,8,"routes"],[157,16,202,14],[157,18,202,8,"routes"],[158,0,195,13],[158,9,195,6],[159,0,204,5],[159,7,116,3],[160,0,206,4,"getStateForRouteNamesChange"],[160,6,206,4,"getStateForRouteNamesChange"],[160,33,116,3],[160,72,206,32,"state"],[160,77,116,3],[160,86,206,71],[161,0,206,71],[161,12,206,41,"routeNames"],[161,22,206,71],[161,31,206,41,"routeNames"],[161,41,206,71],[162,0,206,71],[162,12,206,53,"routeParamList"],[162,26,206,71],[162,35,206,53,"routeParamList"],[162,49,206,71],[163,0,207,6],[163,12,207,12,"routes"],[163,18,207,18],[163,21,207,21,"routeNames"],[163,31,207,31],[163,32,207,32,"map"],[163,35,207,21],[163,36,208,8],[163,46,208,9,"name"],[163,50,208,8],[164,0,208,8],[164,17,209,10,"state"],[164,22,209,15],[164,23,209,16,"routes"],[164,29,209,10],[164,30,209,23,"find"],[164,34,209,10],[164,35,209,28],[164,45,209,29,"r"],[164,46,209,28],[165,0,209,28],[165,19,209,35,"r"],[165,20,209,36],[165,21,209,37,"name"],[165,25,209,35],[165,30,209,46,"name"],[165,34,209,28],[166,0,209,28],[166,11,209,10],[166,16,209,55],[167,0,210,12,"name"],[167,12,210,12,"name"],[167,16,210,16],[167,18,210,12,"name"],[167,22,209,55],[168,0,211,12,"key"],[168,12,211,12,"key"],[168,15,211,15],[168,17,211,20,"name"],[168,21,211,15],[168,30,211,28],[168,54,209,55],[169,0,212,12,"params"],[169,12,212,12,"params"],[169,18,212,18],[169,20,212,20,"routeParamList"],[169,34,212,34],[169,35,212,35,"name"],[169,39,212,34],[170,0,209,55],[170,11,208,8],[171,0,208,8],[171,9,207,21],[171,10,207,6],[172,0,216,6],[172,12,216,12,"index"],[172,17,216,17],[172,20,216,20,"Math"],[172,24,216,24],[172,25,216,25,"max"],[172,28,216,20],[172,29,217,8],[172,30,216,20],[172,32,218,8,"routeNames"],[172,42,218,18],[172,43,218,19,"indexOf"],[172,50,218,8],[172,51,218,27,"state"],[172,56,218,32],[172,57,218,33,"routes"],[172,63,218,27],[172,64,218,40,"state"],[172,69,218,45],[172,70,218,46,"index"],[172,75,218,27],[172,77,218,53,"name"],[172,81,218,8],[172,82,216,20],[172,83,216,6],[173,0,221,6],[173,12,221,10,"history"],[173,19,221,17],[173,22,221,20,"state"],[173,27,221,25],[173,28,221,26,"history"],[173,35,221,20],[173,36,221,34,"filter"],[173,42,221,20],[173,43,221,41],[173,53,221,42,"it"],[173,55,221,41],[174,0,221,41],[174,17,222,8,"routes"],[174,23,222,14],[174,24,222,15,"find"],[174,28,222,8],[174,29,222,20],[174,39,222,21,"r"],[174,40,222,20],[175,0,222,20],[175,19,222,27,"r"],[175,20,222,28],[175,21,222,29,"key"],[175,24,222,27],[175,29,222,37,"it"],[175,31,222,39],[175,32,222,40,"key"],[175,35,222,20],[176,0,222,20],[176,11,222,8],[176,12,221,41],[177,0,221,41],[177,9,221,20],[177,10,221,6],[179,0,225,6],[179,12,225,10],[179,13,225,11,"history"],[179,20,225,18],[179,21,225,19,"length"],[179,27,225,6],[179,29,225,27],[180,0,226,8,"history"],[180,10,226,8,"history"],[180,17,226,15],[180,20,226,18,"getRouteHistory"],[180,35,226,33],[180,36,226,34,"routes"],[180,42,226,33],[180,44,226,42,"index"],[180,49,226,33],[180,51,226,49,"backBehavior"],[180,63,226,33],[180,64,226,8],[181,0,227,7],[183,0,229,6],[183,33,230,11,"state"],[183,38,229,6],[184,0,231,8,"history"],[184,10,231,8,"history"],[184,17,231,15],[184,19,231,8,"history"],[184,26,229,6],[185,0,232,8,"routeNames"],[185,10,232,8,"routeNames"],[185,20,232,18],[185,22,232,8,"routeNames"],[185,32,229,6],[186,0,233,8,"routes"],[186,10,233,8,"routes"],[186,16,233,14],[186,18,233,8,"routes"],[186,24,229,6],[187,0,234,8,"index"],[187,10,234,8,"index"],[187,15,234,13],[187,17,234,8,"index"],[188,0,229,6],[189,0,236,5],[189,7,116,3],[190,0,238,4,"getStateForRouteFocus"],[190,6,238,4,"getStateForRouteFocus"],[190,27,116,3],[190,60,238,26,"state"],[190,65,116,3],[190,67,238,33,"key"],[190,70,116,3],[190,72,238,38],[191,0,239,6],[191,12,239,12,"index"],[191,17,239,17],[191,20,239,20,"state"],[191,25,239,25],[191,26,239,26,"routes"],[191,32,239,20],[191,33,239,33,"findIndex"],[191,42,239,20],[191,43,239,43],[191,53,239,44,"r"],[191,54,239,43],[192,0,239,43],[192,17,239,50,"r"],[192,18,239,51],[192,19,239,52,"key"],[192,22,239,50],[192,27,239,60,"key"],[192,30,239,43],[193,0,239,43],[193,9,239,20],[193,10,239,6],[195,0,241,6],[195,12,241,10,"index"],[195,17,241,15],[195,22,241,20],[195,23,241,21],[195,24,241,10],[195,28,241,26,"index"],[195,33,241,31],[195,38,241,36,"state"],[195,43,241,41],[195,44,241,42,"index"],[195,49,241,6],[195,51,241,49],[196,0,242,8],[196,17,242,15,"state"],[196,22,242,8],[197,0,243,7],[199,0,245,6],[199,15,245,13,"changeIndex"],[199,26,245,24],[199,27,245,25,"state"],[199,32,245,24],[199,34,245,32,"index"],[199,39,245,24],[199,41,245,39,"backBehavior"],[199,53,245,24],[199,54,245,6],[200,0,246,5],[200,7,116,3],[201,0,248,4,"getStateForAction"],[201,6,248,4,"getStateForAction"],[201,23,116,3],[201,52,248,22,"state"],[201,57,116,3],[201,59,248,29,"action"],[201,65,116,3],[201,67,248,37],[202,0,249,6],[202,16,249,14,"action"],[202,22,249,20],[202,23,249,21,"type"],[202,27,249,6],[203,0,250,8],[203,15,250,13],[203,24,250,8],[204,0,251,8],[204,15,251,13],[204,25,251,8],[205,0,251,25],[206,0,252,10],[206,18,252,14,"index"],[206,23,252,19],[206,26,252,22],[206,27,252,23],[206,28,252,10],[208,0,254,10],[208,18,254,14,"action"],[208,24,254,20],[208,25,254,21,"type"],[208,29,254,14],[208,34,254,30],[208,44,254,14],[208,48,254,44,"action"],[208,54,254,50],[208,55,254,51,"payload"],[208,62,254,44],[208,63,254,59,"key"],[208,66,254,10],[208,68,254,64],[209,0,255,12,"index"],[209,16,255,12,"index"],[209,21,255,17],[209,24,255,20,"state"],[209,29,255,25],[209,30,255,26,"routes"],[209,36,255,20],[209,37,255,33,"findIndex"],[209,46,255,20],[209,47,256,14],[209,57,256,15,"route"],[209,62,256,14],[210,0,256,14],[210,25,256,25,"route"],[210,30,256,30],[210,31,256,31,"key"],[210,34,256,25],[210,39,256,39,"action"],[210,45,256,45],[210,46,256,46,"payload"],[210,53,256,39],[210,54,256,54,"key"],[210,57,256,14],[211,0,256,14],[211,17,255,20],[211,18,255,12],[212,0,258,11],[212,15,254,10],[212,21,258,17],[213,0,259,12,"index"],[213,16,259,12,"index"],[213,21,259,17],[213,24,259,20,"state"],[213,29,259,25],[213,30,259,26,"routes"],[213,36,259,20],[213,37,259,33,"findIndex"],[213,46,259,20],[213,47,260,14],[213,57,260,15,"route"],[213,62,260,14],[214,0,260,14],[214,25,260,25,"route"],[214,30,260,30],[214,31,260,31,"name"],[214,35,260,25],[214,40,260,40,"action"],[214,46,260,46],[214,47,260,47,"payload"],[214,54,260,40],[214,55,260,55,"name"],[214,59,260,14],[215,0,260,14],[215,17,259,20],[215,18,259,12],[216,0,262,11],[218,0,264,10],[218,18,264,14,"index"],[218,23,264,19],[218,28,264,24],[218,29,264,25],[218,30,264,10],[218,32,264,28],[219,0,265,12],[219,23,265,19],[219,27,265,12],[220,0,266,11],[222,0,268,10],[222,21,268,17,"changeIndex"],[222,32,268,28],[222,51,270,17,"state"],[222,56,268,28],[223,0,271,14,"routes"],[223,16,271,14,"routes"],[223,22,271,20],[223,24,272,16,"action"],[223,30,272,22],[223,31,272,23,"payload"],[223,38,272,16],[223,39,272,31,"params"],[223,45,272,16],[223,50,272,42,"undefined"],[223,59,272,16],[223,62,273,20,"state"],[223,67,273,25],[223,68,273,26,"routes"],[223,74,273,20],[223,75,273,33,"map"],[223,78,273,20],[223,79,273,37],[223,89,273,38,"route"],[223,94,273,37],[223,96,273,45,"i"],[223,97,273,37],[224,0,273,37],[224,25,274,22,"i"],[224,26,274,23],[224,31,274,28,"index"],[224,36,274,22],[224,57,276,31,"route"],[224,62,274,22],[225,0,277,28,"params"],[225,20,277,28,"params"],[225,26,277,34],[225,46,278,33,"route"],[225,51,278,38],[225,52,278,39,"params"],[225,58,277,34],[225,64,279,33,"action"],[225,70,279,39],[225,71,279,40,"payload"],[225,78,279,33],[225,79,279,48,"params"],[225,85,277,34],[226,0,274,22],[226,23,282,26,"route"],[226,28,273,37],[227,0,273,37],[227,17,273,20],[227,18,272,16],[227,21,284,20,"state"],[227,26,284,25],[227,27,284,26,"routes"],[228,0,268,28],[228,18,286,12,"index"],[228,23,268,28],[228,25,287,12,"backBehavior"],[228,37,268,28],[228,38,268,10],[229,0,289,9],[231,0,291,8],[231,15,291,13],[231,24,291,8],[232,0,291,24],[233,0,292,10],[233,18,292,14,"state"],[233,23,292,19],[233,24,292,20,"history"],[233,31,292,14],[233,32,292,28,"length"],[233,38,292,14],[233,43,292,39],[233,44,292,10],[233,46,292,42],[234,0,293,12],[234,23,293,19],[234,27,293,12],[235,0,294,11],[237,0,296,10],[237,18,296,16,"previousKey"],[237,29,296,27],[237,32,296,30,"state"],[237,37,296,35],[237,38,296,36,"history"],[237,45,296,30],[237,46,296,44,"state"],[237,51,296,49],[237,52,296,50,"history"],[237,59,296,44],[237,60,296,58,"length"],[237,66,296,44],[237,69,296,67],[237,70,296,30],[237,72,296,70,"key"],[237,75,296,10],[239,0,297,10],[239,18,297,16,"index"],[239,24,297,21],[239,27,297,24,"state"],[239,32,297,29],[239,33,297,30,"routes"],[239,39,297,24],[239,40,297,37,"findIndex"],[239,49,297,24],[239,50,298,12],[239,60,298,13,"route"],[239,65,298,12],[240,0,298,12],[240,23,298,23,"route"],[240,28,298,28],[240,29,298,29,"key"],[240,32,298,23],[240,37,298,37,"previousKey"],[240,48,298,12],[241,0,298,12],[241,15,297,24],[241,16,297,10],[243,0,301,10],[243,18,301,14,"index"],[243,24,301,19],[243,29,301,24],[243,30,301,25],[243,31,301,10],[243,33,301,28],[244,0,302,12],[244,23,302,19],[244,27,302,12],[245,0,303,11],[247,0,305,10],[247,39,306,15,"state"],[247,44,305,10],[248,0,307,12,"history"],[248,16,307,12,"history"],[248,23,307,19],[248,25,307,21,"state"],[248,30,307,26],[248,31,307,27,"history"],[248,38,307,21],[248,39,307,35,"slice"],[248,44,307,21],[248,45,307,41],[248,46,307,21],[248,48,307,44],[248,49,307,45],[248,50,307,21],[248,51,305,10],[249,0,308,12,"index"],[249,16,308,12,"index"],[249,21,308,17],[249,23,308,12,"index"],[250,0,305,10],[251,0,310,9],[253,0,312,8],[254,0,313,10],[254,19,313,17,"BaseRouter"],[254,39,313,28,"getStateForAction"],[254,56,313,17],[254,57,313,46,"state"],[254,62,313,17],[254,64,313,53,"action"],[254,70,313,17],[254,71,313,10],[255,0,249,6],[256,0,315,5],[256,7,116,3],[257,0,317,4,"shouldActionChangeFocus"],[257,6,317,4,"shouldActionChangeFocus"],[257,29,116,3],[257,64,317,28,"action"],[257,70,116,3],[257,72,317,36],[258,0,318,6],[258,15,318,13,"action"],[258,21,318,19],[258,22,318,20,"type"],[258,26,318,13],[258,31,318,29],[258,41,318,6],[259,0,319,5],[259,7,116,3],[260,0,321,4,"actionCreators"],[260,6,321,4,"actionCreators"],[260,20,321,18],[260,22,321,20,"TabActions"],[261,0,116,3],[261,6,113,2],[263,0,324,2],[263,11,324,9,"router"],[263,17,324,2],[264,0,325,1]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","changeIndex","state.history.filter$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","routes.find$argument_0","<anonymous>","router.getStateForRouteNamesChange","state.routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","router.shouldActionChangeFocus"],"mappings":"AAA;ECqD;GDE;wBEG;CFwB;oBGE;cCW,6DD;CHW;eKE;ICY;oCCM;QDI;KDa;IGE;oCDO;UEE,sBF;OCoB;0CEY;oBDC,uBC,CF;KHgB;IME;QJE;4BKC,sBL;WII;yCPQ;oBKC,uBL,CO;KNc;IQE;2CCC,oBD;KRO;IUE;cDQ,2CC;cDI,6CC;qCCa;+BDS;YDgB,oCC;KViB;IYE;KZE;CLM"}},"type":"js/module"}]}