{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"expo-asset","data":{"isAsync":false}},{"name":"./ExponentAV","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getNativeSourceFromSource = getNativeSourceFromSource;\n  exports.assertStatusValuesInBounds = assertStatusValuesInBounds;\n  exports.getNativeSourceAndFullInitialStatusForLoadAsync = getNativeSourceAndFullInitialStatusForLoadAsync;\n  exports.getUnloadedStatus = getUnloadedStatus;\n  exports.PlaybackMixin = exports._DEFAULT_INITIAL_PLAYBACK_STATUS = exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = exports.PitchCorrectionQuality = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[3], \"@unimodules/core\");\n\n  var _expoAsset = _$$_REQUIRE(_dependencyMap[4], \"expo-asset\");\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExponentAV\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var PitchCorrectionQuality;\n  exports.PitchCorrectionQuality = PitchCorrectionQuality;\n\n  (function (PitchCorrectionQuality) {\n    PitchCorrectionQuality[PitchCorrectionQuality[\"Low\"] = _ExponentAV.default && _ExponentAV.default.Qualities && _ExponentAV.default.Qualities.Low] = \"Low\";\n    PitchCorrectionQuality[PitchCorrectionQuality[\"Medium\"] = _ExponentAV.default && _ExponentAV.default.Qualities && _ExponentAV.default.Qualities.Medium] = \"Medium\";\n    PitchCorrectionQuality[PitchCorrectionQuality[\"High\"] = _ExponentAV.default && _ExponentAV.default.Qualities && _ExponentAV.default.Qualities.High] = \"High\";\n  })(PitchCorrectionQuality || (exports.PitchCorrectionQuality = PitchCorrectionQuality = {}));\n\n  var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = 500;\n  exports._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n  var _DEFAULT_INITIAL_PLAYBACK_STATUS = {\n    positionMillis: 0,\n    progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n    shouldPlay: false,\n    rate: 1.0,\n    shouldCorrectPitch: false,\n    volume: 1.0,\n    isMuted: false,\n    isLooping: false\n  };\n  exports._DEFAULT_INITIAL_PLAYBACK_STATUS = _DEFAULT_INITIAL_PLAYBACK_STATUS;\n\n  function getNativeSourceFromSource(source) {\n    var uri = null;\n    var overridingExtension = null;\n    var headers;\n\n    if (typeof source === 'string' && _core.Platform.OS === 'web') {\n      return {\n        uri: source,\n        overridingExtension: overridingExtension,\n        headers: headers\n      };\n    }\n\n    var asset = _getAssetFromPlaybackSource(source);\n\n    if (asset != null) {\n      uri = asset.localUri || asset.uri;\n    } else if (source != null && typeof source !== 'number' && 'uri' in source && typeof source.uri === 'string') {\n      uri = source.uri;\n    }\n\n    if (uri == null) {\n      return null;\n    }\n\n    if (source != null && typeof source !== 'number' && 'overrideFileExtensionAndroid' in source && typeof source.overrideFileExtensionAndroid === 'string') {\n      overridingExtension = source.overrideFileExtensionAndroid;\n    }\n\n    if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n      headers = source.headers;\n    }\n\n    return {\n      uri: uri,\n      overridingExtension: overridingExtension,\n      headers: headers\n    };\n  }\n\n  function _getAssetFromPlaybackSource(source) {\n    if (source == null) {\n      return null;\n    }\n\n    var asset = null;\n\n    if (typeof source === 'number') {\n      asset = _expoAsset.Asset.fromModule(source);\n    } else if (source instanceof _expoAsset.Asset) {\n      asset = source;\n    }\n\n    return asset;\n  }\n\n  function assertStatusValuesInBounds(status) {\n    if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n      throw new RangeError('Rate value must be between 0.0 and 32.0');\n    }\n\n    if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n      throw new RangeError('Volume value must be between 0.0 and 1.0');\n    }\n  }\n\n  function getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst) {\n    var fullInitialStatus, asset, nativeSource;\n    return _regenerator.default.async(function getNativeSourceAndFullInitialStatusForLoadAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fullInitialStatus = initialStatus == null ? _DEFAULT_INITIAL_PLAYBACK_STATUS : _objectSpread({}, _DEFAULT_INITIAL_PLAYBACK_STATUS, {}, initialStatus);\n            assertStatusValuesInBounds(fullInitialStatus);\n\n            if (!(typeof source === 'string' && _core.Platform.OS === 'web')) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              nativeSource: {\n                uri: source,\n                overridingExtension: null\n              },\n              fullInitialStatus: fullInitialStatus\n            });\n\n          case 4:\n            asset = _getAssetFromPlaybackSource(source);\n\n            if (!(downloadFirst && asset)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 8;\n            return _regenerator.default.awrap(asset.downloadAsync());\n\n          case 8:\n            nativeSource = getNativeSourceFromSource(source);\n\n            if (!(nativeSource === null)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw new Error(\"Cannot load an AV asset from a null playback source\");\n\n          case 11:\n            return _context.abrupt(\"return\", {\n              nativeSource: nativeSource,\n              fullInitialStatus: fullInitialStatus\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getUnloadedStatus() {\n    var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return _objectSpread({\n      isLoaded: false\n    }, error ? {\n      error: error\n    } : null);\n  }\n\n  var PlaybackMixin = {\n    playAsync: function playAsync() {\n      return _regenerator.default.async(function playAsync$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", this.setStatusAsync({\n                shouldPlay: true\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    },\n    playFromPositionAsync: function playFromPositionAsync(positionMillis) {\n      var tolerances,\n          _args3 = arguments;\n      return _regenerator.default.async(function playFromPositionAsync$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              tolerances = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n              return _context3.abrupt(\"return\", this.setStatusAsync({\n                positionMillis: positionMillis,\n                shouldPlay: true,\n                seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n                seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    },\n    pauseAsync: function pauseAsync() {\n      return _regenerator.default.async(function pauseAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", this.setStatusAsync({\n                shouldPlay: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    },\n    stopAsync: function stopAsync() {\n      return _regenerator.default.async(function stopAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", this.setStatusAsync({\n                positionMillis: 0,\n                shouldPlay: false\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    },\n    setPositionAsync: function setPositionAsync(positionMillis) {\n      var tolerances,\n          _args6 = arguments;\n      return _regenerator.default.async(function setPositionAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              tolerances = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n              return _context6.abrupt(\"return\", this.setStatusAsync({\n                positionMillis: positionMillis,\n                seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n                seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n              }));\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    },\n    setRateAsync: function setRateAsync(rate) {\n      var shouldCorrectPitch,\n          pitchCorrectionQuality,\n          _args7 = arguments;\n      return _regenerator.default.async(function setRateAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              shouldCorrectPitch = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : false;\n              pitchCorrectionQuality = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : PitchCorrectionQuality.Low;\n              return _context7.abrupt(\"return\", this.setStatusAsync({\n                rate: rate,\n                shouldCorrectPitch: shouldCorrectPitch,\n                pitchCorrectionQuality: pitchCorrectionQuality\n              }));\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    },\n    setVolumeAsync: function setVolumeAsync(volume) {\n      return _regenerator.default.async(function setVolumeAsync$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", this.setStatusAsync({\n                volume: volume\n              }));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    },\n    setIsMutedAsync: function setIsMutedAsync(isMuted) {\n      return _regenerator.default.async(function setIsMutedAsync$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", this.setStatusAsync({\n                isMuted: isMuted\n              }));\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    },\n    setIsLoopingAsync: function setIsLoopingAsync(isLooping) {\n      return _regenerator.default.async(function setIsLoopingAsync$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", this.setStatusAsync({\n                isLooping: isLooping\n              }));\n\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    },\n    setProgressUpdateIntervalAsync: function setProgressUpdateIntervalAsync(progressUpdateIntervalMillis) {\n      return _regenerator.default.async(function setProgressUpdateIntervalAsync$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", this.setStatusAsync({\n                progressUpdateIntervalMillis: progressUpdateIntervalMillis\n              }));\n\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  };\n  exports.PlaybackMixin = PlaybackMixin;\n});","lineCount":364,"map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[27,0,12,7],[27,6,12,11,"PitchCorrectionQuality"],[27,28,12,7],[30,0,13,0],[30,3,13,1],[30,13,13,11,"PitchCorrectionQuality"],[30,35,13,1],[30,37,13,35],[31,0,14,4,"PitchCorrectionQuality"],[31,4,14,4,"PitchCorrectionQuality"],[31,26,14,26],[31,27,14,27,"PitchCorrectionQuality"],[31,49,14,49],[31,50,14,50],[31,55,14,49],[31,56,14,27],[31,59,14,59,"ExponentAV"],[31,82,14,73,"ExponentAV"],[31,102,14,84,"Qualities"],[31,111,14,59],[31,115,14,97,"ExponentAV"],[31,135,14,108,"Qualities"],[31,144,14,97],[31,145,14,118,"Low"],[31,148,14,26],[31,149,14,4],[31,152,14,125],[31,157,14,4],[32,0,15,4,"PitchCorrectionQuality"],[32,4,15,4,"PitchCorrectionQuality"],[32,26,15,26],[32,27,15,27,"PitchCorrectionQuality"],[32,49,15,49],[32,50,15,50],[32,58,15,49],[32,59,15,27],[32,62,15,62,"ExponentAV"],[32,85,15,76,"ExponentAV"],[32,105,15,87,"Qualities"],[32,114,15,62],[32,118,15,100,"ExponentAV"],[32,138,15,111,"Qualities"],[32,147,15,100],[32,148,15,121,"Medium"],[32,154,15,26],[32,155,15,4],[32,158,15,131],[32,166,15,4],[33,0,16,4,"PitchCorrectionQuality"],[33,4,16,4,"PitchCorrectionQuality"],[33,26,16,26],[33,27,16,27,"PitchCorrectionQuality"],[33,49,16,49],[33,50,16,50],[33,56,16,49],[33,57,16,27],[33,60,16,60,"ExponentAV"],[33,83,16,74,"ExponentAV"],[33,103,16,85,"Qualities"],[33,112,16,60],[33,116,16,98,"ExponentAV"],[33,136,16,109,"Qualities"],[33,145,16,98],[33,146,16,119,"High"],[33,150,16,26],[33,151,16,4],[33,154,16,127],[33,160,16,4],[34,0,17,1],[34,3,13,0],[34,5,17,3,"PitchCorrectionQuality"],[34,27,17,25],[34,65,17,30,"PitchCorrectionQuality"],[34,87,17,52],[34,90,17,55],[34,92,17,25],[34,93,13,0],[36,0,18,7],[36,6,18,13,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[36,46,18,53],[36,49,18,56],[36,52,18,7],[38,0,19,7],[38,6,19,13,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[38,38,19,45],[38,41,19,48],[39,0,20,4,"positionMillis"],[39,4,20,4,"positionMillis"],[39,18,20,18],[39,20,20,20],[39,21,19,48],[40,0,21,4,"progressUpdateIntervalMillis"],[40,4,21,4,"progressUpdateIntervalMillis"],[40,32,21,32],[40,34,21,34,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[40,74,19,48],[41,0,22,4,"shouldPlay"],[41,4,22,4,"shouldPlay"],[41,14,22,14],[41,16,22,16],[41,21,19,48],[42,0,23,4,"rate"],[42,4,23,4,"rate"],[42,8,23,8],[42,10,23,10],[42,13,19,48],[43,0,24,4,"shouldCorrectPitch"],[43,4,24,4,"shouldCorrectPitch"],[43,22,24,22],[43,24,24,24],[43,29,19,48],[44,0,25,4,"volume"],[44,4,25,4,"volume"],[44,10,25,10],[44,12,25,12],[44,15,19,48],[45,0,26,4,"isMuted"],[45,4,26,4,"isMuted"],[45,11,26,11],[45,13,26,13],[45,18,19,48],[46,0,27,4,"isLooping"],[46,4,27,4,"isLooping"],[46,13,27,13],[46,15,27,15],[47,0,19,48],[47,3,19,7],[50,0,29,7],[50,11,29,16,"getNativeSourceFromSource"],[50,36,29,7],[50,37,29,42,"source"],[50,43,29,7],[50,45,29,50],[51,0,30,4],[51,8,30,8,"uri"],[51,11,30,11],[51,14,30,14],[51,18,30,4],[52,0,31,4],[52,8,31,8,"overridingExtension"],[52,27,31,27],[52,30,31,30],[52,34,31,4],[53,0,32,4],[53,8,32,8,"headers"],[53,15,32,4],[55,0,33,4],[55,8,33,8],[55,15,33,15,"source"],[55,21,33,8],[55,26,33,26],[55,34,33,8],[55,38,33,38,"Platform"],[55,53,33,47,"OS"],[55,55,33,38],[55,60,33,54],[55,65,33,4],[55,67,33,61],[56,0,34,8],[56,13,34,15],[57,0,35,12,"uri"],[57,8,35,12,"uri"],[57,11,35,15],[57,13,35,17,"source"],[57,19,34,15],[58,0,36,12,"overridingExtension"],[58,8,36,12,"overridingExtension"],[58,27,36,31],[58,29,36,12,"overridingExtension"],[58,48,34,15],[59,0,37,12,"headers"],[59,8,37,12,"headers"],[59,15,37,19],[59,17,37,12,"headers"],[60,0,34,15],[60,7,34,8],[61,0,39,5],[63,0,40,4],[63,8,40,8,"asset"],[63,13,40,13],[63,16,40,16,"_getAssetFromPlaybackSource"],[63,43,40,43],[63,44,40,44,"source"],[63,50,40,43],[63,51,40,4],[65,0,41,4],[65,8,41,8,"asset"],[65,13,41,13],[65,17,41,17],[65,21,41,4],[65,23,41,23],[66,0,42,8,"uri"],[66,6,42,8,"uri"],[66,9,42,11],[66,12,42,14,"asset"],[66,17,42,19],[66,18,42,20,"localUri"],[66,26,42,14],[66,30,42,32,"asset"],[66,35,42,37],[66,36,42,38,"uri"],[66,39,42,8],[67,0,43,5],[67,5,41,4],[67,11,44,9],[67,15,44,13,"source"],[67,21,44,19],[67,25,44,23],[67,29,44,13],[67,33,45,8],[67,40,45,15,"source"],[67,46,45,8],[67,51,45,26],[67,59,44,13],[67,63,46,8],[67,72,46,17,"source"],[67,78,44,13],[67,82,47,8],[67,89,47,15,"source"],[67,95,47,21],[67,96,47,22,"uri"],[67,99,47,8],[67,104,47,30],[67,112,44,9],[67,114,47,40],[68,0,48,8,"uri"],[68,6,48,8,"uri"],[68,9,48,11],[68,12,48,14,"source"],[68,18,48,20],[68,19,48,21,"uri"],[68,22,48,8],[69,0,49,5],[71,0,50,4],[71,8,50,8,"uri"],[71,11,50,11],[71,15,50,15],[71,19,50,4],[71,21,50,21],[72,0,51,8],[72,13,51,15],[72,17,51,8],[73,0,52,5],[75,0,53,4],[75,8,53,8,"source"],[75,14,53,14],[75,18,53,18],[75,22,53,8],[75,26,54,8],[75,33,54,15,"source"],[75,39,54,8],[75,44,54,26],[75,52,53,8],[75,56,55,8],[75,90,55,42,"source"],[75,96,53,8],[75,100,56,8],[75,107,56,15,"source"],[75,113,56,21],[75,114,56,22,"overrideFileExtensionAndroid"],[75,142,56,8],[75,147,56,55],[75,155,53,4],[75,157,56,65],[76,0,57,8,"overridingExtension"],[76,6,57,8,"overridingExtension"],[76,25,57,27],[76,28,57,30,"source"],[76,34,57,36],[76,35,57,37,"overrideFileExtensionAndroid"],[76,63,57,8],[77,0,58,5],[79,0,59,4],[79,8,59,8,"source"],[79,14,59,14],[79,18,59,18],[79,22,59,8],[79,26,60,8],[79,33,60,15,"source"],[79,39,60,8],[79,44,60,26],[79,52,59,8],[79,56,61,8],[79,69,61,21,"source"],[79,75,59,8],[79,79,62,8],[79,86,62,15,"source"],[79,92,62,21],[79,93,62,22,"headers"],[79,100,62,8],[79,105,62,34],[79,113,59,4],[79,115,62,44],[80,0,63,8,"headers"],[80,6,63,8,"headers"],[80,13,63,15],[80,16,63,18,"source"],[80,22,63,24],[80,23,63,25,"headers"],[80,30,63,8],[81,0,64,5],[83,0,65,4],[83,11,65,11],[84,0,65,13,"uri"],[84,6,65,13,"uri"],[84,9,65,16],[84,11,65,13,"uri"],[84,14,65,11],[85,0,65,18,"overridingExtension"],[85,6,65,18,"overridingExtension"],[85,25,65,37],[85,27,65,18,"overridingExtension"],[85,46,65,11],[86,0,65,39,"headers"],[86,6,65,39,"headers"],[86,13,65,46],[86,15,65,39,"headers"],[87,0,65,11],[87,5,65,4],[88,0,66,1],[90,0,67,0],[90,11,67,9,"_getAssetFromPlaybackSource"],[90,38,67,0],[90,39,67,37,"source"],[90,45,67,0],[90,47,67,45],[91,0,68,4],[91,8,68,8,"source"],[91,14,68,14],[91,18,68,18],[91,22,68,4],[91,24,68,24],[92,0,69,8],[92,13,69,15],[92,17,69,8],[93,0,70,5],[95,0,71,4],[95,8,71,8,"asset"],[95,13,71,13],[95,16,71,16],[95,20,71,4],[97,0,72,4],[97,8,72,8],[97,15,72,15,"source"],[97,21,72,8],[97,26,72,26],[97,34,72,4],[97,36,72,36],[98,0,73,8,"asset"],[98,6,73,8,"asset"],[98,11,73,13],[98,14,73,16,"Asset"],[98,31,73,22,"fromModule"],[98,41,73,16],[98,42,73,33,"source"],[98,48,73,16],[98,49,73,8],[99,0,74,5],[99,5,72,4],[99,11,75,9],[99,15,75,13,"source"],[99,21,75,19],[99,33,75,31,"Asset"],[99,49,75,9],[99,51,75,38],[100,0,76,8,"asset"],[100,6,76,8,"asset"],[100,11,76,13],[100,14,76,16,"source"],[100,20,76,8],[101,0,77,5],[103,0,78,4],[103,11,78,11,"asset"],[103,16,78,4],[104,0,79,1],[106,0,80,7],[106,11,80,16,"assertStatusValuesInBounds"],[106,37,80,7],[106,38,80,43,"status"],[106,44,80,7],[106,46,80,51],[107,0,81,4],[107,8,81,8],[107,15,81,15,"status"],[107,21,81,21],[107,22,81,22,"rate"],[107,26,81,8],[107,31,81,31],[107,39,81,8],[107,44,81,44,"status"],[107,50,81,50],[107,51,81,51,"rate"],[107,55,81,44],[107,58,81,58],[107,59,81,44],[107,63,81,63,"status"],[107,69,81,69],[107,70,81,70,"rate"],[107,74,81,63],[107,77,81,77],[107,79,81,8],[107,80,81,4],[107,82,81,82],[108,0,82,8],[108,12,82,14],[108,16,82,18,"RangeError"],[108,26,82,14],[108,27,82,29],[108,68,82,14],[108,69,82,8],[109,0,83,5],[111,0,84,4],[111,8,84,8],[111,15,84,15,"status"],[111,21,84,21],[111,22,84,22,"volume"],[111,28,84,8],[111,33,84,33],[111,41,84,8],[111,46,84,46,"status"],[111,52,84,52],[111,53,84,53,"volume"],[111,59,84,46],[111,62,84,62],[111,63,84,46],[111,67,84,67,"status"],[111,73,84,73],[111,74,84,74,"volume"],[111,80,84,67],[111,83,84,83],[111,84,84,8],[111,85,84,4],[111,87,84,87],[112,0,85,8],[112,12,85,14],[112,16,85,18,"RangeError"],[112,26,85,14],[112,27,85,29],[112,69,85,14],[112,70,85,8],[113,0,86,5],[114,0,87,1],[116,0,88,7],[116,11,88,22,"getNativeSourceAndFullInitialStatusForLoadAsync"],[116,58,88,7],[116,59,88,70,"source"],[116,65,88,7],[116,67,88,78,"initialStatus"],[116,80,88,7],[116,82,88,93,"downloadFirst"],[116,95,88,7],[117,0,88,7],[118,0,88,7],[119,0,88,7],[120,0,88,7],[121,0,88,7],[122,0,90,10,"fullInitialStatus"],[122,12,90,10,"fullInitialStatus"],[122,29,88,7],[122,32,90,30,"initialStatus"],[122,45,90,43],[122,49,90,47],[122,53,90,30],[122,56,91,10,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[122,88,90,30],[122,109,93,15,"_DEFAULT_INITIAL_PLAYBACK_STATUS"],[122,141,90,30],[122,147,94,15,"initialStatus"],[122,160,90,30],[122,161,88,7],[123,0,96,4,"assertStatusValuesInBounds"],[123,12,96,4,"assertStatusValuesInBounds"],[123,38,96,30],[123,39,96,31,"fullInitialStatus"],[123,56,96,30],[123,57,96,4],[125,0,88,7],[125,18,97,8],[125,25,97,15,"source"],[125,31,97,8],[125,36,97,26],[125,44,97,8],[125,48,97,38,"Platform"],[125,63,97,47,"OS"],[125,65,97,38],[125,70,97,54],[125,75,88,7],[126,0,88,7],[127,0,88,7],[128,0,88,7],[130,0,88,7],[130,45,98,15],[131,0,99,12,"nativeSource"],[131,14,99,12,"nativeSource"],[131,26,99,24],[131,28,99,26],[132,0,100,16,"uri"],[132,16,100,16,"uri"],[132,19,100,19],[132,21,100,21,"source"],[132,27,99,26],[133,0,101,16,"overridingExtension"],[133,16,101,16,"overridingExtension"],[133,35,101,35],[133,37,101,37],[134,0,99,26],[134,15,98,15],[135,0,103,12,"fullInitialStatus"],[135,14,103,12,"fullInitialStatus"],[135,31,103,29],[135,33,103,12,"fullInitialStatus"],[136,0,98,15],[136,13,88,7],[138,0,88,7],[139,0,107,8,"asset"],[139,12,107,8,"asset"],[139,17,88,7],[139,20,107,16,"_getAssetFromPlaybackSource"],[139,47,107,43],[139,48,107,44,"source"],[139,54,107,43],[139,55,88,7],[141,0,88,7],[141,18,108,8,"downloadFirst"],[141,31,108,21],[141,35,108,25,"asset"],[141,40,88,7],[142,0,88,7],[143,0,88,7],[144,0,88,7],[146,0,88,7],[147,0,88,7],[147,46,110,14,"asset"],[147,51,110,19],[147,52,110,20,"downloadAsync"],[147,65,110,14],[147,67,88,7],[149,0,88,7],[150,0,113,10,"nativeSource"],[150,12,113,10,"nativeSource"],[150,24,88,7],[150,27,113,25,"getNativeSourceFromSource"],[150,52,113,50],[150,53,113,51,"source"],[150,59,113,50],[150,60,88,7],[152,0,88,7],[152,18,114,8,"nativeSource"],[152,30,114,20],[152,35,114,25],[152,39,88,7],[153,0,88,7],[154,0,88,7],[155,0,88,7],[157,0,88,7],[157,18,115,14],[157,22,115,18,"Error"],[157,27,115,14],[157,82,88,7],[159,0,88,7],[160,0,88,7],[160,45,117,11],[161,0,117,13,"nativeSource"],[161,14,117,13,"nativeSource"],[161,26,117,25],[161,28,117,13,"nativeSource"],[161,40,117,11],[162,0,117,27,"fullInitialStatus"],[162,14,117,27,"fullInitialStatus"],[162,31,117,44],[162,33,117,27,"fullInitialStatus"],[163,0,117,11],[163,13,88,7],[165,0,88,7],[166,0,88,7],[167,0,88,7],[168,0,88,7],[169,0,88,7],[170,0,88,7],[171,0,88,7],[173,0,119,7],[173,11,119,16,"getUnloadedStatus"],[173,28,119,7],[173,31,119,48],[174,0,119,48],[174,8,119,34,"error"],[174,13,119,48],[174,84,119,42],[174,88,119,48],[175,0,120,4],[176,0,121,8,"isLoaded"],[176,6,121,8,"isLoaded"],[176,14,121,16],[176,16,121,18],[177,0,120,4],[177,7,122,12,"error"],[177,12,122,17],[177,15,122,20],[178,0,122,22,"error"],[178,6,122,22,"error"],[178,11,122,27],[178,13,122,22,"error"],[179,0,122,20],[179,5,122,17],[179,8,122,32],[179,12,120,4],[180,0,124,1],[182,0,129,7],[182,6,129,13,"PlaybackMixin"],[182,19,129,26],[182,22,129,29],[183,0,130,10,"playAsync"],[183,4,130,10,"playAsync"],[183,13,129,29],[184,0,129,29],[185,0,129,29],[186,0,129,29],[187,0,129,29],[188,0,129,29],[188,48,131,15],[188,53,131,20,"setStatusAsync"],[188,67,131,15],[188,68,131,35],[189,0,131,37,"shouldPlay"],[189,16,131,37,"shouldPlay"],[189,26,131,47],[189,28,131,49],[190,0,131,35],[190,15,131,15],[190,16,129,29],[192,0,129,29],[193,0,129,29],[194,0,129,29],[195,0,129,29],[196,0,129,29],[197,0,129,29],[198,0,129,29],[199,0,133,10,"playFromPositionAsync"],[199,4,133,10,"playFromPositionAsync"],[199,25,129,29],[199,58,133,32,"positionMillis"],[199,72,129,29],[200,0,129,29],[201,0,129,29],[202,0,129,29],[203,0,129,29],[204,0,129,29],[205,0,129,29],[206,0,133,48,"tolerances"],[206,14,133,48,"tolerances"],[206,24,129,29],[206,86,133,61],[206,88,129,29],[207,0,129,29],[207,48,134,15],[207,53,134,20,"setStatusAsync"],[207,67,134,15],[207,68,134,35],[208,0,135,12,"positionMillis"],[208,16,135,12,"positionMillis"],[208,30,135,26],[208,32,135,12,"positionMillis"],[208,46,134,35],[209,0,136,12,"shouldPlay"],[209,16,136,12,"shouldPlay"],[209,26,136,22],[209,28,136,24],[209,32,134,35],[210,0,137,12,"seekMillisToleranceAfter"],[210,16,137,12,"seekMillisToleranceAfter"],[210,40,137,36],[210,42,137,38,"tolerances"],[210,52,137,48],[210,53,137,49,"toleranceMillisAfter"],[210,73,134,35],[211,0,138,12,"seekMillisToleranceBefore"],[211,16,138,12,"seekMillisToleranceBefore"],[211,41,138,37],[211,43,138,39,"tolerances"],[211,53,138,49],[211,54,138,50,"toleranceMillisBefore"],[212,0,134,35],[212,15,134,15],[212,16,129,29],[214,0,129,29],[215,0,129,29],[216,0,129,29],[217,0,129,29],[218,0,129,29],[219,0,129,29],[220,0,129,29],[221,0,141,10,"pauseAsync"],[221,4,141,10,"pauseAsync"],[221,14,129,29],[222,0,129,29],[223,0,129,29],[224,0,129,29],[225,0,129,29],[226,0,129,29],[226,48,142,15],[226,53,142,20,"setStatusAsync"],[226,67,142,15],[226,68,142,35],[227,0,142,37,"shouldPlay"],[227,16,142,37,"shouldPlay"],[227,26,142,47],[227,28,142,49],[228,0,142,35],[228,15,142,15],[228,16,129,29],[230,0,129,29],[231,0,129,29],[232,0,129,29],[233,0,129,29],[234,0,129,29],[235,0,129,29],[236,0,129,29],[237,0,144,10,"stopAsync"],[237,4,144,10,"stopAsync"],[237,13,129,29],[238,0,129,29],[239,0,129,29],[240,0,129,29],[241,0,129,29],[242,0,129,29],[242,48,145,15],[242,53,145,20,"setStatusAsync"],[242,67,145,15],[242,68,145,35],[243,0,145,37,"positionMillis"],[243,16,145,37,"positionMillis"],[243,30,145,51],[243,32,145,53],[243,33,145,35],[244,0,145,56,"shouldPlay"],[244,16,145,56,"shouldPlay"],[244,26,145,66],[244,28,145,68],[245,0,145,35],[245,15,145,15],[245,16,129,29],[247,0,129,29],[248,0,129,29],[249,0,129,29],[250,0,129,29],[251,0,129,29],[252,0,129,29],[253,0,129,29],[254,0,147,10,"setPositionAsync"],[254,4,147,10,"setPositionAsync"],[254,20,129,29],[254,48,147,27,"positionMillis"],[254,62,129,29],[255,0,129,29],[256,0,129,29],[257,0,129,29],[258,0,129,29],[259,0,129,29],[260,0,129,29],[261,0,147,43,"tolerances"],[261,14,147,43,"tolerances"],[261,24,129,29],[261,86,147,56],[261,88,129,29],[262,0,129,29],[262,48,148,15],[262,53,148,20,"setStatusAsync"],[262,67,148,15],[262,68,148,35],[263,0,149,12,"positionMillis"],[263,16,149,12,"positionMillis"],[263,30,149,26],[263,32,149,12,"positionMillis"],[263,46,148,35],[264,0,150,12,"seekMillisToleranceAfter"],[264,16,150,12,"seekMillisToleranceAfter"],[264,40,150,36],[264,42,150,38,"tolerances"],[264,52,150,48],[264,53,150,49,"toleranceMillisAfter"],[264,73,148,35],[265,0,151,12,"seekMillisToleranceBefore"],[265,16,151,12,"seekMillisToleranceBefore"],[265,41,151,37],[265,43,151,39,"tolerances"],[265,53,151,49],[265,54,151,50,"toleranceMillisBefore"],[266,0,148,35],[266,15,148,15],[266,16,129,29],[268,0,129,29],[269,0,129,29],[270,0,129,29],[271,0,129,29],[272,0,129,29],[273,0,129,29],[274,0,129,29],[275,0,154,10,"setRateAsync"],[275,4,154,10,"setRateAsync"],[275,16,129,29],[275,40,154,23,"rate"],[275,44,129,29],[276,0,129,29],[277,0,129,29],[278,0,129,29],[279,0,129,29],[280,0,129,29],[281,0,129,29],[282,0,129,29],[283,0,154,29,"shouldCorrectPitch"],[283,14,154,29,"shouldCorrectPitch"],[283,32,129,29],[283,94,154,50],[283,99,129,29],[284,0,154,57,"pitchCorrectionQuality"],[284,14,154,57,"pitchCorrectionQuality"],[284,36,129,29],[284,98,154,82,"PitchCorrectionQuality"],[284,120,154,104],[284,121,154,105,"Low"],[284,124,129,29],[285,0,129,29],[285,48,155,15],[285,53,155,20,"setStatusAsync"],[285,67,155,15],[285,68,155,35],[286,0,156,12,"rate"],[286,16,156,12,"rate"],[286,20,156,16],[286,22,156,12,"rate"],[286,26,155,35],[287,0,157,12,"shouldCorrectPitch"],[287,16,157,12,"shouldCorrectPitch"],[287,34,157,30],[287,36,157,12,"shouldCorrectPitch"],[287,54,155,35],[288,0,158,12,"pitchCorrectionQuality"],[288,16,158,12,"pitchCorrectionQuality"],[288,38,158,34],[288,40,158,12,"pitchCorrectionQuality"],[289,0,155,35],[289,15,155,15],[289,16,129,29],[291,0,129,29],[292,0,129,29],[293,0,129,29],[294,0,129,29],[295,0,129,29],[296,0,129,29],[297,0,129,29],[298,0,161,10,"setVolumeAsync"],[298,4,161,10,"setVolumeAsync"],[298,18,129,29],[298,44,161,25,"volume"],[298,50,129,29],[299,0,129,29],[300,0,129,29],[301,0,129,29],[302,0,129,29],[303,0,129,29],[303,48,162,15],[303,53,162,20,"setStatusAsync"],[303,67,162,15],[303,68,162,35],[304,0,162,37,"volume"],[304,16,162,37,"volume"],[304,22,162,43],[304,24,162,37,"volume"],[305,0,162,35],[305,15,162,15],[305,16,129,29],[307,0,129,29],[308,0,129,29],[309,0,129,29],[310,0,129,29],[311,0,129,29],[312,0,129,29],[313,0,129,29],[314,0,164,10,"setIsMutedAsync"],[314,4,164,10,"setIsMutedAsync"],[314,19,129,29],[314,46,164,26,"isMuted"],[314,53,129,29],[315,0,129,29],[316,0,129,29],[317,0,129,29],[318,0,129,29],[319,0,129,29],[319,48,165,15],[319,53,165,20,"setStatusAsync"],[319,67,165,15],[319,68,165,35],[320,0,165,37,"isMuted"],[320,16,165,37,"isMuted"],[320,23,165,44],[320,25,165,37,"isMuted"],[321,0,165,35],[321,15,165,15],[321,16,129,29],[323,0,129,29],[324,0,129,29],[325,0,129,29],[326,0,129,29],[327,0,129,29],[328,0,129,29],[329,0,129,29],[330,0,167,10,"setIsLoopingAsync"],[330,4,167,10,"setIsLoopingAsync"],[330,21,129,29],[330,50,167,28,"isLooping"],[330,59,129,29],[331,0,129,29],[332,0,129,29],[333,0,129,29],[334,0,129,29],[335,0,129,29],[335,49,168,15],[335,54,168,20,"setStatusAsync"],[335,68,168,15],[335,69,168,35],[336,0,168,37,"isLooping"],[336,16,168,37,"isLooping"],[336,25,168,46],[336,27,168,37,"isLooping"],[337,0,168,35],[337,15,168,15],[337,16,129,29],[339,0,129,29],[340,0,129,29],[341,0,129,29],[342,0,129,29],[343,0,129,29],[344,0,129,29],[345,0,129,29],[346,0,170,10,"setProgressUpdateIntervalAsync"],[346,4,170,10,"setProgressUpdateIntervalAsync"],[346,34,129,29],[346,76,170,41,"progressUpdateIntervalMillis"],[346,104,129,29],[347,0,129,29],[348,0,129,29],[349,0,129,29],[350,0,129,29],[351,0,129,29],[351,49,171,15],[351,54,171,20,"setStatusAsync"],[351,68,171,15],[351,69,171,35],[352,0,171,37,"progressUpdateIntervalMillis"],[352,16,171,37,"progressUpdateIntervalMillis"],[352,44,171,65],[352,46,171,37,"progressUpdateIntervalMillis"],[353,0,171,35],[353,15,171,15],[353,16,129,29],[355,0,129,29],[356,0,129,29],[357,0,129,29],[358,0,129,29],[359,0,129,29],[360,0,129,29],[361,0,129,29],[362,0,129,29],[362,3,129,7]],"functionMap":{"names":["<global>","<anonymous>","getNativeSourceFromSource","_getAssetFromPlaybackSource","assertStatusValuesInBounds","getNativeSourceAndFullInitialStatusForLoadAsync","getUnloadedStatus","PlaybackMixin.playAsync","PlaybackMixin.playFromPositionAsync","PlaybackMixin.pauseAsync","PlaybackMixin.stopAsync","PlaybackMixin.setPositionAsync","PlaybackMixin.setRateAsync","PlaybackMixin.setVolumeAsync","PlaybackMixin.setIsMutedAsync","PlaybackMixin.setIsLoopingAsync","PlaybackMixin.setProgressUpdateIntervalAsync"],"mappings":"AAA;CCY;CDI;OEY;CFqC;AGC;CHY;OIC;CJO;OKC;CL8B;OMC;CNK;IOM;KPE;IQC;KRO;ISC;KTE;IUC;KVE;IWC;KXM;IYC;KZM;IaC;KbE;IcC;KdE;IeC;KfE;IgBC;KhBE"}},"type":"js/module"}]}