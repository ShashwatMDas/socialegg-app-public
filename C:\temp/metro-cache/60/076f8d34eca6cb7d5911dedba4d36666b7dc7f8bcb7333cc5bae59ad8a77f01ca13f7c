{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"nanoid/non-secure","data":{"isAsync":false}},{"name":"./TabRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DrawerRouter;\n  exports.DrawerActions = void 0;\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[5], \"nanoid/non-secure\");\n\n  var _TabRouter = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"./TabRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var DrawerActions = _objectSpread({}, _TabRouter.TabActions, {\n    openDrawer: function openDrawer() {\n      return {\n        type: 'OPEN_DRAWER'\n      };\n    },\n    closeDrawer: function closeDrawer() {\n      return {\n        type: 'CLOSE_DRAWER'\n      };\n    },\n    toggleDrawer: function toggleDrawer() {\n      return {\n        type: 'TOGGLE_DRAWER'\n      };\n    }\n  });\n\n  exports.DrawerActions = DrawerActions;\n\n  var isDrawerOpen = function isDrawerOpen(state) {\n    var _state$history;\n\n    return Boolean((_state$history = state.history) == null ? void 0 : _state$history.find(function (it) {\n      return it.type === 'drawer';\n    }));\n  };\n\n  var openDrawer = function openDrawer(state) {\n    if (isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread({}, state, {\n      history: [].concat((0, _toConsumableArray2.default)(state.history), [{\n        type: 'drawer'\n      }])\n    });\n  };\n\n  var closeDrawer = function closeDrawer(state) {\n    if (!isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread({}, state, {\n      history: state.history.filter(function (it) {\n        return it.type !== 'drawer';\n      })\n    });\n  };\n\n  function DrawerRouter(_ref) {\n    var openByDefault = _ref.openByDefault,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"openByDefault\"]);\n    var router = (0, _TabRouter.default)(rest);\n    return _objectSpread({}, router, {\n      type: 'drawer',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var state = router.getInitialState({\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        });\n\n        if (openByDefault) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread({}, state, {\n          stale: false,\n          type: 'drawer',\n          key: \"drawer-\" + (0, _nonSecure.nanoid)()\n        });\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n\n        if (partialState.stale === false) {\n          return partialState;\n        }\n\n        var state = router.getRehydratedState(partialState, {\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        });\n\n        if (isDrawerOpen(partialState)) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread({}, state, {\n          type: 'drawer',\n          key: \"drawer-\" + (0, _nonSecure.nanoid)()\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var result = router.getStateForRouteFocus(state, key);\n        return closeDrawer(result);\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        switch (action.type) {\n          case 'OPEN_DRAWER':\n            return openDrawer(state);\n\n          case 'CLOSE_DRAWER':\n            return closeDrawer(state);\n\n          case 'TOGGLE_DRAWER':\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n\n            return openDrawer(state);\n\n          case 'GO_BACK':\n            if (openByDefault) {\n              if (!isDrawerOpen(state)) {\n                return openDrawer(state);\n              }\n            } else {\n              if (isDrawerOpen(state)) {\n                return closeDrawer(state);\n              }\n            }\n\n            return router.getStateForAction(state, action, options);\n\n          default:\n            return router.getStateForAction(state, action, options);\n        }\n      },\n      actionCreators: DrawerActions\n    });\n  }\n});","lineCount":163,"map":[[18,0,1,0],[20,0,8,0],[26,0,61,7],[26,6,61,13,"DrawerActions"],[26,19,61,26],[26,40,62,5,"TabActions"],[26,61,61,26],[27,0,63,2,"openDrawer"],[27,4,63,2,"openDrawer"],[27,14,61,26],[27,38,63,33],[28,0,64,4],[28,13,64,11],[29,0,64,13,"type"],[29,8,64,13,"type"],[29,12,64,17],[29,14,64,19],[30,0,64,11],[30,7,64,4],[31,0,65,3],[31,5,61,26],[32,0,66,2,"closeDrawer"],[32,4,66,2,"closeDrawer"],[32,15,61,26],[32,40,66,34],[33,0,67,4],[33,13,67,11],[34,0,67,13,"type"],[34,8,67,13,"type"],[34,12,67,17],[34,14,67,19],[35,0,67,11],[35,7,67,4],[36,0,68,3],[36,5,61,26],[37,0,69,2,"toggleDrawer"],[37,4,69,2,"toggleDrawer"],[37,16,61,26],[37,42,69,35],[38,0,70,4],[38,13,70,11],[39,0,70,13,"type"],[39,8,70,13,"type"],[39,12,70,17],[39,14,70,19],[40,0,70,11],[40,7,70,4],[41,0,71,3],[42,0,61,26],[42,4,61,7],[46,0,74,0],[46,6,74,6,"isDrawerOpen"],[46,18,74,18],[46,21,74,21],[46,30,74,6,"isDrawerOpen"],[46,42,74,21],[46,43,75,2,"state"],[46,48,74,21],[47,0,74,21],[49,0,74,21],[49,11,76,5,"Boolean"],[49,18,76,12],[49,37,76,13,"state"],[49,42,76,18],[49,43,76,19,"history"],[49,50,76,12],[49,71,76,13],[49,86,76,28,"find"],[49,90,76,13],[49,91,76,33],[49,101,76,34,"it"],[49,103,76,33],[50,0,76,33],[50,13,76,41,"it"],[50,15,76,43],[50,16,76,44,"type"],[50,20,76,41],[50,25,76,53],[50,33,76,33],[51,0,76,33],[51,5,76,13],[51,6,76,12],[51,7,74,21],[52,0,74,21],[52,3,74,0],[54,0,78,0],[54,6,78,6,"openDrawer"],[54,16,78,16],[54,19,78,19],[54,28,78,6,"openDrawer"],[54,38,78,19],[54,39,78,20,"state"],[54,44,78,19],[54,46,78,76],[55,0,79,2],[55,8,79,6,"isDrawerOpen"],[55,20,79,18],[55,21,79,19,"state"],[55,26,79,18],[55,27,79,2],[55,29,79,27],[56,0,80,4],[56,13,80,11,"state"],[56,18,80,4],[57,0,81,3],[59,0,83,2],[59,29,84,7,"state"],[59,34,83,2],[60,0,85,4,"history"],[60,6,85,4,"history"],[60,13,85,11],[60,58,85,17,"state"],[60,63,85,22],[60,64,85,23,"history"],[60,71,85,11],[60,75,85,32],[61,0,85,34,"type"],[61,8,85,34,"type"],[61,12,85,38],[61,14,85,40],[62,0,85,32],[62,7,85,11],[63,0,83,2],[64,0,87,1],[64,3,78,0],[66,0,89,0],[66,6,89,6,"closeDrawer"],[66,17,89,17],[66,20,89,20],[66,29,89,6,"closeDrawer"],[66,40,89,20],[66,41,89,21,"state"],[66,46,89,20],[66,48,89,77],[67,0,90,2],[67,8,90,6],[67,9,90,7,"isDrawerOpen"],[67,21,90,19],[67,22,90,20,"state"],[67,27,90,19],[67,28,90,2],[67,30,90,28],[68,0,91,4],[68,13,91,11,"state"],[68,18,91,4],[69,0,92,3],[71,0,94,2],[71,29,95,7,"state"],[71,34,94,2],[72,0,96,4,"history"],[72,6,96,4,"history"],[72,13,96,11],[72,15,96,13,"state"],[72,20,96,18],[72,21,96,19,"history"],[72,28,96,13],[72,29,96,27,"filter"],[72,35,96,13],[72,36,96,34],[72,46,96,35,"it"],[72,48,96,34],[73,0,96,34],[73,15,96,42,"it"],[73,17,96,44],[73,18,96,45,"type"],[73,22,96,42],[73,27,96,54],[73,35,96,34],[74,0,96,34],[74,7,96,13],[75,0,94,2],[76,0,98,1],[76,3,89,0],[78,0,100,15],[78,11,100,24,"DrawerRouter"],[78,23,100,15],[78,30,106,2],[79,0,106,2],[79,8,101,2,"openByDefault"],[79,21,106,2],[79,29,101,2,"openByDefault"],[79,42,106,2],[80,0,106,2],[80,8,102,5,"rest"],[80,12,106,2],[81,0,107,2],[81,8,107,8,"router"],[81,14,107,14],[81,17,107,18],[81,41,107,28,"rest"],[81,45,107,18],[81,46,107,2],[82,0,112,2],[82,29,113,7,"router"],[82,35,112,2],[83,0,115,4,"type"],[83,6,115,4,"type"],[83,10,115,8],[83,12,115,10],[83,20,112,2],[84,0,117,4,"getInitialState"],[84,6,117,4,"getInitialState"],[84,21,112,2],[84,55,117,52],[85,0,117,52],[85,12,117,22,"routeNames"],[85,22,117,52],[85,31,117,22,"routeNames"],[85,41,117,52],[86,0,117,52],[86,12,117,34,"routeParamList"],[86,26,117,52],[86,35,117,34,"routeParamList"],[86,49,117,52],[87,0,118,6],[87,12,118,10,"state"],[87,17,118,15],[87,20,118,18,"router"],[87,26,118,24],[87,27,118,25,"getInitialState"],[87,42,118,18],[87,43,118,41],[88,0,118,43,"routeNames"],[88,10,118,43,"routeNames"],[88,20,118,53],[88,22,118,43,"routeNames"],[88,32,118,41],[89,0,118,55,"routeParamList"],[89,10,118,55,"routeParamList"],[89,24,118,69],[89,26,118,55,"routeParamList"],[90,0,118,41],[90,9,118,18],[90,10,118,6],[92,0,120,6],[92,12,120,10,"openByDefault"],[92,25,120,6],[92,27,120,25],[93,0,121,8,"state"],[93,10,121,8,"state"],[93,15,121,13],[93,18,121,16,"openDrawer"],[93,28,121,26],[93,29,121,27,"state"],[93,34,121,26],[93,35,121,8],[94,0,122,7],[96,0,124,6],[96,33,125,11,"state"],[96,38,124,6],[97,0,126,8,"stale"],[97,10,126,8,"stale"],[97,15,126,13],[97,17,126,15],[97,22,124,6],[98,0,127,8,"type"],[98,10,127,8,"type"],[98,14,127,12],[98,16,127,14],[98,24,124,6],[99,0,128,8,"key"],[99,10,128,8,"key"],[99,13,128,11],[99,27,128,23],[100,0,124,6],[101,0,130,5],[101,7,112,2],[102,0,132,4,"getRehydratedState"],[102,6,132,4,"getRehydratedState"],[102,24,112,2],[102,54,132,23,"partialState"],[102,66,112,2],[102,75,132,69],[103,0,132,69],[103,12,132,39,"routeNames"],[103,22,132,69],[103,31,132,39,"routeNames"],[103,41,132,69],[104,0,132,69],[104,12,132,51,"routeParamList"],[104,26,132,69],[104,35,132,51,"routeParamList"],[104,49,132,69],[106,0,133,6],[106,12,133,10,"partialState"],[106,24,133,22],[106,25,133,23,"stale"],[106,30,133,10],[106,35,133,33],[106,40,133,6],[106,42,133,40],[107,0,134,8],[107,17,134,15,"partialState"],[107,29,134,8],[108,0,135,7],[110,0,137,6],[110,12,137,10,"state"],[110,17,137,15],[110,20,137,18,"router"],[110,26,137,24],[110,27,137,25,"getRehydratedState"],[110,45,137,18],[110,46,137,44,"partialState"],[110,58,137,18],[110,60,137,58],[111,0,138,8,"routeNames"],[111,10,138,8,"routeNames"],[111,20,138,18],[111,22,138,8,"routeNames"],[111,32,137,58],[112,0,139,8,"routeParamList"],[112,10,139,8,"routeParamList"],[112,24,139,22],[112,26,139,8,"routeParamList"],[113,0,137,58],[113,9,137,18],[113,10,137,6],[115,0,142,6],[115,12,142,10,"isDrawerOpen"],[115,24,142,22],[115,25,142,23,"partialState"],[115,37,142,22],[115,38,142,6],[115,40,142,38],[116,0,143,8,"state"],[116,10,143,8,"state"],[116,15,143,13],[116,18,143,16,"openDrawer"],[116,28,143,26],[116,29,143,27,"state"],[116,34,143,26],[116,35,143,8],[117,0,144,7],[119,0,146,6],[119,33,147,11,"state"],[119,38,146,6],[120,0,148,8,"type"],[120,10,148,8,"type"],[120,14,148,12],[120,16,148,14],[120,24,146,6],[121,0,149,8,"key"],[121,10,149,8,"key"],[121,13,149,11],[121,27,149,23],[122,0,146,6],[123,0,151,5],[123,7,112,2],[124,0,153,4,"getStateForRouteFocus"],[124,6,153,4,"getStateForRouteFocus"],[124,27,112,2],[124,60,153,26,"state"],[124,65,112,2],[124,67,153,33,"key"],[124,70,112,2],[124,72,153,38],[125,0,154,6],[125,12,154,12,"result"],[125,18,154,18],[125,21,154,21,"router"],[125,27,154,27],[125,28,154,28,"getStateForRouteFocus"],[125,49,154,21],[125,50,154,50,"state"],[125,55,154,21],[125,57,154,57,"key"],[125,60,154,21],[125,61,154,6],[126,0,156,6],[126,15,156,13,"closeDrawer"],[126,26,156,24],[126,27,156,25,"result"],[126,33,156,24],[126,34,156,6],[127,0,157,5],[127,7,112,2],[128,0,159,4,"getStateForAction"],[128,6,159,4,"getStateForAction"],[128,23,112,2],[128,52,159,22,"state"],[128,57,112,2],[128,59,159,29,"action"],[128,65,112,2],[128,67,159,37,"options"],[128,74,112,2],[128,76,159,46],[129,0,160,6],[129,16,160,14,"action"],[129,22,160,20],[129,23,160,21,"type"],[129,27,160,6],[130,0,161,8],[130,15,161,13],[130,28,161,8],[131,0,162,10],[131,19,162,17,"openDrawer"],[131,29,162,27],[131,30,162,28,"state"],[131,35,162,27],[131,36,162,10],[133,0,164,8],[133,15,164,13],[133,29,164,8],[134,0,165,10],[134,19,165,17,"closeDrawer"],[134,30,165,28],[134,31,165,29,"state"],[134,36,165,28],[134,37,165,10],[136,0,167,8],[136,15,167,13],[136,30,167,8],[137,0,168,10],[137,16,168,14,"isDrawerOpen"],[137,28,168,26],[137,29,168,27,"state"],[137,34,168,26],[137,35,168,10],[137,37,168,35],[138,0,169,12],[138,21,169,19,"closeDrawer"],[138,32,169,30],[138,33,169,31,"state"],[138,38,169,30],[138,39,169,12],[139,0,170,11],[141,0,172,10],[141,19,172,17,"openDrawer"],[141,29,172,27],[141,30,172,28,"state"],[141,35,172,27],[141,36,172,10],[143,0,174,8],[143,15,174,13],[143,24,174,8],[144,0,175,10],[144,16,175,14,"openByDefault"],[144,29,175,10],[144,31,175,29],[145,0,176,12],[145,18,176,16],[145,19,176,17,"isDrawerOpen"],[145,31,176,29],[145,32,176,30,"state"],[145,37,176,29],[145,38,176,12],[145,40,176,38],[146,0,177,14],[146,23,177,21,"openDrawer"],[146,33,177,31],[146,34,177,32,"state"],[146,39,177,31],[146,40,177,14],[147,0,178,13],[148,0,179,11],[148,13,175,10],[148,19,179,17],[149,0,180,12],[149,18,180,16,"isDrawerOpen"],[149,30,180,28],[149,31,180,29,"state"],[149,36,180,28],[149,37,180,12],[149,39,180,37],[150,0,181,14],[150,23,181,21,"closeDrawer"],[150,34,181,32],[150,35,181,33,"state"],[150,40,181,32],[150,41,181,14],[151,0,182,13],[152,0,183,11],[154,0,185,10],[154,19,185,17,"router"],[154,25,185,23],[154,26,185,24,"getStateForAction"],[154,43,185,17],[154,44,185,42,"state"],[154,49,185,17],[154,51,185,49,"action"],[154,57,185,17],[154,59,185,57,"options"],[154,66,185,17],[154,67,185,10],[156,0,187,8],[157,0,188,10],[157,19,188,17,"router"],[157,25,188,23],[157,26,188,24,"getStateForAction"],[157,43,188,17],[157,44,188,42,"state"],[157,49,188,17],[157,51,188,49,"action"],[157,57,188,17],[157,59,188,57,"options"],[157,66,188,17],[157,67,188,10],[158,0,160,6],[159,0,190,5],[159,7,112,2],[160,0,192,4,"actionCreators"],[160,6,192,4,"actionCreators"],[160,20,192,18],[160,22,192,20,"DrawerActions"],[161,0,112,2],[162,0,194,1]],"functionMap":{"names":["<global>","DrawerActions.openDrawer","DrawerActions.closeDrawer","DrawerActions.toggleDrawer","isDrawerOpen","<anonymous>","openDrawer","closeDrawer","state.history.filter$argument_0","DrawerRouter","getInitialState","getRehydratedState","getStateForRouteFocus","getStateForAction"],"mappings":"AAA;EC8D;GDE;EEC;GFE;EGC;GHE;qBIG;iCCE,4BD,EJ;mBME;CNS;oBOE;kCCO,4BD;CPE;eSE;ICiB;KDa;IEE;KFmB;IGE;KHI;IIE;KJ+B;CTI"}},"type":"js/module"}]}