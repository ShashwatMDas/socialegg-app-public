{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}},{"name":"qs","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"url-parse","data":{"isAsync":false}},{"name":"./LinkingModule","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"expo-constants\"));\n\n  var _qs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"qs\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  var _urlParse = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"url-parse\"));\n\n  var _LinkingModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./LinkingModule\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var manifest = _expoConstants.default.manifest;\n\n  function _usesCustomScheme() {\n    return _expoConstants.default.appOwnership === 'standalone' && manifest.scheme;\n  }\n\n  function _getHostUri() {\n    if (!manifest.hostUri && !_usesCustomScheme()) {\n      return _removeScheme(_expoConstants.default.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n    }\n\n    return manifest.hostUri;\n  }\n\n  function _isExpoHosted() {\n    var hostUri = _getHostUri();\n\n    return !!(hostUri && (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(hostUri) || manifest.developer));\n  }\n\n  function _removeScheme(url) {\n    return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n  }\n\n  function _removePort(url) {\n    return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n  }\n\n  function _removeLeadingSlash(url) {\n    return url.replace(/^\\//, '');\n  }\n\n  function _removeTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n  }\n\n  function _removeTrailingSlashAndQueryString(url) {\n    return url.replace(/\\/?\\?.*$/, '');\n  }\n\n  function makeUrl() {\n    var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var scheme = 'exp';\n    var manifestScheme = manifest.scheme || manifest.detach && manifest.detach.scheme;\n\n    if (_expoConstants.default.appOwnership === 'standalone' && manifestScheme) {\n      scheme = manifestScheme;\n    } else if (_expoConstants.default.appOwnership === 'standalone' && !manifestScheme) {\n      throw new Error('Cannot make a deep link into a standalone app with no custom scheme defined');\n    } else if (_expoConstants.default.appOwnership === 'expo' && !manifestScheme) {\n      console.warn('Linking requires that you provide a `scheme` in app.json for standalone apps - if it is left blank, your app may crash. The scheme does not apply to development in the Expo client but you should add it as soon as you start working with Linking to avoid creating a broken build. Add a `scheme` to silence this warning. Learn more about Linking at https://docs.expo.io/versions/latest/workflow/linking/');\n    }\n\n    var hostUri = _getHostUri() || '';\n\n    if (_usesCustomScheme() && _isExpoHosted()) {\n      hostUri = '';\n    }\n\n    if (path) {\n      if (_isExpoHosted() && hostUri) {\n        path = \"/--/\" + _removeLeadingSlash(path);\n      }\n\n      if (!path.startsWith('/')) {\n        path = \"/\" + path;\n      }\n    } else {\n      path = '';\n    }\n\n    var queryString = '';\n    var queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n\n    if (queryStringMatchResult) {\n      hostUri = queryStringMatchResult[1];\n      queryString = queryStringMatchResult[2];\n      var paramsFromHostUri = {};\n\n      try {\n        var parsedParams = _qs.default.parse(queryString);\n\n        if (typeof parsedParams === 'object') {\n          paramsFromHostUri = parsedParams;\n        }\n      } catch (e) {}\n\n      queryParams = _objectSpread({}, queryParams, {}, paramsFromHostUri);\n    }\n\n    queryString = _qs.default.stringify(queryParams);\n\n    if (queryString) {\n      queryString = \"?\" + queryString;\n    }\n\n    hostUri = _removeTrailingSlash(hostUri);\n    return encodeURI(scheme + \"://\" + hostUri + path + queryString);\n  }\n\n  function parse(url) {\n    if (!url) {\n      throw new Error('parse cannot be called with a null value');\n    }\n\n    var parsed = (0, _urlParse.default)(url, true);\n\n    for (var param in parsed.query) {\n      parsed.query[param] = decodeURIComponent(parsed.query[param]);\n    }\n\n    var queryParams = parsed.query;\n    var hostUri = _getHostUri() || '';\n\n    var hostUriStripped = _removePort(_removeTrailingSlashAndQueryString(hostUri));\n\n    var path = parsed.pathname || null;\n    var hostname = parsed.hostname || null;\n    var scheme = parsed.protocol || null;\n\n    if (scheme) {\n      scheme = scheme.substring(0, scheme.length - 1);\n    }\n\n    if (path) {\n      path = _removeLeadingSlash(path);\n      var expoPrefix = null;\n\n      if (hostUriStripped) {\n        var parts = hostUriStripped.split('/');\n        expoPrefix = parts.slice(1).concat(['--/']).join('/');\n      }\n\n      if (_isExpoHosted() && !_usesCustomScheme() && expoPrefix && path.startsWith(expoPrefix)) {\n        path = path.substring(expoPrefix.length);\n        hostname = null;\n      } else if (path.indexOf('+') > -1) {\n        path = path.substring(path.indexOf('+') + 1);\n      }\n    }\n\n    return {\n      hostname: hostname,\n      path: path,\n      queryParams: queryParams,\n      scheme: scheme\n    };\n  }\n\n  function parseInitialURLAsync() {\n    var initialUrl;\n    return _regenerator.default.async(function parseInitialURLAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_LinkingModule.default.getInitialURL());\n\n          case 2:\n            initialUrl = _context.sent;\n\n            if (initialUrl) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              scheme: null,\n              hostname: null,\n              path: null,\n              queryParams: null\n            });\n\n          case 5:\n            return _context.abrupt(\"return\", parse(initialUrl));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var newLinking = new _LinkingModule.default.constructor();\n  newLinking.makeUrl = makeUrl;\n  newLinking.parse = parse;\n  newLinking.parseInitialURLAsync = parseInitialURLAsync;\n\n  if (_reactNative.Platform.OS === 'ios') {\n    newLinking.openSettings = function () {\n      return newLinking.openURL('app-settings:');\n    };\n  }\n\n  var _default = newLinking;\n  exports.default = _default;\n});","lineCount":225,"map":[[13,0,1,0],[15,0,2,0],[17,0,3,0],[19,0,4,0],[21,0,5,0],[27,6,6,8,"manifest"],[27,14],[27,17,6,21,"Constants"],[27,39],[27,40,6,8,"manifest"],[27,48],[29,0,7,0],[29,11,7,9,"_usesCustomScheme"],[29,28,7,0],[29,31,7,29],[30,0,8,4],[30,11,8,11,"Constants"],[30,34,8,21,"appOwnership"],[30,46,8,11],[30,51,8,38],[30,63,8,11],[30,67,8,54,"manifest"],[30,75,8,62],[30,76,8,63,"scheme"],[30,82,8,4],[31,0,9,1],[33,0,10,0],[33,11,10,9,"_getHostUri"],[33,22,10,0],[33,25,10,23],[34,0,11,4],[34,8,11,8],[34,9,11,9,"manifest"],[34,17,11,17],[34,18,11,18,"hostUri"],[34,25,11,8],[34,29,11,29],[34,30,11,30,"_usesCustomScheme"],[34,47,11,47],[34,49,11,4],[34,51,11,51],[35,0,14,8],[35,13,14,15,"_removeScheme"],[35,26,14,28],[35,27,14,29,"Constants"],[35,50,14,39,"linkingUri"],[35,60,14,28],[35,61,14,15],[35,62,14,51,"replace"],[35,69,14,15],[35,70,14,59],[35,85,14,15],[35,87,14,76],[35,89,14,15],[35,90,14,8],[36,0,15,5],[38,0,16,4],[38,11,16,11,"manifest"],[38,19,16,19],[38,20,16,20,"hostUri"],[38,27,16,4],[39,0,17,1],[41,0,18,0],[41,11,18,9,"_isExpoHosted"],[41,24,18,0],[41,27,18,25],[42,0,19,4],[42,8,19,10,"hostUri"],[42,15,19,17],[42,18,19,20,"_getHostUri"],[42,29,19,31],[42,31,19,4],[44,0,20,4],[44,11,20,11],[44,12,20,12],[44,14,20,14,"hostUri"],[44,21,20,21],[44,26,21,9],[44,94,21,77,"test"],[44,98,21,9],[44,99,21,82,"hostUri"],[44,106,21,9],[44,111,22,12,"manifest"],[44,119,22,20],[44,120,22,21,"developer"],[44,129,20,21],[44,130,20,12],[44,131,20,4],[45,0,23,1],[47,0,24,0],[47,11,24,9,"_removeScheme"],[47,24,24,0],[47,25,24,23,"url"],[47,28,24,0],[47,30,24,28],[48,0,25,4],[48,11,25,11,"url"],[48,14,25,14],[48,15,25,15,"replace"],[48,22,25,11],[48,23,25,23],[48,46,25,11],[48,48,25,48],[48,50,25,11],[48,51,25,4],[49,0,26,1],[51,0,27,0],[51,11,27,9,"_removePort"],[51,22,27,0],[51,23,27,21,"url"],[51,26,27,0],[51,28,27,26],[52,0,28,4],[52,11,28,11,"url"],[52,14,28,14],[52,15,28,15,"replace"],[52,22,28,11],[52,23,28,23],[52,60,28,11],[52,62,28,62],[52,64,28,11],[52,65,28,4],[53,0,29,1],[55,0,30,0],[55,11,30,9,"_removeLeadingSlash"],[55,30,30,0],[55,31,30,29,"url"],[55,34,30,0],[55,36,30,34],[56,0,31,4],[56,11,31,11,"url"],[56,14,31,14],[56,15,31,15,"replace"],[56,22,31,11],[56,23,31,23],[56,28,31,11],[56,30,31,30],[56,32,31,11],[56,33,31,4],[57,0,32,1],[59,0,33,0],[59,11,33,9,"_removeTrailingSlash"],[59,31,33,0],[59,32,33,30,"url"],[59,35,33,0],[59,37,33,35],[60,0,34,4],[60,11,34,11,"url"],[60,14,34,14],[60,15,34,15,"replace"],[60,22,34,11],[60,23,34,23],[60,28,34,11],[60,30,34,30],[60,32,34,11],[60,33,34,4],[61,0,35,1],[63,0,36,0],[63,11,36,9,"_removeTrailingSlashAndQueryString"],[63,45,36,0],[63,46,36,44,"url"],[63,49,36,0],[63,51,36,49],[64,0,37,4],[64,11,37,11,"url"],[64,14,37,14],[64,15,37,15,"replace"],[64,22,37,11],[64,23,37,23],[64,33,37,11],[64,35,37,35],[64,37,37,11],[64,38,37,4],[65,0,38,1],[67,0,39,0],[67,11,39,9,"makeUrl"],[67,18,39,0],[67,21,39,46],[68,0,39,46],[68,8,39,17,"path"],[68,12,39,46],[68,83,39,24],[68,85,39,46],[69,0,39,46],[69,8,39,28,"queryParams"],[69,19,39,46],[69,90,39,42],[69,92,39,46],[70,0,40,4],[70,8,40,8,"scheme"],[70,14,40,14],[70,17,40,17],[70,22,40,4],[71,0,41,4],[71,8,41,8,"manifestScheme"],[71,22,41,22],[71,25,41,25,"manifest"],[71,33,41,33],[71,34,41,34,"scheme"],[71,40,41,25],[71,44,41,45,"manifest"],[71,52,41,53],[71,53,41,54,"detach"],[71,59,41,45],[71,63,41,64,"manifest"],[71,71,41,72],[71,72,41,73,"detach"],[71,78,41,64],[71,79,41,80,"scheme"],[71,85,41,4],[73,0,42,4],[73,8,42,8,"Constants"],[73,31,42,18,"appOwnership"],[73,43,42,8],[73,48,42,35],[73,60,42,8],[73,64,42,51,"manifestScheme"],[73,78,42,4],[73,80,42,67],[74,0,43,8,"scheme"],[74,6,43,8,"scheme"],[74,12,43,14],[74,15,43,17,"manifestScheme"],[74,29,43,8],[75,0,44,5],[75,5,42,4],[75,11,45,9],[75,15,45,13,"Constants"],[75,38,45,23,"appOwnership"],[75,50,45,13],[75,55,45,40],[75,67,45,13],[75,71,45,56],[75,72,45,57,"manifestScheme"],[75,86,45,9],[75,88,45,73],[76,0,46,8],[76,12,46,14],[76,16,46,18,"Error"],[76,21,46,14],[76,22,46,24],[76,99,46,14],[76,100,46,8],[77,0,47,5],[77,5,45,9],[77,11,48,9],[77,15,48,13,"Constants"],[77,38,48,23,"appOwnership"],[77,50,48,13],[77,55,48,40],[77,61,48,13],[77,65,48,50],[77,66,48,51,"manifestScheme"],[77,80,48,9],[77,82,48,67],[78,0,49,8,"console"],[78,6,49,8,"console"],[78,13,49,15],[78,14,49,16,"warn"],[78,18,49,8],[78,19,49,21],[78,421,49,8],[79,0,50,5],[81,0,51,4],[81,8,51,8,"hostUri"],[81,15,51,15],[81,18,51,18,"_getHostUri"],[81,29,51,29],[81,35,51,35],[81,37,51,4],[83,0,52,4],[83,8,52,8,"_usesCustomScheme"],[83,25,52,25],[83,31,52,31,"_isExpoHosted"],[83,44,52,44],[83,46,52,4],[83,48,52,48],[84,0,53,8,"hostUri"],[84,6,53,8,"hostUri"],[84,13,53,15],[84,16,53,18],[84,18,53,8],[85,0,54,5],[87,0,55,4],[87,8,55,8,"path"],[87,12,55,4],[87,14,55,14],[88,0,56,8],[88,10,56,12,"_isExpoHosted"],[88,23,56,25],[88,29,56,31,"hostUri"],[88,36,56,8],[88,38,56,40],[89,0,57,12,"path"],[89,8,57,12,"path"],[89,12,57,16],[89,24,57,26,"_removeLeadingSlash"],[89,43,57,45],[89,44,57,46,"path"],[89,48,57,45],[89,49,57,12],[90,0,58,9],[92,0,59,8],[92,10,59,12],[92,11,59,13,"path"],[92,15,59,17],[92,16,59,18,"startsWith"],[92,26,59,13],[92,27,59,29],[92,30,59,13],[92,31,59,8],[92,33,59,35],[93,0,60,12,"path"],[93,8,60,12,"path"],[93,12,60,16],[93,21,60,23,"path"],[93,25,60,12],[94,0,61,9],[95,0,62,5],[95,5,55,4],[95,11,63,9],[96,0,64,8,"path"],[96,6,64,8,"path"],[96,10,64,12],[96,13,64,15],[96,15,64,8],[97,0,65,5],[99,0,68,4],[99,8,68,8,"queryString"],[99,19,68,19],[99,22,68,22],[99,24,68,4],[100,0,69,4],[100,8,69,8,"queryStringMatchResult"],[100,30,69,30],[100,33,69,33,"hostUri"],[100,40,69,40],[100,41,69,41,"match"],[100,46,69,33],[100,47,69,47],[100,59,69,33],[100,60,69,4],[102,0,70,4],[102,8,70,8,"queryStringMatchResult"],[102,30,70,4],[102,32,70,32],[103,0,71,8,"hostUri"],[103,6,71,8,"hostUri"],[103,13,71,15],[103,16,71,18,"queryStringMatchResult"],[103,38,71,40],[103,39,71,41],[103,40,71,40],[103,41,71,8],[104,0,72,8,"queryString"],[104,6,72,8,"queryString"],[104,17,72,19],[104,20,72,22,"queryStringMatchResult"],[104,42,72,44],[104,43,72,45],[104,44,72,44],[104,45,72,8],[105,0,73,8],[105,10,73,12,"paramsFromHostUri"],[105,27,73,29],[105,30,73,32],[105,32,73,8],[107,0,74,8],[107,10,74,12],[108,0,75,12],[108,12,75,16,"parsedParams"],[108,24,75,28],[108,27,75,31,"qs"],[108,39,75,34,"parse"],[108,44,75,31],[108,45,75,40,"queryString"],[108,56,75,31],[108,57,75,12],[110,0,76,12],[110,12,76,16],[110,19,76,23,"parsedParams"],[110,31,76,16],[110,36,76,40],[110,44,76,12],[110,46,76,50],[111,0,77,16,"paramsFromHostUri"],[111,10,77,16,"paramsFromHostUri"],[111,27,77,33],[111,30,77,36,"parsedParams"],[111,42,77,16],[112,0,78,13],[113,0,79,9],[113,7,74,8],[113,8,80,8],[113,15,80,15,"e"],[113,16,80,8],[113,18,80,18],[113,19,80,21],[115,0,81,8,"queryParams"],[115,6,81,8,"queryParams"],[115,17,81,19],[115,38,82,15,"queryParams"],[115,49,81,19],[115,55,83,15,"paramsFromHostUri"],[115,72,81,19],[115,73,81,8],[116,0,85,5],[118,0,86,4,"queryString"],[118,4,86,4,"queryString"],[118,15,86,15],[118,18,86,18,"qs"],[118,30,86,21,"stringify"],[118,39,86,18],[118,40,86,31,"queryParams"],[118,51,86,18],[118,52,86,4],[120,0,87,4],[120,8,87,8,"queryString"],[120,19,87,4],[120,21,87,21],[121,0,88,8,"queryString"],[121,6,88,8,"queryString"],[121,17,88,19],[121,26,88,26,"queryString"],[121,37,88,8],[122,0,89,5],[124,0,90,4,"hostUri"],[124,4,90,4,"hostUri"],[124,11,90,11],[124,14,90,14,"_removeTrailingSlash"],[124,34,90,34],[124,35,90,35,"hostUri"],[124,42,90,34],[124,43,90,4],[125,0,91,4],[125,11,91,11,"encodeURI"],[125,20,91,20],[125,21,91,24,"scheme"],[125,27,91,20],[125,38,91,36,"hostUri"],[125,45,91,20],[125,48,91,46,"path"],[125,52,91,20],[125,55,91,53,"queryString"],[125,66,91,20],[125,67,91,4],[126,0,92,1],[128,0,93,0],[128,11,93,9,"parse"],[128,16,93,0],[128,17,93,15,"url"],[128,20,93,0],[128,22,93,20],[129,0,94,4],[129,8,94,8],[129,9,94,9,"url"],[129,12,94,4],[129,14,94,14],[130,0,95,8],[130,12,95,14],[130,16,95,18,"Error"],[130,21,95,14],[130,22,95,24],[130,64,95,14],[130,65,95,8],[131,0,96,5],[133,0,97,4],[133,8,97,10,"parsed"],[133,14,97,16],[133,17,97,19],[133,40,97,23,"url"],[133,43,97,19],[133,45,97,51],[133,49,97,19],[133,50,97,4],[135,0,98,4],[135,9,98,9],[135,13,98,15,"param"],[135,18,98,4],[135,22,98,24,"parsed"],[135,28,98,30],[135,29,98,31,"query"],[135,34,98,4],[135,36,98,38],[136,0,99,8,"parsed"],[136,6,99,8,"parsed"],[136,12,99,14],[136,13,99,15,"query"],[136,18,99,8],[136,19,99,21,"param"],[136,24,99,8],[136,28,99,30,"decodeURIComponent"],[136,46,99,48],[136,47,99,49,"parsed"],[136,53,99,55],[136,54,99,56,"query"],[136,59,99,49],[136,60,99,62,"param"],[136,65,99,49],[136,66,99,48],[136,67,99,8],[137,0,100,5],[139,0,101,4],[139,8,101,8,"queryParams"],[139,19,101,19],[139,22,101,22,"parsed"],[139,28,101,28],[139,29,101,29,"query"],[139,34,101,4],[140,0,102,4],[140,8,102,10,"hostUri"],[140,15,102,17],[140,18,102,20,"_getHostUri"],[140,29,102,31],[140,35,102,37],[140,37,102,4],[142,0,103,4],[142,8,103,10,"hostUriStripped"],[142,23,103,25],[142,26,103,28,"_removePort"],[142,37,103,39],[142,38,103,40,"_removeTrailingSlashAndQueryString"],[142,72,103,74],[142,73,103,75,"hostUri"],[142,80,103,74],[142,81,103,39],[142,82,103,4],[144,0,104,4],[144,8,104,8,"path"],[144,12,104,12],[144,15,104,15,"parsed"],[144,21,104,21],[144,22,104,22,"pathname"],[144,30,104,15],[144,34,104,34],[144,38,104,4],[145,0,105,4],[145,8,105,8,"hostname"],[145,16,105,16],[145,19,105,19,"parsed"],[145,25,105,25],[145,26,105,26,"hostname"],[145,34,105,19],[145,38,105,38],[145,42,105,4],[146,0,106,4],[146,8,106,8,"scheme"],[146,14,106,14],[146,17,106,17,"parsed"],[146,23,106,23],[146,24,106,24,"protocol"],[146,32,106,17],[146,36,106,36],[146,40,106,4],[148,0,107,4],[148,8,107,8,"scheme"],[148,14,107,4],[148,16,107,16],[149,0,109,8,"scheme"],[149,6,109,8,"scheme"],[149,12,109,14],[149,15,109,17,"scheme"],[149,21,109,23],[149,22,109,24,"substring"],[149,31,109,17],[149,32,109,34],[149,33,109,17],[149,35,109,37,"scheme"],[149,41,109,43],[149,42,109,44,"length"],[149,48,109,37],[149,51,109,53],[149,52,109,17],[149,53,109,8],[150,0,110,5],[152,0,111,4],[152,8,111,8,"path"],[152,12,111,4],[152,14,111,14],[153,0,112,8,"path"],[153,6,112,8,"path"],[153,10,112,12],[153,13,112,15,"_removeLeadingSlash"],[153,32,112,34],[153,33,112,35,"path"],[153,37,112,34],[153,38,112,8],[154,0,113,8],[154,10,113,12,"expoPrefix"],[154,20,113,22],[154,23,113,25],[154,27,113,8],[156,0,114,8],[156,10,114,12,"hostUriStripped"],[156,25,114,8],[156,27,114,29],[157,0,115,12],[157,12,115,18,"parts"],[157,17,115,23],[157,20,115,26,"hostUriStripped"],[157,35,115,41],[157,36,115,42,"split"],[157,41,115,26],[157,42,115,48],[157,45,115,26],[157,46,115,12],[158,0,116,12,"expoPrefix"],[158,8,116,12,"expoPrefix"],[158,18,116,22],[158,21,116,25,"parts"],[158,26,116,30],[158,27,117,17,"slice"],[158,32,116,25],[158,33,117,23],[158,34,116,25],[158,36,118,17,"concat"],[158,42,116,25],[158,43,118,24],[158,44,118,25],[158,49,118,24],[158,50,116,25],[158,52,119,17,"join"],[158,56,116,25],[158,57,119,22],[158,60,116,25],[158,61,116,12],[159,0,120,9],[161,0,121,8],[161,10,121,12,"_isExpoHosted"],[161,23,121,25],[161,29,121,31],[161,30,121,32,"_usesCustomScheme"],[161,47,121,49],[161,49,121,12],[161,53,121,55,"expoPrefix"],[161,63,121,12],[161,67,121,69,"path"],[161,71,121,73],[161,72,121,74,"startsWith"],[161,82,121,69],[161,83,121,85,"expoPrefix"],[161,93,121,69],[161,94,121,8],[161,96,121,98],[162,0,122,12,"path"],[162,8,122,12,"path"],[162,12,122,16],[162,15,122,19,"path"],[162,19,122,23],[162,20,122,24,"substring"],[162,29,122,19],[162,30,122,34,"expoPrefix"],[162,40,122,44],[162,41,122,45,"length"],[162,47,122,19],[162,48,122,12],[163,0,123,12,"hostname"],[163,8,123,12,"hostname"],[163,16,123,20],[163,19,123,23],[163,23,123,12],[164,0,124,9],[164,7,121,8],[164,13,125,13],[164,17,125,17,"path"],[164,21,125,21],[164,22,125,22,"indexOf"],[164,29,125,17],[164,30,125,30],[164,33,125,17],[164,37,125,37],[164,38,125,38],[164,39,125,13],[164,41,125,41],[165,0,126,12,"path"],[165,8,126,12,"path"],[165,12,126,16],[165,15,126,19,"path"],[165,19,126,23],[165,20,126,24,"substring"],[165,29,126,19],[165,30,126,34,"path"],[165,34,126,38],[165,35,126,39,"indexOf"],[165,42,126,34],[165,43,126,47],[165,46,126,34],[165,50,126,54],[165,51,126,19],[165,52,126,12],[166,0,127,9],[167,0,128,5],[169,0,129,4],[169,11,129,11],[170,0,130,8,"hostname"],[170,6,130,8,"hostname"],[170,14,130,16],[170,16,130,8,"hostname"],[170,24,129,11],[171,0,131,8,"path"],[171,6,131,8,"path"],[171,10,131,12],[171,12,131,8,"path"],[171,16,129,11],[172,0,132,8,"queryParams"],[172,6,132,8,"queryParams"],[172,17,132,19],[172,19,132,8,"queryParams"],[172,30,129,11],[173,0,133,8,"scheme"],[173,6,133,8,"scheme"],[173,12,133,14],[173,14,133,8,"scheme"],[174,0,129,11],[174,5,129,4],[175,0,135,1],[177,0,136,0],[177,11,136,15,"parseInitialURLAsync"],[177,31,136,0],[178,0,136,0],[179,0,136,0],[180,0,136,0],[181,0,136,0],[182,0,136,0],[183,0,136,0],[184,0,136,0],[184,46,137,29,"Linking"],[184,69,137,37,"getInitialURL"],[184,82,137,29],[184,84,136,0],[186,0,136,0],[187,0,137,10,"initialUrl"],[187,12,137,10,"initialUrl"],[187,22,136,0],[189,0,136,0],[189,16,138,9,"initialUrl"],[189,26,136,0],[190,0,136,0],[191,0,136,0],[192,0,136,0],[194,0,136,0],[194,45,139,15],[195,0,140,12,"scheme"],[195,14,140,12,"scheme"],[195,20,140,18],[195,22,140,20],[195,26,139,15],[196,0,141,12,"hostname"],[196,14,141,12,"hostname"],[196,22,141,20],[196,24,141,22],[196,28,139,15],[197,0,142,12,"path"],[197,14,142,12,"path"],[197,18,142,16],[197,20,142,18],[197,24,139,15],[198,0,143,12,"queryParams"],[198,14,143,12,"queryParams"],[198,25,143,23],[198,27,143,25],[199,0,139,15],[199,13,136,0],[201,0,136,0],[202,0,136,0],[202,45,146,11,"parse"],[202,50,146,16],[202,51,146,17,"initialUrl"],[202,61,146,16],[202,62,136,0],[204,0,136,0],[205,0,136,0],[206,0,136,0],[207,0,136,0],[208,0,136,0],[209,0,136,0],[210,0,136,0],[212,0,149,0],[212,6,149,4,"newLinking"],[212,16,149,14],[212,19,149,17],[212,23,149,21,"Linking"],[212,46,149,29,"constructor"],[212,57,149,17],[212,59,149,0],[213,0,150,0,"newLinking"],[213,2,150,0,"newLinking"],[213,12,150,10],[213,13,150,11,"makeUrl"],[213,20,150,0],[213,23,150,21,"makeUrl"],[213,30,150,0],[214,0,151,0,"newLinking"],[214,2,151,0,"newLinking"],[214,12,151,10],[214,13,151,11,"parse"],[214,18,151,0],[214,21,151,19,"parse"],[214,26,151,0],[215,0,152,0,"newLinking"],[215,2,152,0,"newLinking"],[215,12,152,10],[215,13,152,11,"parseInitialURLAsync"],[215,33,152,0],[215,36,152,34,"parseInitialURLAsync"],[215,56,152,0],[217,0,154,0],[217,6,154,4,"Platform"],[217,28,154,13,"OS"],[217,30,154,4],[217,35,154,20],[217,40,154,0],[217,42,154,27],[218,0,155,4,"newLinking"],[218,4,155,4,"newLinking"],[218,14,155,14],[218,15,155,15,"openSettings"],[218,27,155,4],[218,30,155,30],[219,0,155,30],[219,13,155,36,"newLinking"],[219,23,155,46],[219,24,155,47,"openURL"],[219,31,155,36],[219,32,155,55],[219,47,155,36],[219,48,155,30],[220,0,155,30],[220,5,155,4],[221,0,156,1],[223,17,157,15,"newLinking"],[223,27]],"functionMap":{"names":["<global>","_usesCustomScheme","_getHostUri","_isExpoHosted","_removeScheme","_removePort","_removeLeadingSlash","_removeTrailingSlash","_removeTrailingSlashAndQueryString","makeUrl","parse","parseInitialURLAsync","newLinking.openSettings"],"mappings":"AAA;ACM;CDE;AEC;CFO;AGC;CHK;AIC;CJE;AKC;CLE;AMC;CNE;AOC;CPE;AQC;CRE;ASC;CTqD;AUC;CV0C;AWC;CXW;8BYQ,yCZ"}},"type":"js/module"}]}