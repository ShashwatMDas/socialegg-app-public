{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"./NativeWebSocketModule","data":{"isAsync":false}},{"name":"../Blob/Blob","data":{"isAsync":false}},{"name":"../Blob/BlobManager","data":{"isAsync":false}},{"name":"event-target-shim","data":{"isAsync":false}},{"name":"../EventEmitter/NativeEventEmitter","data":{"isAsync":false}},{"name":"../Utilities/Platform","data":{"isAsync":false}},{"name":"./WebSocketEvent","data":{"isAsync":false}},{"name":"base64-js","data":{"isAsync":false}},{"name":"../Utilities/binaryToBase64","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _NativeWebSocketModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./NativeWebSocketModule\"));\n\n  function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var Blob = _$$_REQUIRE(_dependencyMap[8], \"../Blob/Blob\");\n\n  var BlobManager = _$$_REQUIRE(_dependencyMap[9], \"../Blob/BlobManager\");\n\n  var EventTarget = _$$_REQUIRE(_dependencyMap[10], \"event-target-shim\");\n\n  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[11], \"../EventEmitter/NativeEventEmitter\");\n\n  var Platform = _$$_REQUIRE(_dependencyMap[12], \"../Utilities/Platform\");\n\n  var WebSocketEvent = _$$_REQUIRE(_dependencyMap[13], \"./WebSocketEvent\");\n\n  var base64 = _$$_REQUIRE(_dependencyMap[14], \"base64-js\");\n\n  var binaryToBase64 = _$$_REQUIRE(_dependencyMap[15], \"../Utilities/binaryToBase64\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[16], \"invariant\");\n\n  var CONNECTING = 0;\n  var OPEN = 1;\n  var CLOSING = 2;\n  var CLOSED = 3;\n  var CLOSE_NORMAL = 1000;\n  var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\n  var nextWebSocketId = 0;\n\n  var WebSocket = function (_ref) {\n    (0, _inherits2.default)(WebSocket, _ref);\n\n    var _super = _createSuper(WebSocket);\n\n    function WebSocket(url, protocols, options) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, WebSocket);\n      _this = _super.call(this);\n      _this.CONNECTING = CONNECTING;\n      _this.OPEN = OPEN;\n      _this.CLOSING = CLOSING;\n      _this.CLOSED = CLOSED;\n      _this.readyState = CONNECTING;\n\n      if (typeof protocols === 'string') {\n        protocols = [protocols];\n      }\n\n      var _ref2 = options || {},\n          _ref2$headers = _ref2.headers,\n          headers = _ref2$headers === void 0 ? {} : _ref2$headers,\n          unrecognized = (0, _objectWithoutProperties2.default)(_ref2, [\"headers\"]);\n\n      if (unrecognized && typeof unrecognized.origin === 'string') {\n        console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');\n        headers.origin = unrecognized.origin;\n        delete unrecognized.origin;\n      }\n\n      if (Object.keys(unrecognized).length > 0) {\n        console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');\n      }\n\n      if (!Array.isArray(protocols)) {\n        protocols = null;\n      }\n\n      _this._eventEmitter = new NativeEventEmitter(_NativeWebSocketModule.default);\n      _this._socketId = nextWebSocketId++;\n\n      _this._registerEvents();\n\n      _NativeWebSocketModule.default.connect(url, protocols, {\n        headers: headers\n      }, _this._socketId);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(WebSocket, [{\n      key: \"close\",\n      value: function close(code, reason) {\n        if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n          return;\n        }\n\n        this.readyState = this.CLOSING;\n\n        this._close(code, reason);\n      }\n    }, {\n      key: \"send\",\n      value: function send(data) {\n        if (this.readyState === this.CONNECTING) {\n          throw new Error('INVALID_STATE_ERR');\n        }\n\n        if (data instanceof Blob) {\n          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n          BlobManager.sendOverSocket(data, this._socketId);\n          return;\n        }\n\n        if (typeof data === 'string') {\n          _NativeWebSocketModule.default.send(data, this._socketId);\n\n          return;\n        }\n\n        if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n          _NativeWebSocketModule.default.sendBinary(binaryToBase64(data), this._socketId);\n\n          return;\n        }\n\n        throw new Error('Unsupported data type');\n      }\n    }, {\n      key: \"ping\",\n      value: function ping() {\n        if (this.readyState === this.CONNECTING) {\n          throw new Error('INVALID_STATE_ERR');\n        }\n\n        _NativeWebSocketModule.default.ping(this._socketId);\n      }\n    }, {\n      key: \"_close\",\n      value: function _close(code, reason) {\n        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n        var closeReason = typeof reason === 'string' ? reason : '';\n\n        _NativeWebSocketModule.default.close(statusCode, closeReason, this._socketId);\n\n        if (BlobManager.isAvailable && this._binaryType === 'blob') {\n          BlobManager.removeWebSocketHandler(this._socketId);\n        }\n      }\n    }, {\n      key: \"_unregisterEvents\",\n      value: function _unregisterEvents() {\n        this._subscriptions.forEach(function (e) {\n          return e.remove();\n        });\n\n        this._subscriptions = [];\n      }\n    }, {\n      key: \"_registerEvents\",\n      value: function _registerEvents() {\n        var _this2 = this;\n\n        this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          var data = ev.data;\n\n          switch (ev.type) {\n            case 'binary':\n              data = base64.toByteArray(ev.data).buffer;\n              break;\n\n            case 'blob':\n              data = BlobManager.createFromOptions(ev.data);\n              break;\n          }\n\n          _this2.dispatchEvent(new WebSocketEvent('message', {\n            data: data\n          }));\n        }), this._eventEmitter.addListener('websocketOpen', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.OPEN;\n          _this2.protocol = ev.protocol;\n\n          _this2.dispatchEvent(new WebSocketEvent('open'));\n        }), this._eventEmitter.addListener('websocketClosed', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.CLOSED;\n\n          _this2.dispatchEvent(new WebSocketEvent('close', {\n            code: ev.code,\n            reason: ev.reason\n          }));\n\n          _this2._unregisterEvents();\n\n          _this2.close();\n        }), this._eventEmitter.addListener('websocketFailed', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.CLOSED;\n\n          _this2.dispatchEvent(new WebSocketEvent('error', {\n            message: ev.message\n          }));\n\n          _this2.dispatchEvent(new WebSocketEvent('close', {\n            message: ev.message\n          }));\n\n          _this2._unregisterEvents();\n\n          _this2.close();\n        })];\n      }\n    }, {\n      key: \"binaryType\",\n      get: function get() {\n        return this._binaryType;\n      },\n      set: function set(binaryType) {\n        if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n          throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n        }\n\n        if (this._binaryType === 'blob' || binaryType === 'blob') {\n          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n\n          if (binaryType === 'blob') {\n            BlobManager.addWebSocketHandler(this._socketId);\n          } else {\n            BlobManager.removeWebSocketHandler(this._socketId);\n          }\n        }\n\n        this._binaryType = binaryType;\n      }\n    }]);\n    return WebSocket;\n  }(EventTarget.apply(void 0, WEBSOCKET_EVENTS));\n\n  WebSocket.CONNECTING = CONNECTING;\n  WebSocket.OPEN = OPEN;\n  WebSocket.CLOSING = CLOSING;\n  WebSocket.CLOSED = CLOSED;\n  module.exports = WebSocket;\n});","lineCount":269,"map":[[2,0,11,0],[18,0,25,0],[24,0,13,0],[24,6,13,6,"Blob"],[24,10,13,10],[24,13,13,13,"require"],[24,24,13,20],[24,59,13,0],[26,0,14,0],[26,6,14,6,"BlobManager"],[26,17,14,17],[26,20,14,20,"require"],[26,31,14,27],[26,73,14,0],[28,0,15,0],[28,6,15,6,"EventTarget"],[28,17,15,17],[28,20,15,20,"require"],[28,31,15,27],[28,72,15,0],[30,0,16,0],[30,6,16,6,"NativeEventEmitter"],[30,24,16,24],[30,27,16,27,"require"],[30,38,16,34],[30,96,16,0],[32,0,17,0],[32,6,17,6,"Platform"],[32,14,17,14],[32,17,17,17,"require"],[32,28,17,24],[32,73,17,0],[34,0,18,0],[34,6,18,6,"WebSocketEvent"],[34,20,18,20],[34,23,18,23,"require"],[34,34,18,30],[34,74,18,0],[36,0,20,0],[36,6,20,6,"base64"],[36,12,20,12],[36,15,20,15,"require"],[36,26,20,22],[36,59,20,0],[38,0,21,0],[38,6,21,6,"binaryToBase64"],[38,20,21,20],[38,23,21,23,"require"],[38,34,21,30],[38,85,21,0],[40,0,22,0],[40,6,22,6,"invariant"],[40,15,22,15],[40,18,22,18,"require"],[40,29,22,25],[40,62,22,0],[42,0,41,0],[42,6,41,6,"CONNECTING"],[42,16,41,16],[42,19,41,19],[42,20,41,0],[43,0,42,0],[43,6,42,6,"OPEN"],[43,10,42,10],[43,13,42,13],[43,14,42,0],[44,0,43,0],[44,6,43,6,"CLOSING"],[44,13,43,13],[44,16,43,16],[44,17,43,0],[45,0,44,0],[45,6,44,6,"CLOSED"],[45,12,44,12],[45,15,44,15],[45,16,44,0],[46,0,46,0],[46,6,46,6,"CLOSE_NORMAL"],[46,18,46,18],[46,21,46,21],[46,25,46,0],[47,0,48,0],[47,6,48,6,"WEBSOCKET_EVENTS"],[47,22,48,22],[47,25,48,25],[47,26,48,26],[47,33,48,25],[47,35,48,35],[47,42,48,25],[47,44,48,44],[47,53,48,25],[47,55,48,55],[47,61,48,25],[47,62,48,0],[48,0,50,0],[48,6,50,4,"nextWebSocketId"],[48,21,50,19],[48,24,50,22],[48,25,50,0],[50,6,58,6,"WebSocket"],[50,15],[55,0,85,2],[55,23,86,4,"url"],[55,26,85,2],[55,28,87,4,"protocols"],[55,37,85,2],[55,39,88,4,"options"],[55,46,85,2],[55,48,89,4],[56,0,89,4],[58,0,89,4],[59,0,90,4],[60,0,89,4],[60,12,64,2,"CONNECTING"],[60,22,89,4],[60,25,64,23,"CONNECTING"],[60,35,89,4],[61,0,89,4],[61,12,65,2,"OPEN"],[61,16,89,4],[61,19,65,17,"OPEN"],[61,23,89,4],[62,0,89,4],[62,12,66,2,"CLOSING"],[62,19,89,4],[62,22,66,20,"CLOSING"],[62,29,89,4],[63,0,89,4],[63,12,67,2,"CLOSED"],[63,18,89,4],[63,21,67,19,"CLOSED"],[63,27,89,4],[64,0,89,4],[64,12,82,2,"readyState"],[64,22,89,4],[64,25,82,23,"CONNECTING"],[64,35,89,4],[66,0,91,4],[66,10,91,8],[66,17,91,15,"protocols"],[66,26,91,8],[66,31,91,29],[66,39,91,4],[66,41,91,39],[67,0,92,6,"protocols"],[67,8,92,6,"protocols"],[67,17,92,15],[67,20,92,18],[67,21,92,19,"protocols"],[67,30,92,18],[67,31,92,6],[68,0,93,5],[70,0,89,4],[70,18,95,44,"options"],[70,25,95,51],[70,29,95,55],[70,31,89,4],[71,0,89,4],[71,32,95,11,"headers"],[71,39,89,4],[72,0,89,4],[72,10,95,11,"headers"],[72,17,89,4],[72,47,95,21],[72,49,89,4],[73,0,89,4],[73,10,95,28,"unrecognized"],[73,22,89,4],[75,0,101,4],[75,10,101,8,"unrecognized"],[75,22,101,20],[75,26,101,24],[75,33,101,31,"unrecognized"],[75,45,101,43],[75,46,101,44,"origin"],[75,52,101,24],[75,57,101,55],[75,65,101,4],[75,67,101,65],[76,0,102,6,"console"],[76,8,102,6,"console"],[76,15,102,13],[76,16,102,14,"warn"],[76,20,102,6],[76,21,103,8],[76,126,102,6],[77,0,108,6,"headers"],[77,8,108,6,"headers"],[77,15,108,13],[77,16,108,14,"origin"],[77,22,108,6],[77,25,108,23,"unrecognized"],[77,37,108,35],[77,38,108,36,"origin"],[77,44,108,6],[78,0,112,6],[78,15,112,13,"unrecognized"],[78,27,112,25],[78,28,112,26,"origin"],[78,34,112,6],[79,0,113,5],[81,0,116,4],[81,10,116,8,"Object"],[81,16,116,14],[81,17,116,15,"keys"],[81,21,116,8],[81,22,116,20,"unrecognized"],[81,34,116,8],[81,36,116,34,"length"],[81,42,116,8],[81,45,116,43],[81,46,116,4],[81,48,116,46],[82,0,117,6,"console"],[82,8,117,6,"console"],[82,15,117,13],[82,16,117,14,"warn"],[82,20,117,6],[82,21,118,8],[82,71,119,10,"Object"],[82,77,119,16],[82,78,119,17,"keys"],[82,82,119,10],[82,83,119,22,"unrecognized"],[82,95,119,10],[82,97,119,36,"join"],[82,101,119,10],[82,102,119,41],[82,108,119,10],[82,109,118,8],[82,112,120,10],[82,117,118,8],[82,120,121,10],[82,164,117,6],[83,0,123,5],[85,0,125,4],[85,10,125,8],[85,11,125,9,"Array"],[85,16,125,14],[85,17,125,15,"isArray"],[85,24,125,9],[85,25,125,23,"protocols"],[85,34,125,9],[85,35,125,4],[85,37,125,35],[86,0,126,6,"protocols"],[86,8,126,6,"protocols"],[86,17,126,15],[86,20,126,18],[86,24,126,6],[87,0,127,5],[89,0,129,4],[89,12,129,9,"_eventEmitter"],[89,25,129,4],[89,28,129,25],[89,32,129,29,"NativeEventEmitter"],[89,50,129,25],[89,51,129,48,"NativeWebSocketModule"],[89,81,129,25],[89,82,129,4],[90,0,130,4],[90,12,130,9,"_socketId"],[90,21,130,4],[90,24,130,21,"nextWebSocketId"],[90,39,130,36],[90,41,130,4],[92,0,131,4],[92,12,131,9,"_registerEvents"],[92,27,131,4],[94,0,132,4,"NativeWebSocketModule"],[94,37,132,26,"connect"],[94,44,132,4],[94,45,132,34,"url"],[94,48,132,4],[94,50,132,39,"protocols"],[94,59,132,4],[94,61,132,50],[95,0,132,51,"headers"],[95,8,132,51,"headers"],[95,15,132,58],[95,17,132,51,"headers"],[96,0,132,50],[96,7,132,4],[96,9,132,61],[96,15,132,66,"_socketId"],[96,24,132,4],[98,0,89,4],[99,0,133,3],[103,28,157,8,"code"],[103,32],[103,34,157,23,"reason"],[103,40],[103,42,157,46],[104,0,158,4],[104,12,158,8],[104,17,158,13,"readyState"],[104,27,158,8],[104,32,158,28],[104,37,158,33,"CLOSING"],[104,44,158,8],[104,48,158,44],[104,53,158,49,"readyState"],[104,63,158,44],[104,68,158,64],[104,73,158,69,"CLOSED"],[104,79,158,4],[104,81,158,77],[105,0,159,6],[106,0,160,5],[108,0,162,4],[108,13,162,9,"readyState"],[108,23,162,4],[108,26,162,22],[108,31,162,27,"CLOSING"],[108,38,162,4],[110,0,163,4],[110,13,163,9,"_close"],[110,19,163,4],[110,20,163,16,"code"],[110,24,163,4],[110,26,163,22,"reason"],[110,32,163,4],[111,0,164,3],[114,27,166,7,"data"],[114,31],[114,33,166,66],[115,0,167,4],[115,12,167,8],[115,17,167,13,"readyState"],[115,27,167,8],[115,32,167,28],[115,37,167,33,"CONNECTING"],[115,47,167,4],[115,49,167,45],[116,0,168,6],[116,16,168,12],[116,20,168,16,"Error"],[116,25,168,12],[116,26,168,22],[116,45,168,12],[116,46,168,6],[117,0,169,5],[119,0,171,4],[119,12,171,8,"data"],[119,16,171,12],[119,28,171,24,"Blob"],[119,32,171,4],[119,34,171,30],[120,0,172,6,"invariant"],[120,10,172,6,"invariant"],[120,19,172,15],[120,20,173,8,"BlobManager"],[120,31,173,19],[120,32,173,20,"isAvailable"],[120,43,172,15],[120,45,174,8],[120,100,172,15],[120,101,172,6],[121,0,176,6,"BlobManager"],[121,10,176,6,"BlobManager"],[121,21,176,17],[121,22,176,18,"sendOverSocket"],[121,36,176,6],[121,37,176,33,"data"],[121,41,176,6],[121,43,176,39],[121,48,176,44,"_socketId"],[121,57,176,6],[122,0,177,6],[123,0,178,5],[125,0,180,4],[125,12,180,8],[125,19,180,15,"data"],[125,23,180,8],[125,28,180,24],[125,36,180,4],[125,38,180,34],[126,0,181,6,"NativeWebSocketModule"],[126,41,181,28,"send"],[126,45,181,6],[126,46,181,33,"data"],[126,50,181,6],[126,52,181,39],[126,57,181,44,"_socketId"],[126,66,181,6],[128,0,182,6],[129,0,183,5],[131,0,185,4],[131,12,185,8,"data"],[131,16,185,12],[131,28,185,24,"ArrayBuffer"],[131,39,185,8],[131,43,185,39,"ArrayBuffer"],[131,54,185,50],[131,55,185,51,"isView"],[131,61,185,39],[131,62,185,58,"data"],[131,66,185,39],[131,67,185,4],[131,69,185,65],[132,0,186,6,"NativeWebSocketModule"],[132,41,186,28,"sendBinary"],[132,51,186,6],[132,52,186,39,"binaryToBase64"],[132,66,186,53],[132,67,186,54,"data"],[132,71,186,53],[132,72,186,6],[132,74,186,61],[132,79,186,66,"_socketId"],[132,88,186,6],[134,0,187,6],[135,0,188,5],[137,0,190,4],[137,14,190,10],[137,18,190,14,"Error"],[137,23,190,10],[137,24,190,20],[137,47,190,10],[137,48,190,4],[138,0,191,3],[141,29,193,15],[142,0,194,4],[142,12,194,8],[142,17,194,13,"readyState"],[142,27,194,8],[142,32,194,28],[142,37,194,33,"CONNECTING"],[142,47,194,4],[142,49,194,45],[143,0,195,6],[143,16,195,12],[143,20,195,16,"Error"],[143,25,195,12],[143,26,195,22],[143,45,195,12],[143,46,195,6],[144,0,196,5],[146,0,198,4,"NativeWebSocketModule"],[146,39,198,26,"ping"],[146,43,198,4],[146,44,198,31],[146,49,198,36,"_socketId"],[146,58,198,4],[147,0,199,3],[150,29,201,9,"code"],[150,33],[150,35,201,24,"reason"],[150,41],[150,43,201,47],[151,0,203,4],[151,12,203,10,"statusCode"],[151,22,203,20],[151,25,203,23],[151,32,203,30,"code"],[151,36,203,23],[151,41,203,39],[151,49,203,23],[151,52,203,50,"code"],[151,56,203,23],[151,59,203,57,"CLOSE_NORMAL"],[151,71,203,4],[152,0,204,4],[152,12,204,10,"closeReason"],[152,23,204,21],[152,26,204,24],[152,33,204,31,"reason"],[152,39,204,24],[152,44,204,42],[152,52,204,24],[152,55,204,53,"reason"],[152,61,204,24],[152,64,204,62],[152,66,204,4],[154,0,205,4,"NativeWebSocketModule"],[154,39,205,26,"close"],[154,44,205,4],[154,45,205,32,"statusCode"],[154,55,205,4],[154,57,205,44,"closeReason"],[154,68,205,4],[154,70,205,57],[154,75,205,62,"_socketId"],[154,84,205,4],[156,0,207,4],[156,12,207,8,"BlobManager"],[156,23,207,19],[156,24,207,20,"isAvailable"],[156,35,207,8],[156,39,207,35],[156,44,207,40,"_binaryType"],[156,55,207,35],[156,60,207,56],[156,66,207,4],[156,68,207,64],[157,0,208,6,"BlobManager"],[157,10,208,6,"BlobManager"],[157,21,208,17],[157,22,208,18,"removeWebSocketHandler"],[157,44,208,6],[157,45,208,41],[157,50,208,46,"_socketId"],[157,59,208,6],[158,0,209,5],[159,0,210,3],[162,42,212,28],[163,0,213,4],[163,13,213,9,"_subscriptions"],[163,27,213,4],[163,28,213,24,"forEach"],[163,35,213,4],[163,36,213,32],[163,46,213,32,"e"],[163,47,213,33],[164,0,213,33],[164,17,213,37,"e"],[164,18,213,38],[164,19,213,39,"remove"],[164,25,213,37],[164,27,213,33],[165,0,213,33],[165,9,213,4],[167,0,214,4],[167,13,214,9,"_subscriptions"],[167,27,214,4],[167,30,214,26],[167,32,214,4],[168,0,215,3],[171,40,217,26],[172,0,217,26],[174,0,218,4],[174,13,218,9,"_subscriptions"],[174,27,218,4],[174,30,218,26],[174,31,219,6],[174,36,219,11,"_eventEmitter"],[174,49,219,6],[174,50,219,25,"addListener"],[174,61,219,6],[174,62,219,37],[174,80,219,6],[174,82,219,57],[174,92,219,57,"ev"],[174,94,219,59],[174,96,219,63],[175,0,220,8],[175,14,220,12,"ev"],[175,16,220,14],[175,17,220,15,"id"],[175,19,220,12],[175,24,220,22],[175,30,220,26],[175,31,220,27,"_socketId"],[175,40,220,8],[175,42,220,38],[176,0,221,10],[177,0,222,9],[179,0,223,8],[179,14,223,12,"data"],[179,18,223,16],[179,21,223,19,"ev"],[179,23,223,21],[179,24,223,22,"data"],[179,28,223,8],[181,0,224,8],[181,18,224,16,"ev"],[181,20,224,18],[181,21,224,19,"type"],[181,25,224,8],[182,0,225,10],[182,17,225,15],[182,25,225,10],[183,0,226,12,"data"],[183,14,226,12,"data"],[183,18,226,16],[183,21,226,19,"base64"],[183,27,226,25],[183,28,226,26,"toByteArray"],[183,39,226,19],[183,40,226,38,"ev"],[183,42,226,40],[183,43,226,41,"data"],[183,47,226,19],[183,49,226,47,"buffer"],[183,55,226,12],[184,0,227,12],[186,0,228,10],[186,17,228,15],[186,23,228,10],[187,0,229,12,"data"],[187,14,229,12,"data"],[187,18,229,16],[187,21,229,19,"BlobManager"],[187,32,229,30],[187,33,229,31,"createFromOptions"],[187,50,229,19],[187,51,229,49,"ev"],[187,53,229,51],[187,54,229,52,"data"],[187,58,229,19],[187,59,229,12],[188,0,230,12],[189,0,224,8],[191,0,232,8],[191,10,232,8],[191,16,232,12],[191,17,232,13,"dispatchEvent"],[191,30,232,8],[191,31,232,27],[191,35,232,31,"WebSocketEvent"],[191,49,232,27],[191,50,232,46],[191,59,232,27],[191,61,232,57],[192,0,232,58,"data"],[192,12,232,58,"data"],[192,16,232,62],[192,18,232,58,"data"],[193,0,232,57],[193,11,232,27],[193,12,232,8],[194,0,233,7],[194,9,219,6],[194,10,218,26],[194,12,234,6],[194,17,234,11,"_eventEmitter"],[194,30,234,6],[194,31,234,25,"addListener"],[194,42,234,6],[194,43,234,37],[194,58,234,6],[194,60,234,54],[194,70,234,54,"ev"],[194,72,234,56],[194,74,234,60],[195,0,235,8],[195,14,235,12,"ev"],[195,16,235,14],[195,17,235,15,"id"],[195,19,235,12],[195,24,235,22],[195,30,235,26],[195,31,235,27,"_socketId"],[195,40,235,8],[195,42,235,38],[196,0,236,10],[197,0,237,9],[199,0,238,8],[199,10,238,8],[199,16,238,12],[199,17,238,13,"readyState"],[199,27,238,8],[199,30,238,26],[199,36,238,30],[199,37,238,31,"OPEN"],[199,41,238,8],[200,0,239,8],[200,10,239,8],[200,16,239,12],[200,17,239,13,"protocol"],[200,25,239,8],[200,28,239,24,"ev"],[200,30,239,26],[200,31,239,27,"protocol"],[200,39,239,8],[202,0,240,8],[202,10,240,8],[202,16,240,12],[202,17,240,13,"dispatchEvent"],[202,30,240,8],[202,31,240,27],[202,35,240,31,"WebSocketEvent"],[202,49,240,27],[202,50,240,46],[202,56,240,27],[202,57,240,8],[203,0,241,7],[203,9,234,6],[203,10,218,26],[203,12,242,6],[203,17,242,11,"_eventEmitter"],[203,30,242,6],[203,31,242,25,"addListener"],[203,42,242,6],[203,43,242,37],[203,60,242,6],[203,62,242,56],[203,72,242,56,"ev"],[203,74,242,58],[203,76,242,62],[204,0,243,8],[204,14,243,12,"ev"],[204,16,243,14],[204,17,243,15,"id"],[204,19,243,12],[204,24,243,22],[204,30,243,26],[204,31,243,27,"_socketId"],[204,40,243,8],[204,42,243,38],[205,0,244,10],[206,0,245,9],[208,0,246,8],[208,10,246,8],[208,16,246,12],[208,17,246,13,"readyState"],[208,27,246,8],[208,30,246,26],[208,36,246,30],[208,37,246,31,"CLOSED"],[208,43,246,8],[210,0,247,8],[210,10,247,8],[210,16,247,12],[210,17,247,13,"dispatchEvent"],[210,30,247,8],[210,31,248,10],[210,35,248,14,"WebSocketEvent"],[210,49,248,10],[210,50,248,29],[210,57,248,10],[210,59,248,38],[211,0,249,12,"code"],[211,12,249,12,"code"],[211,16,249,16],[211,18,249,18,"ev"],[211,20,249,20],[211,21,249,21,"code"],[211,25,248,38],[212,0,250,12,"reason"],[212,12,250,12,"reason"],[212,18,250,18],[212,20,250,20,"ev"],[212,22,250,22],[212,23,250,23,"reason"],[213,0,248,38],[213,11,248,10],[213,12,247,8],[215,0,253,8],[215,10,253,8],[215,16,253,12],[215,17,253,13,"_unregisterEvents"],[215,34,253,8],[217,0,254,8],[217,10,254,8],[217,16,254,12],[217,17,254,13,"close"],[217,22,254,8],[218,0,255,7],[218,9,242,6],[218,10,218,26],[218,12,256,6],[218,17,256,11,"_eventEmitter"],[218,30,256,6],[218,31,256,25,"addListener"],[218,42,256,6],[218,43,256,37],[218,60,256,6],[218,62,256,56],[218,72,256,56,"ev"],[218,74,256,58],[218,76,256,62],[219,0,257,8],[219,14,257,12,"ev"],[219,16,257,14],[219,17,257,15,"id"],[219,19,257,12],[219,24,257,22],[219,30,257,26],[219,31,257,27,"_socketId"],[219,40,257,8],[219,42,257,38],[220,0,258,10],[221,0,259,9],[223,0,260,8],[223,10,260,8],[223,16,260,12],[223,17,260,13,"readyState"],[223,27,260,8],[223,30,260,26],[223,36,260,30],[223,37,260,31,"CLOSED"],[223,43,260,8],[225,0,261,8],[225,10,261,8],[225,16,261,12],[225,17,261,13,"dispatchEvent"],[225,30,261,8],[225,31,262,10],[225,35,262,14,"WebSocketEvent"],[225,49,262,10],[225,50,262,29],[225,57,262,10],[225,59,262,38],[226,0,263,12,"message"],[226,12,263,12,"message"],[226,19,263,19],[226,21,263,21,"ev"],[226,23,263,23],[226,24,263,24,"message"],[227,0,262,38],[227,11,262,10],[227,12,261,8],[229,0,266,8],[229,10,266,8],[229,16,266,12],[229,17,266,13,"dispatchEvent"],[229,30,266,8],[229,31,267,10],[229,35,267,14,"WebSocketEvent"],[229,49,267,10],[229,50,267,29],[229,57,267,10],[229,59,267,38],[230,0,268,12,"message"],[230,12,268,12,"message"],[230,19,268,19],[230,21,268,21,"ev"],[230,23,268,23],[230,24,268,24,"message"],[231,0,267,38],[231,11,267,10],[231,12,266,8],[233,0,271,8],[233,10,271,8],[233,16,271,12],[233,17,271,13,"_unregisterEvents"],[233,34,271,8],[235,0,272,8],[235,10,272,8],[235,16,272,12],[235,17,272,13,"close"],[235,22,272,8],[236,0,273,7],[236,9,256,6],[236,10,218,26],[236,11,218,4],[237,0,275,3],[240,26,135,32],[241,0,136,4],[241,15,136,11],[241,20,136,16,"_binaryType"],[241,31,136,4],[242,0,137,3],[242,7],[243,24,139,17,"binaryType"],[243,34],[243,36,139,47],[244,0,140,4],[244,12,140,8,"binaryType"],[244,22,140,18],[244,27,140,23],[244,33,140,8],[244,37,140,33,"binaryType"],[244,47,140,43],[244,52,140,48],[244,65,140,4],[244,67,140,63],[245,0,141,6],[245,16,141,12],[245,20,141,16,"Error"],[245,25,141,12],[245,26,141,22],[245,77,141,12],[245,78,141,6],[246,0,142,5],[248,0,143,4],[248,12,143,8],[248,17,143,13,"_binaryType"],[248,28,143,8],[248,33,143,29],[248,39,143,8],[248,43,143,39,"binaryType"],[248,53,143,49],[248,58,143,54],[248,64,143,4],[248,66,143,62],[249,0,144,6,"invariant"],[249,10,144,6,"invariant"],[249,19,144,15],[249,20,145,8,"BlobManager"],[249,31,145,19],[249,32,145,20,"isAvailable"],[249,43,144,15],[249,45,146,8],[249,100,144,15],[249,101,144,6],[251,0,148,6],[251,14,148,10,"binaryType"],[251,24,148,20],[251,29,148,25],[251,35,148,6],[251,37,148,33],[252,0,149,8,"BlobManager"],[252,12,149,8,"BlobManager"],[252,23,149,19],[252,24,149,20,"addWebSocketHandler"],[252,43,149,8],[252,44,149,40],[252,49,149,45,"_socketId"],[252,58,149,8],[253,0,150,7],[253,11,148,6],[253,17,150,13],[254,0,151,8,"BlobManager"],[254,12,151,8,"BlobManager"],[254,23,151,19],[254,24,151,20,"removeWebSocketHandler"],[254,46,151,8],[254,47,151,43],[254,52,151,48,"_socketId"],[254,61,151,8],[255,0,152,7],[256,0,153,5],[258,0,154,4],[258,13,154,9,"_binaryType"],[258,24,154,4],[258,27,154,23,"binaryType"],[258,37,154,4],[259,0,155,3],[262,4,58,25,"EventTarget"],[262,15,58,36],[262,21,58,25],[262,30,58,40,"WEBSOCKET_EVENTS"],[262,46,58,25],[262,47],[264,0,58,6,"WebSocket"],[264,2,58,6,"WebSocket"],[264,11],[264,12,59,9,"CONNECTING"],[264,22],[264,25,59,30,"CONNECTING"],[264,35],[265,0,58,6,"WebSocket"],[265,2,58,6,"WebSocket"],[265,11],[265,12,60,9,"OPEN"],[265,16],[265,19,60,24,"OPEN"],[265,23],[266,0,58,6,"WebSocket"],[266,2,58,6,"WebSocket"],[266,11],[266,12,61,9,"CLOSING"],[266,19],[266,22,61,27,"CLOSING"],[266,29],[267,0,58,6,"WebSocket"],[267,2,58,6,"WebSocket"],[267,11],[267,12,62,9,"CLOSED"],[267,18],[267,21,62,26,"CLOSED"],[267,27],[268,0,278,0,"module"],[268,2,278,0,"module"],[268,8,278,6],[268,9,278,7,"exports"],[268,16,278,0],[268,19,278,17,"WebSocket"],[268,28,278,0]],"functionMap":{"names":["<global>","WebSocket","constructor","get__binaryType","set__binaryType","close","send","ping","_close","_unregisterEvents","_subscriptions.forEach$argument_0","_registerEvents","_eventEmitter.addListener$argument_1"],"mappings":"AAA;ACyD;EC2B;GDgD;EEE;GFE;EGE;GHgB;EIE;GJO;EKE;GLyB;EME;GNM;EOE;GPS;EQE;gCCC,eD;GRE;EUE;yDCE;ODc;sDCC;ODO;wDCC;ODa;wDCC;ODiB;GVE;CDC"}},"type":"js/module"}]}