{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"./ExponentAV","data":{"isAsync":false}},{"name":"./Audio/Recording","data":{"isAsync":false}},{"name":"./Audio/Sound","data":{"isAsync":false}},{"name":"./Audio/AudioAvailability","data":{"isAsync":false}},{"name":"./AV","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS: true,\n    INTERRUPTION_MODE_IOS_DO_NOT_MIX: true,\n    INTERRUPTION_MODE_IOS_DUCK_OTHERS: true,\n    INTERRUPTION_MODE_ANDROID_DO_NOT_MIX: true,\n    INTERRUPTION_MODE_ANDROID_DUCK_OTHERS: true,\n    setAudioModeAsync: true,\n    setIsEnabledAsync: true,\n    PitchCorrectionQuality: true\n  };\n  exports.setAudioModeAsync = setAudioModeAsync;\n  Object.defineProperty(exports, \"setIsEnabledAsync\", {\n    enumerable: true,\n    get: function get() {\n      return _AudioAvailability.setIsEnabledAsync;\n    }\n  });\n  Object.defineProperty(exports, \"PitchCorrectionQuality\", {\n    enumerable: true,\n    get: function get() {\n      return _AV.PitchCorrectionQuality;\n    }\n  });\n  exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS = exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX = exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./ExponentAV\"));\n\n  var _Recording = _$$_REQUIRE(_dependencyMap[3], \"./Audio/Recording\");\n\n  Object.keys(_Recording).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _Recording[key];\n      }\n    });\n  });\n\n  var _Sound = _$$_REQUIRE(_dependencyMap[4], \"./Audio/Sound\");\n\n  Object.keys(_Sound).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function get() {\n        return _Sound[key];\n      }\n    });\n  });\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[5], \"./Audio/AudioAvailability\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[6], \"./AV\");\n\n  var INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = 0;\n  exports.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS = INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS;\n  var INTERRUPTION_MODE_IOS_DO_NOT_MIX = 1;\n  exports.INTERRUPTION_MODE_IOS_DO_NOT_MIX = INTERRUPTION_MODE_IOS_DO_NOT_MIX;\n  var INTERRUPTION_MODE_IOS_DUCK_OTHERS = 2;\n  exports.INTERRUPTION_MODE_IOS_DUCK_OTHERS = INTERRUPTION_MODE_IOS_DUCK_OTHERS;\n  var INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = 1;\n  exports.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX = INTERRUPTION_MODE_ANDROID_DO_NOT_MIX;\n  var INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = 2;\n  exports.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS = INTERRUPTION_MODE_ANDROID_DUCK_OTHERS;\n\n  var _isValueValid = function _isValueValid(value, validValues) {\n    return validValues.filter(function (validValue) {\n      return validValue === value;\n    }).length > 0;\n  };\n\n  var _populateMissingKeys = function _populateMissingKeys(userAudioMode, defaultAudioMode) {\n    for (var key in defaultAudioMode) {\n      if (!userAudioMode.hasOwnProperty(key)) {\n        userAudioMode[key] = defaultAudioMode[key];\n      }\n    }\n\n    return userAudioMode;\n  };\n\n  var defaultMode = {\n    allowsRecordingIOS: false,\n    interruptionModeIOS: INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS,\n    playsInSilentModeIOS: false,\n    staysActiveInBackground: false,\n    interruptionModeAndroid: INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n    shouldDuckAndroid: true,\n    playThroughEarpieceAndroid: true\n  };\n  var currentAudioMode = null;\n\n  function getCurrentAudioMode() {\n    if (!currentAudioMode) {\n      return defaultMode;\n    }\n\n    return currentAudioMode;\n  }\n\n  function setAudioModeAsync(partialMode) {\n    var mode;\n    return _regenerator.default.async(function setAudioModeAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            mode = _populateMissingKeys(partialMode, getCurrentAudioMode());\n\n            if (_isValueValid(mode.interruptionModeIOS, [INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS, INTERRUPTION_MODE_IOS_DO_NOT_MIX, INTERRUPTION_MODE_IOS_DUCK_OTHERS])) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(\"\\\"interruptionModeIOS\\\" was set to an invalid value.\");\n\n          case 3:\n            if (_isValueValid(mode.interruptionModeAndroid, [INTERRUPTION_MODE_ANDROID_DO_NOT_MIX, INTERRUPTION_MODE_ANDROID_DUCK_OTHERS])) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"\\\"interruptionModeAndroid\\\" was set to an invalid value.\");\n\n          case 5:\n            if (!(typeof mode.allowsRecordingIOS !== 'boolean' || typeof mode.playsInSilentModeIOS !== 'boolean' || typeof mode.staysActiveInBackground !== 'boolean' || typeof mode.shouldDuckAndroid !== 'boolean' || typeof mode.playThroughEarpieceAndroid !== 'boolean')) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('\"allowsRecordingIOS\", \"playsInSilentModeIOS\", \"playThroughEarpieceAndroid\", \"staysActiveInBackground\" and \"shouldDuckAndroid\" must be booleans.');\n\n          case 7:\n            currentAudioMode = mode;\n            _context.next = 10;\n            return _regenerator.default.awrap(_ExponentAV.default.setAudioMode(mode));\n\n          case 10:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});","lineCount":158,"map":[[34,0,1,0],[36,0,2,0],[38,0,2,0],[39,0,2,0],[40,0,2,0],[41,0,2,0],[42,0,2,0],[43,0,2,0],[44,0,2,0],[45,0,2,0],[46,0,2,0],[47,0,2,0],[49,0,3,0],[51,0,3,0],[52,0,3,0],[53,0,3,0],[54,0,3,0],[55,0,3,0],[56,0,3,0],[57,0,3,0],[58,0,3,0],[59,0,3,0],[60,0,3,0],[62,0,4,0],[64,0,5,0],[66,0,6,7],[66,6,6,13,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[66,43,6,50],[66,46,6,53],[66,47,6,7],[68,0,7,7],[68,6,7,13,"INTERRUPTION_MODE_IOS_DO_NOT_MIX"],[68,38,7,45],[68,41,7,48],[68,42,7,7],[70,0,8,7],[70,6,8,13,"INTERRUPTION_MODE_IOS_DUCK_OTHERS"],[70,39,8,46],[70,42,8,49],[70,43,8,7],[72,0,9,7],[72,6,9,13,"INTERRUPTION_MODE_ANDROID_DO_NOT_MIX"],[72,42,9,49],[72,45,9,52],[72,46,9,7],[74,0,10,7],[74,6,10,13,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[74,43,10,50],[74,46,10,53],[74,47,10,7],[77,0,12,0],[77,6,12,6,"_isValueValid"],[77,19,12,19],[77,22,12,22],[77,31,12,6,"_isValueValid"],[77,44,12,22],[77,45,12,23,"value"],[77,50,12,22],[77,52,12,30,"validValues"],[77,63,12,22],[77,65,12,46],[78,0,13,4],[78,11,13,11,"validValues"],[78,22,13,22],[78,23,13,23,"filter"],[78,29,13,11],[78,30,13,30],[78,40,13,30,"validValue"],[78,50,13,40],[79,0,13,40],[79,13,13,44,"validValue"],[79,23,13,54],[79,28,13,59,"value"],[79,33,13,40],[80,0,13,40],[80,5,13,11],[80,7,13,66,"length"],[80,13,13,11],[80,16,13,75],[80,17,13,4],[81,0,14,1],[81,3,12,0],[83,0,15,0],[83,6,15,6,"_populateMissingKeys"],[83,26,15,26],[83,29,15,29],[83,38,15,6,"_populateMissingKeys"],[83,58,15,29],[83,59,15,30,"userAudioMode"],[83,72,15,29],[83,74,15,45,"defaultAudioMode"],[83,90,15,29],[83,92,15,66],[84,0,16,4],[84,9,16,9],[84,13,16,13,"key"],[84,16,16,4],[84,20,16,20,"defaultAudioMode"],[84,36,16,4],[84,38,16,38],[85,0,17,8],[85,10,17,12],[85,11,17,13,"userAudioMode"],[85,24,17,26],[85,25,17,27,"hasOwnProperty"],[85,39,17,13],[85,40,17,42,"key"],[85,43,17,13],[85,44,17,8],[85,46,17,48],[86,0,18,12,"userAudioMode"],[86,8,18,12,"userAudioMode"],[86,21,18,25],[86,22,18,26,"key"],[86,25,18,25],[86,26,18,12],[86,29,18,33,"defaultAudioMode"],[86,45,18,49],[86,46,18,50,"key"],[86,49,18,49],[86,50,18,12],[87,0,19,9],[88,0,20,5],[90,0,21,4],[90,11,21,11,"userAudioMode"],[90,24,21,4],[91,0,22,1],[91,3,15,0],[93,0,23,0],[93,6,23,6,"defaultMode"],[93,17,23,17],[93,20,23,20],[94,0,24,4,"allowsRecordingIOS"],[94,4,24,4,"allowsRecordingIOS"],[94,22,24,22],[94,24,24,24],[94,29,23,20],[95,0,25,4,"interruptionModeIOS"],[95,4,25,4,"interruptionModeIOS"],[95,23,25,23],[95,25,25,25,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[95,62,23,20],[96,0,26,4,"playsInSilentModeIOS"],[96,4,26,4,"playsInSilentModeIOS"],[96,24,26,24],[96,26,26,26],[96,31,23,20],[97,0,27,4,"staysActiveInBackground"],[97,4,27,4,"staysActiveInBackground"],[97,27,27,27],[97,29,27,29],[97,34,23,20],[98,0,28,4,"interruptionModeAndroid"],[98,4,28,4,"interruptionModeAndroid"],[98,27,28,27],[98,29,28,29,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[98,66,23,20],[99,0,29,4,"shouldDuckAndroid"],[99,4,29,4,"shouldDuckAndroid"],[99,21,29,21],[99,23,29,23],[99,27,23,20],[100,0,30,4,"playThroughEarpieceAndroid"],[100,4,30,4,"playThroughEarpieceAndroid"],[100,30,30,30],[100,32,30,32],[101,0,23,20],[101,3,23,0],[102,0,32,0],[102,6,32,4,"currentAudioMode"],[102,22,32,20],[102,25,32,23],[102,29,32,0],[104,0,33,0],[104,11,33,9,"getCurrentAudioMode"],[104,30,33,0],[104,33,33,31],[105,0,34,4],[105,8,34,8],[105,9,34,9,"currentAudioMode"],[105,25,34,4],[105,27,34,27],[106,0,35,8],[106,13,35,15,"defaultMode"],[106,24,35,8],[107,0,36,5],[109,0,37,4],[109,11,37,11,"currentAudioMode"],[109,27,37,4],[110,0,38,1],[112,0,39,7],[112,11,39,22,"setAudioModeAsync"],[112,28,39,7],[112,29,39,40,"partialMode"],[112,40,39,7],[113,0,39,7],[114,0,39,7],[115,0,39,7],[116,0,39,7],[117,0,39,7],[118,0,40,10,"mode"],[118,12,40,10,"mode"],[118,16,39,7],[118,19,40,17,"_populateMissingKeys"],[118,39,40,37],[118,40,40,38,"partialMode"],[118,51,40,37],[118,53,40,51,"getCurrentAudioMode"],[118,72,40,70],[118,74,40,37],[118,75,39,7],[120,0,39,7],[120,16,41,9,"_isValueValid"],[120,29,41,22],[120,30,41,23,"mode"],[120,34,41,27],[120,35,41,28,"interruptionModeIOS"],[120,54,41,22],[120,56,41,49],[120,57,42,8,"INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS"],[120,94,41,49],[120,96,43,8,"INTERRUPTION_MODE_IOS_DO_NOT_MIX"],[120,128,41,49],[120,130,44,8,"INTERRUPTION_MODE_IOS_DUCK_OTHERS"],[120,163,41,49],[120,164,41,22],[120,165,39,7],[121,0,39,7],[122,0,39,7],[123,0,39,7],[125,0,39,7],[125,18,46,14],[125,22,46,18,"Error"],[125,27,46,14],[125,83,39,7],[127,0,39,7],[128,0,39,7],[128,16,48,9,"_isValueValid"],[128,29,48,22],[128,30,48,23,"mode"],[128,34,48,27],[128,35,48,28,"interruptionModeAndroid"],[128,58,48,22],[128,60,48,53],[128,61,49,8,"INTERRUPTION_MODE_ANDROID_DO_NOT_MIX"],[128,97,48,53],[128,99,50,8,"INTERRUPTION_MODE_ANDROID_DUCK_OTHERS"],[128,136,48,53],[128,137,48,22],[128,138,39,7],[129,0,39,7],[130,0,39,7],[131,0,39,7],[133,0,39,7],[133,18,52,14],[133,22,52,18,"Error"],[133,27,52,14],[133,87,39,7],[135,0,39,7],[136,0,39,7],[136,18,54,8],[136,25,54,15,"mode"],[136,29,54,19],[136,30,54,20,"allowsRecordingIOS"],[136,48,54,8],[136,53,54,43],[136,62,54,8],[136,66,55,8],[136,73,55,15,"mode"],[136,77,55,19],[136,78,55,20,"playsInSilentModeIOS"],[136,98,55,8],[136,103,55,45],[136,112,54,8],[136,116,56,8],[136,123,56,15,"mode"],[136,127,56,19],[136,128,56,20,"staysActiveInBackground"],[136,151,56,8],[136,156,56,48],[136,165,54,8],[136,169,57,8],[136,176,57,15,"mode"],[136,180,57,19],[136,181,57,20,"shouldDuckAndroid"],[136,198,57,8],[136,203,57,42],[136,212,54,8],[136,216,58,8],[136,223,58,15,"mode"],[136,227,58,19],[136,228,58,20,"playThroughEarpieceAndroid"],[136,254,58,8],[136,259,58,51],[136,268,39,7],[137,0,39,7],[138,0,39,7],[139,0,39,7],[141,0,39,7],[141,18,59,14],[141,22,59,18,"Error"],[141,27,59,14],[141,28,59,24],[141,173,59,14],[141,174,39,7],[143,0,39,7],[144,0,61,4,"currentAudioMode"],[144,12,61,4,"currentAudioMode"],[144,28,61,20],[144,31,61,23,"mode"],[144,35,61,4],[145,0,39,7],[146,0,39,7],[146,46,62,17,"ExponentAV"],[146,66,62,28,"setAudioMode"],[146,78,62,17],[146,79,62,41,"mode"],[146,83,62,17],[146,84,39,7],[148,0,39,7],[149,0,39,7],[151,0,39,7],[152,0,39,7],[153,0,39,7],[154,0,39,7],[155,0,39,7],[156,0,39,7],[157,0,39,7]],"functionMap":{"names":["<global>","_isValueValid","validValues.filter$argument_0","_populateMissingKeys","getCurrentAudioMode","setAudioModeAsync"],"mappings":"AAA;sBCW;8BCC,kCD;CDC;6BGC;CHO;AIW;CJK;OKC;CLwB"}},"type":"js/module"}]}