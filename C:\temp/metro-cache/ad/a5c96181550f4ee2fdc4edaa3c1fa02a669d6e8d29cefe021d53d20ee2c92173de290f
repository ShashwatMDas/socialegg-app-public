{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}},{"name":"./RNGestureHandlerModule","data":{"isAsync":false}},{"name":"./State","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./RNGestureHandlerModule\"));\n\n  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./State\"));\n\n  var _stateToPropMappings;\n\n  function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') return node;\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n\n  var _NativeModules$UIMana = _reactNative.NativeModules.UIManager,\n      UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  UIManager.genericDirectEventTypes = _objectSpread({}, UIManager.genericDirectEventTypes, {}, customGHEventsConfig);\n\n  if (UIManager.getConstants) {\n    UIManager.getConstants().genericDirectEventTypes = _objectSpread({}, UIManager.getConstants().genericDirectEventTypes, {}, customGHEventsConfig);\n  }\n\n  var _UIManager$setJSRespo = UIManager.setJSResponder,\n      oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n      _UIManager$clearJSRes = UIManager.clearJSResponder,\n      oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var res = _objectSpread({}, defaults);\n\n    Object.keys(validProps).forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(handlerName) {\n    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      var _super = _createSuper(Handler);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _super.call(this, props);\n\n        _this._onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this._onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n            var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n            if (typeof _this.props[stateEventName] === 'function') {\n              _this.props[stateEventName](event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this._refHandler = function (node) {\n          _this._viewNode = node;\n\n          var child = _react.default.Children.only(_this.props.children);\n\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this._createGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n        };\n\n        _this._attachGestureHandler = function (newViewTag) {\n          _this._viewTag = newViewTag;\n\n          _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);\n        };\n\n        _this._updateGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);\n        };\n\n        _this._handlerTag = handlerTag++;\n        _this._config = {};\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this._handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this._handlerTag);\n\n          if (this._updateEnqueued) {\n            clearImmediate(this._updateEnqueued);\n          }\n\n          if (this.props.id) {\n            delete handlerIDToTag[this.props.id];\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          if (hasUnresolvedRefs(this.props)) {\n            this._updateEnqueued = setImmediate(function () {\n              _this2._updateEnqueued = null;\n\n              _this2._update();\n            });\n          }\n\n          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config));\n\n          this._attachGestureHandler(findNodeHandle(this._viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = findNodeHandle(this._viewNode);\n\n          if (this._viewTag !== viewTag) {\n            this._attachGestureHandler(viewTag);\n          }\n\n          this._update();\n        }\n      }, {\n        key: \"_update\",\n        value: function _update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          if (!(0, _areEqual.default)(this._config, newConfig)) {\n            this._updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = _objectSpread({}, this.props, {}, updates);\n\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          this._updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this._onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = this.props.onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this._onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = this.props.onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var child = _react.default.Children.only(this.props.children);\n\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = _react.default.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return _react.default.cloneElement(child, {\n            ref: this._refHandler,\n            collapsable: false,\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          }, grandChildren);\n        }\n      }]);\n      return Handler;\n    }(_react.default.Component);\n\n    Handler.displayName = handlerName;\n    Handler.propTypes = propTypes;\n    return Handler;\n  }\n});","lineCount":362,"map":[[21,0,1,0],[23,0,2,0],[25,0,8,0],[27,0,9,0],[29,0,10,0],[41,0,12,0],[41,11,12,9,"findNodeHandle"],[41,25,12,0],[41,26,12,24,"node"],[41,30,12,0],[41,32,12,30],[42,0,13,2],[42,8,13,6,"Platform"],[42,30,13,15,"OS"],[42,32,13,6],[42,37,13,22],[42,42,13,2],[42,44,13,29],[42,51,13,36,"node"],[42,55,13,29],[43,0,14,2],[43,11,14,9],[43,44,14,26,"node"],[43,48,14,9],[43,49,14,2],[44,0,15,1],[46,30,17,27,"NativeModules"],[46,56],[46,57,17,8,"UIManager"],[46,66],[47,6,17,8,"UIManager"],[47,15],[47,53,17,20],[47,55],[48,0,19,0],[48,6,19,6,"customGHEventsConfig"],[48,26,19,26],[48,29,19,29],[49,0,20,2,"onGestureHandlerEvent"],[49,4,20,2,"onGestureHandlerEvent"],[49,25,20,23],[49,27,20,25],[50,0,20,27,"registrationName"],[50,6,20,27,"registrationName"],[50,22,20,43],[50,24,20,45],[51,0,20,25],[51,5,19,29],[52,0,21,2,"onGestureHandlerStateChange"],[52,4,21,2,"onGestureHandlerStateChange"],[52,31,21,29],[52,33,21,31],[53,0,22,4,"registrationName"],[53,6,22,4,"registrationName"],[53,22,22,20],[53,24,22,22],[54,0,21,31],[55,0,19,29],[55,3,19,0],[56,0,30,0,"UIManager"],[56,2,30,0,"UIManager"],[56,11,30,9],[56,12,30,10,"genericDirectEventTypes"],[56,35,30,0],[56,56,31,5,"UIManager"],[56,65,31,14],[56,66,31,15,"genericDirectEventTypes"],[56,89,30,0],[56,95,32,5,"customGHEventsConfig"],[56,115,30,0],[58,0,37,0],[58,6,37,4,"UIManager"],[58,15,37,13],[58,16,37,14,"getConstants"],[58,28,37,0],[58,30,37,28],[59,0,38,2,"UIManager"],[59,4,38,2,"UIManager"],[59,13,38,11],[59,14,38,12,"getConstants"],[59,26,38,2],[59,29,38,27,"genericDirectEventTypes"],[59,52,38,2],[59,73,39,7,"UIManager"],[59,82,39,16],[59,83,39,17,"getConstants"],[59,95,39,7],[59,98,39,32,"genericDirectEventTypes"],[59,121,38,2],[59,127,40,7,"customGHEventsConfig"],[59,147,38,2],[60,0,42,1],[62,30,48,4,"UIManager"],[62,39],[62,40,46,2,"setJSResponder"],[62,54],[63,6,46,18,"oldSetJSResponder"],[63,23],[63,61,46,38],[63,73,46,44],[63,74,46,46],[63,75],[64,30,48,4,"UIManager"],[64,39],[64,40,47,2,"clearJSResponder"],[64,56],[65,6,47,20,"oldClearJSResponder"],[65,25],[65,63,47,42],[65,75,47,48],[65,76,47,50],[65,77],[67,0,49,0,"UIManager"],[67,2,49,0,"UIManager"],[67,11,49,9],[67,12,49,10,"setJSResponder"],[67,26,49,0],[67,29,49,27],[67,39,49,28,"tag"],[67,42,49,27],[67,44,49,33,"blockNativeResponder"],[67,64,49,27],[67,66,49,58],[68,0,50,2,"RNGestureHandlerModule"],[68,36,50,25,"handleSetJSResponder"],[68,56,50,2],[68,57,50,46,"tag"],[68,60,50,2],[68,62,50,51,"blockNativeResponder"],[68,82,50,2],[70,0,51,2,"oldSetJSResponder"],[70,4,51,2,"oldSetJSResponder"],[70,21,51,19],[70,22,51,20,"tag"],[70,25,51,19],[70,27,51,25,"blockNativeResponder"],[70,47,51,19],[70,48,51,2],[71,0,52,1],[71,3,49,0],[73,0,53,0,"UIManager"],[73,2,53,0,"UIManager"],[73,11,53,9],[73,12,53,10,"clearJSResponder"],[73,28,53,0],[73,31,53,29],[73,43,53,35],[74,0,54,2,"RNGestureHandlerModule"],[74,36,54,25,"handleClearJSResponder"],[74,58,54,2],[76,0,55,2,"oldClearJSResponder"],[76,4,55,2,"oldClearJSResponder"],[76,23,55,21],[77,0,56,1],[77,3,53,0],[79,0,58,0],[79,6,58,4,"handlerTag"],[79,16,58,14],[79,19,58,17],[79,20,58,0],[80,0,59,0],[80,6,59,6,"handlerIDToTag"],[80,20,59,20],[80,23,59,23],[80,25,59,0],[82,0,61,0],[82,11,61,9,"isConfigParam"],[82,24,61,0],[82,25,61,23,"param"],[82,30,61,0],[82,32,61,30,"name"],[82,36,61,0],[82,38,61,36],[83,0,64,2],[83,11,65,4,"param"],[83,16,65,9],[83,21,65,14,"undefined"],[83,30,65,4],[83,35,66,5,"param"],[83,40,66,10],[83,45,66,15,"Object"],[83,51,66,21],[83,52,66,22,"param"],[83,57,66,21],[83,58,66,5],[83,62,66,32],[83,64,66,34],[83,80,66,50,"param"],[83,85,66,32],[83,86,65,4],[83,91,67,4,"name"],[83,95,67,8],[83,100,67,13],[83,122,65,4],[83,126,68,4,"name"],[83,130,68,8],[83,135,68,13],[83,151,64,2],[84,0,70,1],[86,0,72,0],[86,11,72,9,"filterConfig"],[86,23,72,0],[86,24,72,22,"props"],[86,29,72,0],[86,31,72,29,"validProps"],[86,41,72,0],[86,43,72,56],[87,0,72,56],[87,8,72,41,"defaults"],[87,16,72,56],[87,87,72,52],[87,89,72,56],[89,0,73,2],[89,8,73,8,"res"],[89,11,73,11],[89,32,73,19,"defaults"],[89,40,73,11],[89,41,73,2],[91,0,74,2,"Object"],[91,4,74,2,"Object"],[91,10,74,8],[91,11,74,9,"keys"],[91,15,74,2],[91,16,74,14,"validProps"],[91,26,74,2],[91,28,74,26,"forEach"],[91,35,74,2],[91,36,74,34],[91,46,74,34,"key"],[91,49,74,37],[91,51,74,41],[92,0,75,4],[92,10,75,10,"value"],[92,15,75,15],[92,18,75,18,"props"],[92,23,75,23],[92,24,75,24,"key"],[92,27,75,23],[92,28,75,4],[94,0,76,4],[94,10,76,8,"isConfigParam"],[94,23,76,21],[94,24,76,22,"value"],[94,29,76,21],[94,31,76,29,"key"],[94,34,76,21],[94,35,76,4],[94,37,76,35],[95,0,77,6],[95,12,77,10,"value"],[95,18,77,15],[95,21,77,18,"props"],[95,26,77,23],[95,27,77,24,"key"],[95,30,77,23],[95,31,77,6],[97,0,78,6],[97,12,78,10,"key"],[97,15,78,13],[97,20,78,18],[97,42,78,10],[97,46,78,44,"key"],[97,49,78,47],[97,54,78,52],[97,63,78,6],[97,65,78,63],[98,0,79,8,"value"],[98,10,79,8,"value"],[98,16,79,13],[98,19,79,16,"transformIntoHandlerTags"],[98,43,79,40],[98,44,79,41,"props"],[98,49,79,46],[98,50,79,47,"key"],[98,53,79,46],[98,54,79,40],[98,55,79,8],[99,0,80,7],[99,9,78,6],[99,15,80,13],[99,19,80,17,"key"],[99,22,80,20],[99,27,80,25],[99,36,80,13],[99,38,80,36],[100,0,81,8],[100,14,81,12],[100,21,81,19,"value"],[100,27,81,12],[100,32,81,29],[100,40,81,8],[100,42,81,39],[101,0,82,10,"value"],[101,12,82,10,"value"],[101,18,82,15],[101,21,82,18],[102,0,82,20,"top"],[102,14,82,20,"top"],[102,17,82,23],[102,19,82,25,"value"],[102,25,82,18],[103,0,82,32,"left"],[103,14,82,32,"left"],[103,18,82,36],[103,20,82,38,"value"],[103,26,82,18],[104,0,82,45,"bottom"],[104,14,82,45,"bottom"],[104,20,82,51],[104,22,82,53,"value"],[104,28,82,18],[105,0,82,60,"right"],[105,14,82,60,"right"],[105,19,82,65],[105,21,82,67,"value"],[106,0,82,18],[106,13,82,10],[107,0,83,9],[108,0,84,7],[110,0,85,6,"res"],[110,8,85,6,"res"],[110,11,85,9],[110,12,85,10,"key"],[110,15,85,9],[110,16,85,6],[110,19,85,17,"value"],[110,25,85,6],[111,0,86,5],[112,0,87,3],[112,5,74,2],[113,0,88,2],[113,11,88,9,"res"],[113,14,88,2],[114,0,89,1],[116,0,91,0],[116,11,91,9,"transformIntoHandlerTags"],[116,35,91,0],[116,36,91,34,"handlerIDs"],[116,46,91,0],[116,48,91,46],[117,0,92,2],[117,8,92,6],[117,9,92,7,"Array"],[117,14,92,12],[117,15,92,13,"isArray"],[117,22,92,7],[117,23,92,21,"handlerIDs"],[117,33,92,7],[117,34,92,2],[117,36,92,34],[118,0,93,4,"handlerIDs"],[118,6,93,4,"handlerIDs"],[118,16,93,14],[118,19,93,17],[118,20,93,18,"handlerIDs"],[118,30,93,17],[118,31,93,4],[119,0,94,3],[121,0,96,2],[121,8,96,6,"Platform"],[121,30,96,15,"OS"],[121,32,96,6],[121,37,96,22],[121,42,96,2],[121,44,96,29],[122,0,97,4],[122,13,97,11,"handlerIDs"],[122,23,97,21],[122,24,97,22,"map"],[122,27,97,11],[122,28,97,26],[123,0,97,26],[123,12,97,29,"current"],[123,19,97,26],[123,27,97,29,"current"],[123,34,97,26],[124,0,97,26],[124,15,97,43,"current"],[124,22,97,26],[125,0,97,26],[125,7,97,11],[125,9,97,52,"filter"],[125,15,97,11],[125,16,97,59],[125,26,97,59,"handle"],[125,32,97,65],[126,0,97,65],[126,15,97,69,"handle"],[126,21,97,65],[127,0,97,65],[127,7,97,11],[127,8,97,4],[128,0,98,3],[130,0,100,2],[130,11,100,9,"handlerIDs"],[130,21,100,19],[130,22,101,5,"map"],[130,25,100,9],[130,26,102,6],[130,36,102,6,"handlerID"],[130,45,102,15],[131,0,102,15],[131,13,103,8,"handlerIDToTag"],[131,27,103,22],[131,28,103,23,"handlerID"],[131,37,103,22],[131,38,103,8],[131,42,104,9,"handlerID"],[131,51,104,18],[131,52,104,19,"current"],[131,59,104,9],[131,63,104,30,"handlerID"],[131,72,104,39],[131,73,104,40,"current"],[131,80,104,30],[131,81,104,48,"_handlerTag"],[131,92,103,8],[131,96,105,8],[131,97,105,9],[131,98,102,15],[132,0,102,15],[132,5,100,9],[132,7,107,5,"filter"],[132,13,100,9],[132,14,107,12],[132,24,107,12,"handlerTag"],[132,34,107,22],[133,0,107,22],[133,13,107,26,"handlerTag"],[133,23,107,36],[133,26,107,39],[133,27,107,22],[134,0,107,22],[134,5,100,9],[134,6,100,2],[135,0,108,1],[137,0,110,0],[137,11,110,9,"hasUnresolvedRefs"],[137,28,110,0],[137,29,110,27,"props"],[137,34,110,0],[137,36,110,34],[138,0,111,2],[138,8,111,8,"extract"],[138,15,111,15],[138,18,111,18],[138,27,111,8,"extract"],[138,34,111,18],[138,35,111,18,"refs"],[138,39,111,22],[138,41,111,26],[139,0,112,4],[139,10,112,8],[139,11,112,9,"Array"],[139,16,112,14],[139,17,112,15,"isArray"],[139,24,112,9],[139,25,112,23,"refs"],[139,29,112,9],[139,30,112,4],[139,32,112,30],[140,0,113,6],[140,15,113,13,"refs"],[140,19,113,17],[140,23,113,21,"refs"],[140,27,113,25],[140,28,113,26,"current"],[140,35,113,21],[140,40,113,38],[140,44,113,6],[141,0,114,5],[143,0,115,4],[143,13,115,11,"refs"],[143,17,115,15],[143,18,115,16,"some"],[143,22,115,11],[143,23,115,21],[143,33,115,21,"r"],[143,34,115,22],[144,0,115,22],[144,15,115,26,"r"],[144,16,115,27],[144,20,115,31,"r"],[144,21,115,32],[144,22,115,33,"current"],[144,29,115,31],[144,34,115,45],[144,38,115,22],[145,0,115,22],[145,7,115,11],[145,8,115,4],[146,0,116,3],[146,5,111,2],[148,0,117,2],[148,11,117,9,"extract"],[148,18,117,16],[148,19,117,17,"props"],[148,24,117,22],[148,25,117,23],[148,47,117,22],[148,48,117,16],[148,49,117,9],[148,53,117,51,"extract"],[148,60,117,58],[148,61,117,59,"props"],[148,66,117,64],[148,67,117,65],[148,76,117,64],[148,77,117,58],[148,78,117,2],[149,0,118,1],[151,0,120,0],[151,6,120,6,"stateToPropMappings"],[151,25,120,25],[151,108,121,3,"State"],[151,123,121,9,"BEGAN"],[151,128,120,25],[151,130,121,17],[151,139,120,25],[151,194,122,3,"State"],[151,209,122,9,"FAILED"],[151,215,120,25],[151,217,122,18],[151,227,120,25],[151,282,123,3,"State"],[151,297,123,9,"CANCELLED"],[151,306,120,25],[151,308,123,21],[151,321,120,25],[151,376,124,3,"State"],[151,391,124,9,"ACTIVE"],[151,397,120,25],[151,399,124,18],[151,412,120,25],[151,467,125,3,"State"],[151,482,125,9,"END"],[151,485,120,25],[151,487,125,15],[151,496,120,25],[151,520,120,0],[153,0,128,15],[153,11,128,24,"createHandler"],[153,24,128,15],[153,25,129,2,"handlerName"],[153,36,128,15],[153,38,134,2],[154,0,134,2],[154,8,130,2,"propTypes"],[154,17,134,2],[154,88,130,14],[154,90,134,2],[155,0,134,2],[155,8,131,2,"config"],[155,14,134,2],[155,85,131,11],[155,87,134,2],[156,0,134,2],[156,8,132,2,"transformProps"],[156,22,134,2],[157,0,134,2],[157,8,133,2,"customNativeProps"],[157,25,134,2],[157,96,133,22],[157,98,134,2],[159,0,134,2],[159,8,135,8,"Handler"],[159,15,134,2],[160,0,134,2],[162,0,134,2],[164,0,140,4],[164,23,140,16,"props"],[164,28,140,4],[164,30,140,23],[165,0,140,23],[167,0,140,23],[168,0,141,6],[168,34,141,12,"props"],[168,39,141,6],[170,0,140,23],[170,14,152,4,"_onGestureHandlerEvent"],[170,36,140,23],[170,39,152,29],[170,49,152,29,"event"],[170,54,152,34],[170,56,152,38],[171,0,153,6],[171,14,153,10,"event"],[171,19,153,15],[171,20,153,16,"nativeEvent"],[171,31,153,10],[171,32,153,28,"handlerTag"],[171,42,153,10],[171,47,153,43],[171,53,153,48,"_handlerTag"],[171,64,153,6],[171,66,153,61],[172,0,154,8],[172,18,154,13,"props"],[172,23,154,8],[172,24,154,19,"onGestureEvent"],[172,38,154,8],[172,42,154,37],[172,48,154,42,"props"],[172,53,154,37],[172,54,154,48,"onGestureEvent"],[172,68,154,37],[172,69,154,63,"event"],[172,74,154,37],[172,75,154,8],[173,0,155,7],[173,11,153,6],[173,17,155,13],[174,0,156,8],[174,18,156,13,"props"],[174,23,156,8],[174,24,156,19,"onGestureHandlerEvent"],[174,45,156,8],[174,49,157,10],[174,55,157,15,"props"],[174,60,157,10],[174,61,157,21,"onGestureHandlerEvent"],[174,82,157,10],[174,83,157,43,"event"],[174,88,157,10],[174,89,156,8],[175,0,158,7],[176,0,159,5],[176,9,140,23],[178,0,140,23],[178,14,161,4,"_onGestureHandlerStateChange"],[178,42,140,23],[178,45,161,35],[178,55,161,35,"event"],[178,60,161,40],[178,62,161,44],[179,0,162,6],[179,14,162,10,"event"],[179,19,162,15],[179,20,162,16,"nativeEvent"],[179,31,162,10],[179,32,162,28,"handlerTag"],[179,42,162,10],[179,47,162,43],[179,53,162,48,"_handlerTag"],[179,64,162,6],[179,66,162,61],[180,0,163,8],[180,18,163,13,"props"],[180,23,163,8],[180,24,163,19,"onHandlerStateChange"],[180,44,163,8],[180,48,164,10],[180,54,164,15,"props"],[180,59,164,10],[180,60,164,21,"onHandlerStateChange"],[180,80,164,10],[180,81,164,42,"event"],[180,86,164,10],[180,87,163,8],[181,0,166,8],[181,16,166,14,"stateEventName"],[181,30,166,28],[181,33,166,31,"stateToPropMappings"],[181,52,166,50],[181,53,166,51,"event"],[181,58,166,56],[181,59,166,57,"nativeEvent"],[181,70,166,51],[181,71,166,69,"state"],[181,76,166,50],[181,77,166,8],[183,0,167,8],[183,16,167,12],[183,23,167,19],[183,29,167,24,"props"],[183,34,167,19],[183,35,167,30,"stateEventName"],[183,49,167,19],[183,50,167,12],[183,55,167,50],[183,65,167,8],[183,67,167,62],[184,0,168,10],[184,20,168,15,"props"],[184,25,168,10],[184,26,168,21,"stateEventName"],[184,40,168,10],[184,42,168,37,"event"],[184,47,168,10],[185,0,169,9],[186,0,170,7],[186,11,162,6],[186,17,170,13],[187,0,171,8],[187,18,171,13,"props"],[187,23,171,8],[187,24,171,19,"onGestureHandlerStateChange"],[187,51,171,8],[187,55,172,10],[187,61,172,15,"props"],[187,66,172,10],[187,67,172,21,"onGestureHandlerStateChange"],[187,94,172,10],[187,95,172,49,"event"],[187,100,172,10],[187,101,171,8],[188,0,173,7],[189,0,174,5],[189,9,140,23],[191,0,140,23],[191,14,176,4,"_refHandler"],[191,25,140,23],[191,28,176,18],[191,38,176,18,"node"],[191,42,176,22],[191,44,176,26],[192,0,177,6],[192,16,177,11,"_viewNode"],[192,25,177,6],[192,28,177,23,"node"],[192,32,177,6],[194,0,179,6],[194,14,179,12,"child"],[194,19,179,17],[194,22,179,20,"React"],[194,37,179,26,"Children"],[194,45,179,20],[194,46,179,35,"only"],[194,50,179,20],[194,51,179,40],[194,57,179,45,"props"],[194,62,179,40],[194,63,179,51,"children"],[194,71,179,20],[194,72,179,6],[196,0,176,26],[196,14,180,14,"ref"],[196,17,176,26],[196,20,180,22,"child"],[196,25,176,26],[196,26,180,14,"ref"],[196,29,176,26],[198,0,181,6],[198,14,181,10,"ref"],[198,17,181,13],[198,22,181,18],[198,26,181,6],[198,28,181,24],[199,0,182,8],[199,16,182,12],[199,23,182,19,"ref"],[199,26,182,12],[199,31,182,27],[199,41,182,8],[199,43,182,39],[200,0,183,10,"ref"],[200,14,183,10,"ref"],[200,17,183,13],[200,18,183,14,"node"],[200,22,183,13],[200,23,183,10],[201,0,184,9],[201,13,182,8],[201,19,184,15],[202,0,185,10,"ref"],[202,14,185,10,"ref"],[202,17,185,13],[202,18,185,14,"current"],[202,25,185,10],[202,28,185,24,"node"],[202,32,185,10],[203,0,186,9],[204,0,187,7],[205,0,188,5],[205,9,140,23],[207,0,140,23],[207,14,190,4,"_createGestureHandler"],[207,35,140,23],[207,38,190,28],[207,48,190,28,"newConfig"],[207,57,190,37],[207,59,190,41],[208,0,191,6],[208,16,191,11,"_config"],[208,23,191,6],[208,26,191,21,"newConfig"],[208,35,191,6],[210,0,193,6,"RNGestureHandlerModule"],[210,42,193,29,"createGestureHandler"],[210,62,193,6],[210,63,194,8,"handlerName"],[210,74,193,6],[210,76,195,8],[210,82,195,13,"_handlerTag"],[210,93,193,6],[210,95,196,8,"newConfig"],[210,104,193,6],[211,0,198,5],[211,9,140,23],[213,0,140,23],[213,14,200,4,"_attachGestureHandler"],[213,35,140,23],[213,38,200,28],[213,48,200,28,"newViewTag"],[213,58,200,38],[213,60,200,42],[214,0,201,6],[214,16,201,11,"_viewTag"],[214,24,201,6],[214,27,201,22,"newViewTag"],[214,37,201,6],[216,0,203,6,"RNGestureHandlerModule"],[216,42,203,29,"attachGestureHandler"],[216,62,203,6],[216,63,203,50],[216,69,203,55,"_handlerTag"],[216,80,203,6],[216,82,203,68,"newViewTag"],[216,92,203,6],[217,0,204,5],[217,9,140,23],[219,0,140,23],[219,14,206,4,"_updateGestureHandler"],[219,35,140,23],[219,38,206,28],[219,48,206,28,"newConfig"],[219,57,206,37],[219,59,206,41],[220,0,207,6],[220,16,207,11,"_config"],[220,23,207,6],[220,26,207,21,"newConfig"],[220,35,207,6],[222,0,209,6,"RNGestureHandlerModule"],[222,42,209,29,"updateGestureHandler"],[222,62,209,6],[222,63,209,50],[222,69,209,55,"_handlerTag"],[222,80,209,6],[222,82,209,68,"newConfig"],[222,91,209,6],[223,0,210,5],[223,9,140,23],[225,0,142,6],[225,14,142,11,"_handlerTag"],[225,25,142,6],[225,28,142,25,"handlerTag"],[225,38,142,35],[225,40,142,6],[226,0,143,6],[226,14,143,11,"_config"],[226,21,143,6],[226,24,143,21],[226,26,143,6],[228,0,144,6],[228,12,144,10,"props"],[228,17,144,15],[228,18,144,16,"id"],[228,20,144,6],[228,22,144,20],[229,0,145,8],[229,14,145,12,"handlerIDToTag"],[229,28,145,26],[229,29,145,27,"props"],[229,34,145,32],[229,35,145,33,"id"],[229,37,145,26],[229,38,145,12],[229,43,145,41,"undefined"],[229,52,145,8],[229,54,145,52],[230,0,146,10],[230,18,146,16],[230,22,146,20,"Error"],[230,27,146,16],[230,51,146,46,"props"],[230,56,146,51],[230,57,146,52,"id"],[230,59,146,16],[230,86,146,10],[231,0,147,9],[233,0,148,8,"handlerIDToTag"],[233,10,148,8,"handlerIDToTag"],[233,24,148,22],[233,25,148,23,"props"],[233,30,148,28],[233,31,148,29,"id"],[233,33,148,22],[233,34,148,8],[233,37,148,35],[233,43,148,40,"_handlerTag"],[233,54,148,8],[234,0,149,7],[236,0,140,23],[237,0,150,5],[239,0,134,2],[240,0,134,2],[241,0,134,2],[241,47,212,27],[242,0,213,6,"RNGestureHandlerModule"],[242,42,213,29,"dropGestureHandler"],[242,60,213,6],[242,61,213,48],[242,66,213,53,"_handlerTag"],[242,77,213,6],[244,0,214,6],[244,14,214,10],[244,19,214,15,"_updateEnqueued"],[244,34,214,6],[244,36,214,32],[245,0,215,8,"clearImmediate"],[245,12,215,8,"clearImmediate"],[245,26,215,22],[245,27,215,23],[245,32,215,28,"_updateEnqueued"],[245,47,215,22],[245,48,215,8],[246,0,216,7],[248,0,217,6],[248,14,217,10],[248,19,217,15,"props"],[248,24,217,10],[248,25,217,21,"id"],[248,27,217,6],[248,29,217,25],[249,0,218,8],[249,19,218,15,"handlerIDToTag"],[249,33,218,29],[249,34,218,30],[249,39,218,35,"props"],[249,44,218,30],[249,45,218,41,"id"],[249,47,218,29],[249,48,218,8],[250,0,219,7],[251,0,220,5],[252,0,134,2],[253,0,134,2],[254,0,134,2],[254,44,222,24],[255,0,222,24],[257,0,223,6],[257,14,223,10,"hasUnresolvedRefs"],[257,31,223,27],[257,32,223,28],[257,37,223,33,"props"],[257,42,223,27],[257,43,223,6],[257,45,223,41],[258,0,230,8],[258,17,230,13,"_updateEnqueued"],[258,32,230,8],[258,35,230,31,"setImmediate"],[258,47,230,43],[258,48,230,44],[258,60,230,50],[259,0,231,10],[259,14,231,10],[259,20,231,14],[259,21,231,15,"_updateEnqueued"],[259,36,231,10],[259,39,231,33],[259,43,231,10],[261,0,232,10],[261,14,232,10],[261,20,232,14],[261,21,232,15,"_update"],[261,28,232,10],[262,0,233,9],[262,13,230,43],[262,14,230,8],[263,0,234,7],[265,0,236,6],[265,15,236,11,"_createGestureHandler"],[265,36,236,6],[265,37,237,8,"filterConfig"],[265,49,237,20],[265,50,238,10,"transformProps"],[265,64,238,24],[265,67,238,27,"transformProps"],[265,81,238,41],[265,82,238,42],[265,87,238,47,"props"],[265,92,238,41],[265,93,238,24],[265,96,238,56],[265,101,238,61,"props"],[265,106,237,20],[265,126,239,15],[265,131,239,20,"constructor"],[265,142,239,15],[265,143,239,32,"propTypes"],[265,152,237,20],[265,158,239,46,"customNativeProps"],[265,175,237,20],[265,178,240,10,"config"],[265,184,237,20],[265,185,236,6],[267,0,243,6],[267,15,243,11,"_attachGestureHandler"],[267,36,243,6],[267,37,243,33,"findNodeHandle"],[267,51,243,47],[267,52,243,48],[267,57,243,53,"_viewNode"],[267,66,243,47],[267,67,243,6],[268,0,244,5],[269,0,134,2],[270,0,134,2],[271,0,134,2],[271,45,246,25],[272,0,247,6],[272,14,247,12,"viewTag"],[272,21,247,19],[272,24,247,22,"findNodeHandle"],[272,38,247,36],[272,39,247,37],[272,44,247,42,"_viewNode"],[272,53,247,36],[272,54,247,6],[274,0,248,6],[274,14,248,10],[274,19,248,15,"_viewTag"],[274,27,248,10],[274,32,248,28,"viewTag"],[274,39,248,6],[274,41,248,37],[275,0,249,8],[275,17,249,13,"_attachGestureHandler"],[275,38,249,8],[275,39,249,35,"viewTag"],[275,46,249,8],[276,0,250,7],[278,0,251,6],[278,15,251,11,"_update"],[278,22,251,6],[279,0,252,5],[280,0,134,2],[281,0,134,2],[282,0,134,2],[282,34,254,14],[283,0,255,6],[283,14,255,12,"newConfig"],[283,23,255,21],[283,26,255,24,"filterConfig"],[283,38,255,36],[283,39,256,8,"transformProps"],[283,53,256,22],[283,56,256,25,"transformProps"],[283,70,256,39],[283,71,256,40],[283,76,256,45,"props"],[283,81,256,39],[283,82,256,22],[283,85,256,54],[283,90,256,59,"props"],[283,95,255,36],[283,115,257,13],[283,120,257,18,"constructor"],[283,131,257,13],[283,132,257,30,"propTypes"],[283,141,255,36],[283,147,257,44,"customNativeProps"],[283,164,255,36],[283,167,258,8,"config"],[283,173,255,36],[283,174,255,6],[285,0,260,6],[285,14,260,10],[285,15,260,11],[285,38,260,21],[285,43,260,26,"_config"],[285,50,260,11],[285,52,260,35,"newConfig"],[285,61,260,11],[285,62,260,6],[285,64,260,47],[286,0,261,8],[286,17,261,13,"_updateGestureHandler"],[286,38,261,8],[286,39,261,35,"newConfig"],[286,48,261,8],[287,0,262,7],[288,0,263,5],[289,0,134,2],[290,0,134,2],[291,0,134,2],[291,39,265,19,"updates"],[291,46,134,2],[291,48,265,28],[292,0,266,6],[292,14,266,12,"mergedProps"],[292,25,266,23],[292,46,266,31],[292,51,266,36,"props"],[292,56,266,23],[292,62,266,46,"updates"],[292,69,266,23],[292,70,266,6],[294,0,267,6],[294,14,267,12,"newConfig"],[294,23,267,21],[294,26,267,24,"filterConfig"],[294,38,267,36],[294,39,268,8,"transformProps"],[294,53,268,22],[294,56,268,25,"transformProps"],[294,70,268,39],[294,71,268,40,"mergedProps"],[294,82,268,39],[294,83,268,22],[294,86,268,55,"mergedProps"],[294,97,267,36],[294,117,269,13],[294,122,269,18,"constructor"],[294,133,269,13],[294,134,269,30,"propTypes"],[294,143,267,36],[294,149,269,44,"customNativeProps"],[294,166,267,36],[294,169,270,8,"config"],[294,175,267,36],[294,176,267,6],[296,0,272,6],[296,15,272,11,"_updateGestureHandler"],[296,36,272,6],[296,37,272,33,"newConfig"],[296,46,272,6],[297,0,273,5],[298,0,134,2],[299,0,134,2],[300,0,134,2],[300,33,275,13],[301,0,276,6],[301,14,276,10,"gestureEventHandler"],[301,33,276,29],[301,36,276,32],[301,41,276,37,"_onGestureHandlerEvent"],[301,63,276,6],[302,0,275,13],[302,28,277,56],[302,33,277,61,"props"],[302,38,275,13],[303,0,275,13],[303,14,277,14,"onGestureEvent"],[303,28,275,13],[303,43,277,14,"onGestureEvent"],[303,57,275,13],[304,0,275,13],[304,14,277,30,"onGestureHandlerEvent"],[304,35,275,13],[304,50,277,30,"onGestureHandlerEvent"],[304,71,275,13],[306,0,278,6],[306,14,278,10,"onGestureEvent"],[306,28,278,24],[306,32,278,28],[306,39,278,35,"onGestureEvent"],[306,53,278,28],[306,58,278,54],[306,68,278,6],[306,70,278,66],[307,0,282,8],[307,16,282,12,"onGestureHandlerEvent"],[307,37,282,8],[307,39,282,35],[308,0,283,10],[308,20,283,16],[308,24,283,20,"Error"],[308,29,283,16],[308,30,284,12],[308,103,283,16],[308,104,283,10],[309,0,286,9],[311,0,287,8,"gestureEventHandler"],[311,12,287,8,"gestureEventHandler"],[311,31,287,27],[311,34,287,30],[311,39,287,35,"props"],[311,44,287,30],[311,45,287,41,"onGestureEvent"],[311,59,287,8],[312,0,288,7],[312,11,278,6],[312,17,288,13],[313,0,289,8],[313,16,290,10,"onGestureHandlerEvent"],[313,37,290,31],[313,41,291,10],[313,48,291,17,"onGestureHandlerEvent"],[313,69,291,10],[313,74,291,43],[313,84,289,8],[313,86,292,10],[314,0,293,10],[314,20,293,16],[314,24,293,20,"Error"],[314,29,293,16],[314,30,294,12],[314,103,293,16],[314,104,293,10],[315,0,296,9],[316,0,297,7],[318,0,299,6],[318,14,299,10,"gestureStateEventHandler"],[318,38,299,34],[318,41,299,37],[318,46,299,42,"_onGestureHandlerStateChange"],[318,74,299,6],[319,0,275,13],[319,29,300,68],[319,34,300,73,"props"],[319,39,275,13],[320,0,275,13],[320,14,300,14,"onHandlerStateChange"],[320,34,275,13],[320,50,300,14,"onHandlerStateChange"],[320,70,275,13],[321,0,275,13],[321,14,300,36,"onGestureHandlerStateChange"],[321,41,275,13],[321,57,300,36,"onGestureHandlerStateChange"],[321,84,275,13],[323,0,301,6],[323,14,301,10,"onHandlerStateChange"],[323,34,301,30],[323,38,301,34],[323,45,301,41,"onHandlerStateChange"],[323,65,301,34],[323,70,301,66],[323,80,301,6],[323,82,301,78],[324,0,305,8],[324,16,305,12,"onGestureHandlerStateChange"],[324,43,305,8],[324,45,305,41],[325,0,306,10],[325,20,306,16],[325,24,306,20,"Error"],[325,29,306,16],[325,30,307,12],[325,103,306,16],[325,104,306,10],[326,0,309,9],[328,0,310,8,"gestureStateEventHandler"],[328,12,310,8,"gestureStateEventHandler"],[328,36,310,32],[328,39,310,35],[328,44,310,40,"props"],[328,49,310,35],[328,50,310,46,"onHandlerStateChange"],[328,70,310,8],[329,0,311,7],[329,11,301,6],[329,17,311,13],[330,0,312,8],[330,16,313,10,"onGestureHandlerStateChange"],[330,43,313,37],[330,47,314,10],[330,54,314,17,"onGestureHandlerStateChange"],[330,81,314,10],[330,86,314,49],[330,96,312,8],[330,98,315,10],[331,0,316,10],[331,20,316,16],[331,24,316,20,"Error"],[331,29,316,16],[331,30,317,12],[331,103,316,16],[331,104,316,10],[332,0,319,9],[333,0,320,7],[335,0,322,6],[335,14,322,12,"child"],[335,19,322,17],[335,22,322,20,"React"],[335,37,322,26,"Children"],[335,45,322,20],[335,46,322,35,"only"],[335,50,322,20],[335,51,322,40],[335,56,322,45,"props"],[335,61,322,40],[335,62,322,51,"children"],[335,70,322,20],[335,71,322,6],[337,0,323,6],[337,14,323,10,"grandChildren"],[337,27,323,23],[337,30,323,26,"child"],[337,35,323,31],[337,36,323,32,"props"],[337,41,323,26],[337,42,323,38,"children"],[337,50,323,6],[339,0,324,6],[339,14,325,8,"Touchable"],[339,37,325,18,"TOUCH_TARGET_DEBUG"],[339,55,325,8],[339,59,326,8,"child"],[339,64,326,13],[339,65,326,14,"type"],[339,69,325,8],[339,74,327,9,"child"],[339,79,327,14],[339,80,327,15,"type"],[339,84,327,9],[339,89,327,24],[339,113,327,9],[339,117,328,10,"child"],[339,122,328,15],[339,123,328,16,"type"],[339,127,328,10],[339,128,328,21,"name"],[339,132,328,10],[339,137,328,30],[339,143,327,9],[339,147,329,10,"child"],[339,152,329,15],[339,153,329,16,"type"],[339,157,329,10],[339,158,329,21,"displayName"],[339,169,329,10],[339,174,329,37],[339,180,325,8],[339,181,324,6],[339,183,330,8],[340,0,331,8,"grandChildren"],[340,12,331,8,"grandChildren"],[340,25,331,21],[340,28,331,24,"React"],[340,43,331,30,"Children"],[340,51,331,24],[340,52,331,39,"toArray"],[340,59,331,24],[340,60,331,47,"grandChildren"],[340,73,331,24],[340,74,331,8],[341,0,332,8,"grandChildren"],[341,12,332,8,"grandChildren"],[341,25,332,21],[341,26,332,22,"push"],[341,30,332,8],[341,31,333,10,"Touchable"],[341,54,333,20,"renderDebugView"],[341,69,333,10],[341,70,333,36],[342,0,334,12,"color"],[342,14,334,12,"color"],[342,19,334,17],[342,21,334,19],[342,40,333,36],[343,0,335,12,"hitSlop"],[343,14,335,12,"hitSlop"],[343,21,335,19],[343,23,335,21,"child"],[343,28,335,26],[343,29,335,27,"props"],[343,34,335,21],[343,35,335,33,"hitSlop"],[344,0,333,36],[344,13,333,10],[344,14,332,8],[345,0,338,7],[347,0,339,6],[347,17,339,13,"React"],[347,32,339,19,"cloneElement"],[347,44,339,13],[347,45,340,8,"child"],[347,50,339,13],[347,52,341,8],[348,0,342,10,"ref"],[348,12,342,10,"ref"],[348,15,342,13],[348,17,342,15],[348,22,342,20,"_refHandler"],[348,33,341,8],[349,0,343,10,"collapsable"],[349,12,343,10,"collapsable"],[349,23,343,21],[349,25,343,23],[349,30,341,8],[350,0,344,10,"onGestureHandlerEvent"],[350,12,344,10,"onGestureHandlerEvent"],[350,33,344,31],[350,35,344,33,"gestureEventHandler"],[350,54,341,8],[351,0,345,10,"onGestureHandlerStateChange"],[351,12,345,10,"onGestureHandlerStateChange"],[351,39,345,37],[351,41,345,39,"gestureStateEventHandler"],[352,0,341,8],[352,11,339,13],[352,13,347,8,"grandChildren"],[352,26,339,13],[352,27,339,6],[353,0,349,5],[354,0,134,2],[355,0,134,2],[356,0,134,2],[356,6,135,24,"React"],[356,21,135,30,"Component"],[356,30,134,2],[358,0,135,8,"Handler"],[358,4,135,8,"Handler"],[358,11,134,2],[358,12,136,11,"displayName"],[358,23,134,2],[358,26,136,25,"handlerName"],[358,37,134,2],[359,0,135,8,"Handler"],[359,4,135,8,"Handler"],[359,11,134,2],[359,12,138,11,"propTypes"],[359,21,134,2],[359,24,138,23,"propTypes"],[359,33,134,2],[360,0,351,2],[360,11,351,9,"Handler"],[360,18,351,2],[361,0,352,1]],"functionMap":{"names":["<global>","findNodeHandle","<anonymous>","UIManager.setJSResponder","UIManager.clearJSResponder","isConfigParam","filterConfig","Object.keys.forEach$argument_0","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#_onGestureHandlerEvent","Handler#_onGestureHandlerStateChange","Handler#_refHandler","Handler#_createGestureHandler","Handler#_attachGestureHandler","Handler#_updateGestureHandler","Handler#componentWillUnmount","Handler#componentDidMount","setImmediate$argument_0","Handler#componentDidUpdate","Handler#_update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACW;CDG;sCE+B,QF;0CEC,QF;2BGE;CHG;6BIC;CJG;AKK;CLS;AME;kCCE;GDa;CNE;AQE;0BCM,wBD,SE,gBF;MCK;UDG;YEE,4BF;CRC;AWE;kBCC;qBCI,4BD;GDC;CXE;ecU;ECO;ICK;KDU;6BEE;KFO;mCGE;KHa;kBIE;KJY;4BKE;KLQ;4BME;KNI;4BOE;KPI;IQE;KRQ;ISE;4CCQ;SDG;KTW;IWE;KXM;IYE;KZS;IaE;KbQ;IcE;Kd0E;GDC;CdE"}},"type":"js/module"}]}