{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"./YellowBoxWarning","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n\n  function _createForOfIteratorHelperLoose(o) { var i = 0; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } i = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return i.next.bind(i); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var YellowBoxWarning = _$$_REQUIRE(_dependencyMap[2], \"./YellowBoxWarning\");\n\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var registry = new Map();\n  var disabled = false;\n  var projection = new Map();\n  var updateTimeout = null;\n\n  function isWarningIgnored(warning) {\n    for (var _iterator = _createForOfIteratorHelperLoose(ignorePatterns), _step; !(_step = _iterator()).done;) {\n      var pattern = _step.value;\n\n      if (pattern instanceof RegExp && pattern.test(warning.message.content)) {\n        return true;\n      } else if (typeof pattern === 'string' && warning.message.content.includes(pattern)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handleUpdate() {\n    projection = new Map();\n\n    if (!disabled) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(registry), _step2; !(_step2 = _iterator2()).done;) {\n        var _ref = _step2.value;\n\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        var category = _ref2[0];\n        var warnings = _ref2[1];\n        var filtered = warnings.filter(function (warning) {\n          return !isWarningIgnored(warning);\n        });\n\n        if (filtered.length > 0) {\n          projection.set(category, filtered);\n        }\n      }\n    }\n\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n\n        for (var _iterator3 = _createForOfIteratorHelperLoose(observers), _step3; !(_step3 = _iterator3()).done;) {\n          var _ref3 = _step3.value;\n          var observer = _ref3.observer;\n          observer(projection);\n        }\n      });\n    }\n  }\n\n  var YellowBoxRegistry = {\n    add: function add(_ref4) {\n      var args = _ref4.args,\n          framesToPop = _ref4.framesToPop;\n\n      if (typeof args[0] === 'string' && args[0].startsWith('(ADVICE)')) {\n        return;\n      }\n\n      var _YellowBoxWarning$par = YellowBoxWarning.parse({\n        args: args,\n        framesToPop: framesToPop + 1\n      }),\n          category = _YellowBoxWarning$par.category,\n          message = _YellowBoxWarning$par.message,\n          stack = _YellowBoxWarning$par.stack;\n\n      var warnings = registry.get(category);\n\n      if (warnings == null) {\n        warnings = [];\n      }\n\n      warnings = [].concat(_toConsumableArray(warnings), [new YellowBoxWarning(message, stack)]);\n      registry.delete(category);\n      registry.set(category, warnings);\n      handleUpdate();\n    },\n    delete: function _delete(category) {\n      if (registry.has(category)) {\n        registry.delete(category);\n        handleUpdate();\n      }\n    },\n    clear: function clear() {\n      if (registry.size > 0) {\n        registry.clear();\n        handleUpdate();\n      }\n    },\n    addIgnorePatterns: function addIgnorePatterns(patterns) {\n      var newPatterns = patterns.filter(function (pattern) {\n        if (pattern instanceof RegExp) {\n          for (var _iterator4 = _createForOfIteratorHelperLoose(ignorePatterns.entries()), _step4; !(_step4 = _iterator4()).done;) {\n            var existingPattern = _step4.value;\n\n            if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        return !ignorePatterns.has(pattern);\n      });\n\n      if (newPatterns.length === 0) {\n        return;\n      }\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose(newPatterns), _step5; !(_step5 = _iterator5()).done;) {\n        var pattern = _step5.value;\n        ignorePatterns.add(pattern);\n      }\n\n      handleUpdate();\n    },\n    setDisabled: function setDisabled(value) {\n      if (value === disabled) {\n        return;\n      }\n\n      disabled = value;\n      handleUpdate();\n    },\n    isDisabled: function isDisabled() {\n      return disabled;\n    },\n    observe: function observe(observer) {\n      var subscription = {\n        observer: observer\n      };\n      observers.add(subscription);\n      observer(projection);\n      return {\n        unsubscribe: function unsubscribe() {\n          observers.delete(subscription);\n        }\n      };\n    }\n  };\n  module.exports = YellowBoxRegistry;\n});","lineCount":164,"map":[[2,0,11,0],[14,0,13,0],[14,6,13,6,"YellowBoxWarning"],[14,22,13,22],[14,25,13,25,"require"],[14,36,13,32],[14,77,13,0],[16,0,27,0],[16,6,27,6,"observers"],[16,15,27,42],[16,18,27,45],[16,22,27,49,"Set"],[16,25,27,45],[16,27,27,0],[17,0,28,0],[17,6,28,6,"ignorePatterns"],[17,20,28,40],[17,23,28,43],[17,27,28,47,"Set"],[17,30,28,43],[17,32,28,0],[18,0,29,0],[18,6,29,6,"registry"],[18,14,29,24],[18,17,29,27],[18,21,29,31,"Map"],[18,24,29,27],[18,26,29,0],[19,0,31,0],[19,6,31,4,"disabled"],[19,14,31,12],[19,17,31,15],[19,22,31,0],[20,0,32,0],[20,6,32,4,"projection"],[20,16,32,14],[20,19,32,17],[20,23,32,21,"Map"],[20,26,32,17],[20,28,32,0],[21,0,33,0],[21,6,33,4,"updateTimeout"],[21,19,33,17],[21,22,33,20],[21,26,33,0],[23,0,35,0],[23,11,35,9,"isWarningIgnored"],[23,27,35,0],[23,28,35,26,"warning"],[23,35,35,0],[23,37,35,62],[24,0,36,2],[24,57,36,24,"ignorePatterns"],[24,71,36,2],[24,111,36,40],[25,0,36,40],[25,10,36,13,"pattern"],[25,17,36,40],[27,0,37,4],[27,10,37,8,"pattern"],[27,17,37,15],[27,29,37,27,"RegExp"],[27,35,37,8],[27,39,37,37,"pattern"],[27,46,37,44],[27,47,37,45,"test"],[27,51,37,37],[27,52,37,50,"warning"],[27,59,37,57],[27,60,37,58,"message"],[27,67,37,50],[27,68,37,66,"content"],[27,75,37,37],[27,76,37,4],[27,78,37,76],[28,0,38,6],[28,15,38,13],[28,19,38,6],[29,0,39,5],[29,7,37,4],[29,13,39,11],[29,17,40,6],[29,24,40,13,"pattern"],[29,31,40,6],[29,36,40,25],[29,44,40,6],[29,48,41,6,"warning"],[29,55,41,13],[29,56,41,14,"message"],[29,63,41,6],[29,64,41,22,"content"],[29,71,41,6],[29,72,41,30,"includes"],[29,80,41,6],[29,81,41,39,"pattern"],[29,88,41,6],[29,89,39,11],[29,91,42,6],[30,0,43,6],[30,15,43,13],[30,19,43,6],[31,0,44,5],[32,0,45,3],[34,0,46,2],[34,11,46,9],[34,16,46,2],[35,0,47,1],[37,0,49,0],[37,11,49,9,"handleUpdate"],[37,23,49,0],[37,26,49,30],[38,0,50,2,"projection"],[38,4,50,2,"projection"],[38,14,50,12],[38,17,50,15],[38,21,50,19,"Map"],[38,24,50,15],[38,26,50,2],[40,0,51,2],[40,8,51,6],[40,9,51,7,"disabled"],[40,17,51,2],[40,19,51,17],[41,0,52,4],[41,60,52,39,"registry"],[41,68,52,4],[41,111,52,49],[42,0,52,49],[44,0,52,49],[46,0,52,49],[46,12,52,16,"category"],[46,20,52,49],[47,0,52,49],[47,12,52,26,"warnings"],[47,20,52,49],[48,0,53,6],[48,12,53,12,"filtered"],[48,20,53,20],[48,23,53,23,"warnings"],[48,31,53,31],[48,32,53,32,"filter"],[48,38,53,23],[48,39,53,39],[48,49,53,39,"warning"],[48,56,53,46],[49,0,53,46],[49,17,53,50],[49,18,53,51,"isWarningIgnored"],[49,34,53,67],[49,35,53,68,"warning"],[49,42,53,67],[49,43,53,46],[50,0,53,46],[50,9,53,23],[50,10,53,6],[52,0,54,6],[52,12,54,10,"filtered"],[52,20,54,18],[52,21,54,19,"length"],[52,27,54,10],[52,30,54,28],[52,31,54,6],[52,33,54,31],[53,0,55,8,"projection"],[53,10,55,8,"projection"],[53,20,55,18],[53,21,55,19,"set"],[53,24,55,8],[53,25,55,23,"category"],[53,33,55,8],[53,35,55,33,"filtered"],[53,43,55,8],[54,0,56,7],[55,0,57,5],[56,0,58,3],[58,0,59,2],[58,8,59,6,"updateTimeout"],[58,21,59,19],[58,25,59,23],[58,29,59,2],[58,31,59,29],[59,0,60,4,"updateTimeout"],[59,6,60,4,"updateTimeout"],[59,19,60,17],[59,22,60,20,"setImmediate"],[59,34,60,32],[59,35,60,33],[59,47,60,39],[60,0,61,6,"updateTimeout"],[60,8,61,6,"updateTimeout"],[60,21,61,19],[60,24,61,22],[60,28,61,6],[62,0,62,6],[62,62,62,31,"observers"],[62,71,62,6],[62,114,62,42],[63,0,62,42],[64,0,62,42],[64,14,62,18,"observer"],[64,22,62,42],[64,31,62,18,"observer"],[64,39,62,42],[65,0,63,8,"observer"],[65,10,63,8,"observer"],[65,18,63,16],[65,19,63,17,"projection"],[65,29,63,16],[65,30,63,8],[66,0,64,7],[67,0,65,5],[67,7,60,32],[67,8,60,4],[68,0,66,3],[69,0,67,1],[71,0,69,0],[71,6,69,6,"YellowBoxRegistry"],[71,23,69,23],[71,26,69,26],[72,0,70,2,"add"],[72,4,70,2,"add"],[72,7,69,26],[72,29,76,13],[73,0,76,13],[73,10,71,4,"args"],[73,14,76,13],[73,23,71,4,"args"],[73,27,76,13],[74,0,76,13],[74,10,72,4,"framesToPop"],[74,21,76,13],[74,30,72,4,"framesToPop"],[74,41,76,13],[76,0,77,4],[76,10,77,8],[76,17,77,15,"args"],[76,21,77,19],[76,22,77,20],[76,23,77,19],[76,24,77,8],[76,29,77,27],[76,37,77,8],[76,41,77,39,"args"],[76,45,77,43],[76,46,77,44],[76,47,77,43],[76,48,77,39],[76,49,77,47,"startsWith"],[76,59,77,39],[76,60,77,58],[76,70,77,39],[76,71,77,4],[76,73,77,71],[77,0,78,6],[78,0,79,5],[80,0,76,13],[80,34,80,39,"YellowBoxWarning"],[80,50,80,55],[80,51,80,56,"parse"],[80,56,80,39],[80,57,80,62],[81,0,81,6,"args"],[81,8,81,6,"args"],[81,12,81,10],[81,14,81,6,"args"],[81,18,80,62],[82,0,82,6,"framesToPop"],[82,8,82,6,"framesToPop"],[82,19,82,17],[82,21,82,19,"framesToPop"],[82,32,82,30],[82,35,82,33],[83,0,80,62],[83,7,80,39],[83,8,76,13],[84,0,76,13],[84,10,80,11,"category"],[84,18,76,13],[84,43,80,11,"category"],[84,51,76,13],[85,0,76,13],[85,10,80,21,"message"],[85,17,76,13],[85,42,80,21,"message"],[85,49,76,13],[86,0,76,13],[86,10,80,30,"stack"],[86,15,76,13],[86,40,80,30,"stack"],[86,45,76,13],[88,0,85,4],[88,10,85,8,"warnings"],[88,18,85,16],[88,21,85,19,"registry"],[88,29,85,27],[88,30,85,28,"get"],[88,33,85,19],[88,34,85,32,"category"],[88,42,85,19],[88,43,85,4],[90,0,86,4],[90,10,86,8,"warnings"],[90,18,86,16],[90,22,86,20],[90,26,86,4],[90,28,86,26],[91,0,87,6,"warnings"],[91,8,87,6,"warnings"],[91,16,87,14],[91,19,87,17],[91,21,87,6],[92,0,88,5],[94,0,89,4,"warnings"],[94,6,89,4,"warnings"],[94,14,89,12],[94,46,89,19,"warnings"],[94,54,89,12],[94,58,89,29],[94,62,89,33,"YellowBoxWarning"],[94,78,89,29],[94,79,89,50,"message"],[94,86,89,29],[94,88,89,59,"stack"],[94,93,89,29],[94,94,89,12],[94,96,89,4],[95,0,91,4,"registry"],[95,6,91,4,"registry"],[95,14,91,12],[95,15,91,13,"delete"],[95,21,91,4],[95,22,91,20,"category"],[95,30,91,4],[96,0,92,4,"registry"],[96,6,92,4,"registry"],[96,14,92,12],[96,15,92,13,"set"],[96,18,92,4],[96,19,92,17,"category"],[96,27,92,4],[96,29,92,27,"warnings"],[96,37,92,4],[97,0,94,4,"handleUpdate"],[97,6,94,4,"handleUpdate"],[97,18,94,16],[98,0,95,3],[98,5,69,26],[99,0,97,2,"delete"],[99,4,97,2,"delete"],[99,10,69,26],[99,29,97,9,"category"],[99,37,69,26],[99,39,97,35],[100,0,98,4],[100,10,98,8,"registry"],[100,18,98,16],[100,19,98,17,"has"],[100,22,98,8],[100,23,98,21,"category"],[100,31,98,8],[100,32,98,4],[100,34,98,32],[101,0,99,6,"registry"],[101,8,99,6,"registry"],[101,16,99,14],[101,17,99,15,"delete"],[101,23,99,6],[101,24,99,22,"category"],[101,32,99,6],[102,0,100,6,"handleUpdate"],[102,8,100,6,"handleUpdate"],[102,20,100,18],[103,0,101,5],[104,0,102,3],[104,5,69,26],[105,0,104,2,"clear"],[105,4,104,2,"clear"],[105,9,69,26],[105,28,104,16],[106,0,105,4],[106,10,105,8,"registry"],[106,18,105,16],[106,19,105,17,"size"],[106,23,105,8],[106,26,105,24],[106,27,105,4],[106,29,105,27],[107,0,106,6,"registry"],[107,8,106,6,"registry"],[107,16,106,14],[107,17,106,15,"clear"],[107,22,106,6],[108,0,107,6,"handleUpdate"],[108,8,107,6,"handleUpdate"],[108,20,107,18],[109,0,108,5],[110,0,109,3],[110,5,69,26],[111,0,111,2,"addIgnorePatterns"],[111,4,111,2,"addIgnorePatterns"],[111,21,69,26],[111,50,111,20,"patterns"],[111,58,69,26],[111,60,111,67],[112,0,112,4],[112,10,112,10,"newPatterns"],[112,21,112,21],[112,24,112,24,"patterns"],[112,32,112,32],[112,33,112,33,"filter"],[112,39,112,24],[112,40,112,40],[112,50,112,41,"pattern"],[112,57,112,40],[112,59,112,68],[113,0,113,6],[113,12,113,10,"pattern"],[113,19,113,17],[113,31,113,29,"RegExp"],[113,37,113,6],[113,39,113,37],[114,0,114,8],[114,64,114,38,"ignorePatterns"],[114,78,114,52],[114,79,114,53,"entries"],[114,86,114,38],[114,88,114,8],[114,131,114,64],[115,0,114,64],[115,16,114,19,"existingPattern"],[115,31,114,64],[117,0,115,10],[117,16,116,12,"existingPattern"],[117,31,116,27],[117,43,116,39,"RegExp"],[117,49,116,12],[117,53,117,12,"existingPattern"],[117,68,117,27],[117,69,117,28,"toString"],[117,77,117,12],[117,84,117,43,"pattern"],[117,91,117,50],[117,92,117,51,"toString"],[117,100,117,43],[117,102,115,10],[117,104,118,12],[118,0,119,12],[118,21,119,19],[118,26,119,12],[119,0,120,11],[120,0,121,9],[122,0,122,8],[122,17,122,15],[122,21,122,8],[123,0,123,7],[125,0,124,6],[125,15,124,13],[125,16,124,14,"ignorePatterns"],[125,30,124,28],[125,31,124,29,"has"],[125,34,124,14],[125,35,124,33,"pattern"],[125,42,124,14],[125,43,124,6],[126,0,125,5],[126,7,112,24],[126,8,112,4],[128,0,126,4],[128,10,126,8,"newPatterns"],[128,21,126,19],[128,22,126,20,"length"],[128,28,126,8],[128,33,126,31],[128,34,126,4],[128,36,126,34],[129,0,127,6],[130,0,128,5],[132,0,129,4],[132,60,129,26,"newPatterns"],[132,71,129,4],[132,114,129,39],[133,0,129,39],[133,12,129,15,"pattern"],[133,19,129,39],[134,0,130,6,"ignorePatterns"],[134,8,130,6,"ignorePatterns"],[134,22,130,20],[134,23,130,21,"add"],[134,26,130,6],[134,27,130,25,"pattern"],[134,34,130,6],[135,0,131,5],[137,0,132,4,"handleUpdate"],[137,6,132,4,"handleUpdate"],[137,18,132,16],[138,0,133,3],[138,5,69,26],[139,0,135,2,"setDisabled"],[139,4,135,2,"setDisabled"],[139,15,69,26],[139,38,135,14,"value"],[139,43,69,26],[139,45,135,36],[140,0,136,4],[140,10,136,8,"value"],[140,15,136,13],[140,20,136,18,"disabled"],[140,28,136,4],[140,30,136,28],[141,0,137,6],[142,0,138,5],[144,0,139,4,"disabled"],[144,6,139,4,"disabled"],[144,14,139,12],[144,17,139,15,"value"],[144,22,139,4],[145,0,140,4,"handleUpdate"],[145,6,140,4,"handleUpdate"],[145,18,140,16],[146,0,141,3],[146,5,69,26],[147,0,143,2,"isDisabled"],[147,4,143,2,"isDisabled"],[147,14,69,26],[147,38,143,24],[148,0,144,4],[148,13,144,11,"disabled"],[148,21,144,4],[149,0,145,3],[149,5,69,26],[150,0,147,2,"observe"],[150,4,147,2,"observe"],[150,11,69,26],[150,30,147,10,"observer"],[150,38,69,26],[150,40,147,44],[151,0,148,4],[151,10,148,10,"subscription"],[151,22,148,22],[151,25,148,25],[152,0,148,26,"observer"],[152,8,148,26,"observer"],[152,16,148,34],[152,18,148,26,"observer"],[153,0,148,25],[153,7,148,4],[154,0,149,4,"observers"],[154,6,149,4,"observers"],[154,15,149,13],[154,16,149,14,"add"],[154,19,149,4],[154,20,149,18,"subscription"],[154,32,149,4],[155,0,150,4,"observer"],[155,6,150,4,"observer"],[155,14,150,12],[155,15,150,13,"projection"],[155,25,150,12],[155,26,150,4],[156,0,151,4],[156,13,151,11],[157,0,152,6,"unsubscribe"],[157,8,152,6,"unsubscribe"],[157,19,151,11],[157,44,152,26],[158,0,153,8,"observers"],[158,10,153,8,"observers"],[158,19,153,17],[158,20,153,18,"delete"],[158,26,153,8],[158,27,153,25,"subscription"],[158,39,153,8],[159,0,154,7],[160,0,151,11],[160,7,151,4],[161,0,156,3],[162,0,69,26],[162,3,69,0],[163,0,159,0,"module"],[163,2,159,0,"module"],[163,8,159,6],[163,9,159,7,"exports"],[163,16,159,0],[163,19,159,17,"YellowBoxRegistry"],[163,36,159,0]],"functionMap":{"names":["<global>","isWarningIgnored","handleUpdate","warnings.filter$argument_0","setImmediate$argument_0","add","_delete","clear","addIgnorePatterns","patterns.filter$argument_0","setDisabled","isDisabled","observe","unsubscribe"],"mappings":"AAA;ACkC;CDY;AEE;uCCI,qCD;iCEO;KFK;CFE;EKG;GLyB;EME;GNK;EOE;GPK;EQE;wCCC;KDa;GRQ;EUE;GVM;EWE;GXE;EYE;MCK;ODE;GZE"}},"type":"js/module"}]}