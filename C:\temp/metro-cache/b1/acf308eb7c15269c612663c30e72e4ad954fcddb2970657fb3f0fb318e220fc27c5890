{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/get","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"./AnimatedWithChildren","data":{"isAsync":false}},{"name":"../NativeAnimatedHelper","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var _get = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/get\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var AnimatedNode = _$$_REQUIRE(_dependencyMap[6], \"./AnimatedNode\");\n\n  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[7], \"./AnimatedWithChildren\");\n\n  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[8], \"../NativeAnimatedHelper\");\n\n  var AnimatedTransform = function (_AnimatedWithChildren) {\n    _inherits(AnimatedTransform, _AnimatedWithChildren);\n\n    var _super = _createSuper(AnimatedTransform);\n\n    function AnimatedTransform(transforms) {\n      var _this;\n\n      _classCallCheck(this, AnimatedTransform);\n\n      _this = _super.call(this);\n      _this._transforms = transforms;\n      return _this;\n    }\n\n    _createClass(AnimatedTransform, [{\n      key: \"__makeNative\",\n      value: function __makeNative() {\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__makeNative();\n            }\n          }\n        });\n\n        _get(_getPrototypeOf(AnimatedTransform.prototype), \"__makeNative\", this).call(this);\n      }\n    }, {\n      key: \"__getValue\",\n      value: function __getValue() {\n        return this._transforms.map(function (transform) {\n          var result = {};\n\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              result[key] = value.__getValue();\n            } else {\n              result[key] = value;\n            }\n          }\n\n          return result;\n        });\n      }\n    }, {\n      key: \"__getAnimatedValue\",\n      value: function __getAnimatedValue() {\n        return this._transforms.map(function (transform) {\n          var result = {};\n\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              result[key] = value.__getAnimatedValue();\n            } else {\n              result[key] = value;\n            }\n          }\n\n          return result;\n        });\n      }\n    }, {\n      key: \"__attach\",\n      value: function __attach() {\n        var _this2 = this;\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__addChild(_this2);\n            }\n          }\n        });\n      }\n    }, {\n      key: \"__detach\",\n      value: function __detach() {\n        var _this3 = this;\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              value.__removeChild(_this3);\n            }\n          }\n        });\n\n        _get(_getPrototypeOf(AnimatedTransform.prototype), \"__detach\", this).call(this);\n      }\n    }, {\n      key: \"__getNativeConfig\",\n      value: function __getNativeConfig() {\n        var transConfigs = [];\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof AnimatedNode) {\n              transConfigs.push({\n                type: 'animated',\n                property: key,\n                nodeTag: value.__getNativeTag()\n              });\n            } else {\n              transConfigs.push({\n                type: 'static',\n                property: key,\n                value: NativeAnimatedHelper.transformDataType(value)\n              });\n            }\n          }\n        });\n\n        NativeAnimatedHelper.validateTransform(transConfigs);\n        return {\n          type: 'transform',\n          transforms: transConfigs\n        };\n      }\n    }]);\n\n    return AnimatedTransform;\n  }(AnimatedWithChildren);\n\n  module.exports = AnimatedTransform;\n});","lineCount":163,"map":[[2,0,10,0],[20,0,12,0],[20,6,12,6,"AnimatedNode"],[20,18,12,18],[20,21,12,21,"require"],[20,32,12,28],[20,69,12,0],[22,0,13,0],[22,6,13,6,"AnimatedWithChildren"],[22,26,13,26],[22,29,13,29,"require"],[22,40,13,36],[22,85,13,0],[24,0,14,0],[24,6,14,6,"NativeAnimatedHelper"],[24,26,14,26],[24,29,14,29,"require"],[24,40,14,36],[24,86,14,0],[26,6,16,6,"AnimatedTransform"],[26,23],[31,0,19,2],[31,31,19,14,"transforms"],[31,41,19,2],[31,43,19,50],[32,0,19,50],[34,0,19,50],[36,0,20,4],[37,0,21,4],[37,12,21,9,"_transforms"],[37,23,21,4],[37,26,21,23,"transforms"],[37,36,21,4],[38,0,19,50],[39,0,22,3],[43,37,24,17],[44,0,25,4],[44,13,25,9,"_transforms"],[44,24,25,4],[44,25,25,21,"forEach"],[44,32,25,4],[44,33,25,29],[44,43,25,29,"transform"],[44,52,25,38],[44,54,25,42],[45,0,26,6],[45,15,26,11],[45,19,26,17,"key"],[45,22,26,6],[45,26,26,24,"transform"],[45,35,26,6],[45,37,26,35],[46,0,27,8],[46,16,27,14,"value"],[46,21,27,19],[46,24,27,22,"transform"],[46,33,27,31],[46,34,27,32,"key"],[46,37,27,31],[46,38,27,8],[48,0,28,8],[48,16,28,12,"value"],[48,21,28,17],[48,33,28,29,"AnimatedNode"],[48,45,28,8],[48,47,28,43],[49,0,29,10,"value"],[49,14,29,10,"value"],[49,19,29,15],[49,20,29,16,"__makeNative"],[49,32,29,10],[50,0,30,9],[51,0,31,7],[52,0,32,5],[52,9,25,4],[54,0,33,4],[55,0,34,3],[58,35,36,39],[59,0,37,4],[59,15,37,11],[59,20,37,16,"_transforms"],[59,31,37,11],[59,32,37,28,"map"],[59,35,37,11],[59,36,37,32],[59,46,37,32,"transform"],[59,55,37,41],[59,57,37,45],[60,0,38,6],[60,14,38,12,"result"],[60,20,38,18],[60,23,38,21],[60,25,38,6],[62,0,39,6],[62,15,39,11],[62,19,39,17,"key"],[62,22,39,6],[62,26,39,24,"transform"],[62,35,39,6],[62,37,39,35],[63,0,40,8],[63,16,40,14,"value"],[63,21,40,19],[63,24,40,22,"transform"],[63,33,40,31],[63,34,40,32,"key"],[63,37,40,31],[63,38,40,8],[65,0,41,8],[65,16,41,12,"value"],[65,21,41,17],[65,33,41,29,"AnimatedNode"],[65,45,41,8],[65,47,41,43],[66,0,42,10,"result"],[66,14,42,10,"result"],[66,20,42,16],[66,21,42,17,"key"],[66,24,42,16],[66,25,42,10],[66,28,42,24,"value"],[66,33,42,29],[66,34,42,30,"__getValue"],[66,44,42,24],[66,46,42,10],[67,0,43,9],[67,13,41,8],[67,19,43,15],[68,0,44,10,"result"],[68,14,44,10,"result"],[68,20,44,16],[68,21,44,17,"key"],[68,24,44,16],[68,25,44,10],[68,28,44,24,"value"],[68,33,44,10],[69,0,45,9],[70,0,46,7],[72,0,47,6],[72,17,47,13,"result"],[72,23,47,6],[73,0,48,5],[73,9,37,11],[73,10,37,4],[74,0,49,3],[77,43,51,47],[78,0,52,4],[78,15,52,11],[78,20,52,16,"_transforms"],[78,31,52,11],[78,32,52,28,"map"],[78,35,52,11],[78,36,52,32],[78,46,52,32,"transform"],[78,55,52,41],[78,57,52,45],[79,0,53,6],[79,14,53,12,"result"],[79,20,53,18],[79,23,53,21],[79,25,53,6],[81,0,54,6],[81,15,54,11],[81,19,54,17,"key"],[81,22,54,6],[81,26,54,24,"transform"],[81,35,54,6],[81,37,54,35],[82,0,55,8],[82,16,55,14,"value"],[82,21,55,19],[82,24,55,22,"transform"],[82,33,55,31],[82,34,55,32,"key"],[82,37,55,31],[82,38,55,8],[84,0,56,8],[84,16,56,12,"value"],[84,21,56,17],[84,33,56,29,"AnimatedNode"],[84,45,56,8],[84,47,56,43],[85,0,57,10,"result"],[85,14,57,10,"result"],[85,20,57,16],[85,21,57,17,"key"],[85,24,57,16],[85,25,57,10],[85,28,57,24,"value"],[85,33,57,29],[85,34,57,30,"__getAnimatedValue"],[85,52,57,24],[85,54,57,10],[86,0,58,9],[86,13,56,8],[86,19,58,15],[87,0,60,10,"result"],[87,14,60,10,"result"],[87,20,60,16],[87,21,60,17,"key"],[87,24,60,16],[87,25,60,10],[87,28,60,24,"value"],[87,33,60,10],[88,0,61,9],[89,0,62,7],[91,0,63,6],[91,17,63,13,"result"],[91,23,63,6],[92,0,64,5],[92,9,52,11],[92,10,52,4],[93,0,65,3],[96,33,67,19],[97,0,67,19],[99,0,68,4],[99,13,68,9,"_transforms"],[99,24,68,4],[99,25,68,21,"forEach"],[99,32,68,4],[99,33,68,29],[99,43,68,29,"transform"],[99,52,68,38],[99,54,68,42],[100,0,69,6],[100,15,69,11],[100,19,69,17,"key"],[100,22,69,6],[100,26,69,24,"transform"],[100,35,69,6],[100,37,69,35],[101,0,70,8],[101,16,70,14,"value"],[101,21,70,19],[101,24,70,22,"transform"],[101,33,70,31],[101,34,70,32,"key"],[101,37,70,31],[101,38,70,8],[103,0,71,8],[103,16,71,12,"value"],[103,21,71,17],[103,33,71,29,"AnimatedNode"],[103,45,71,8],[103,47,71,43],[104,0,72,10,"value"],[104,14,72,10,"value"],[104,19,72,15],[104,20,72,16,"__addChild"],[104,30,72,10],[104,31,72,27],[104,37,72,10],[105,0,73,9],[106,0,74,7],[107,0,75,5],[107,9,68,4],[108,0,76,3],[111,33,78,19],[112,0,78,19],[114,0,79,4],[114,13,79,9,"_transforms"],[114,24,79,4],[114,25,79,21,"forEach"],[114,32,79,4],[114,33,79,29],[114,43,79,29,"transform"],[114,52,79,38],[114,54,79,42],[115,0,80,6],[115,15,80,11],[115,19,80,17,"key"],[115,22,80,6],[115,26,80,24,"transform"],[115,35,80,6],[115,37,80,35],[116,0,81,8],[116,16,81,14,"value"],[116,21,81,19],[116,24,81,22,"transform"],[116,33,81,31],[116,34,81,32,"key"],[116,37,81,31],[116,38,81,8],[118,0,82,8],[118,16,82,12,"value"],[118,21,82,17],[118,33,82,29,"AnimatedNode"],[118,45,82,8],[118,47,82,43],[119,0,83,10,"value"],[119,14,83,10,"value"],[119,19,83,15],[119,20,83,16,"__removeChild"],[119,33,83,10],[119,34,83,30],[119,40,83,10],[120,0,84,9],[121,0,85,7],[122,0,86,5],[122,9,79,4],[124,0,87,4],[125,0,88,3],[128,42,90,27],[129,0,91,4],[129,12,91,10,"transConfigs"],[129,24,91,22],[129,27,91,25],[129,29,91,4],[131,0,93,4],[131,13,93,9,"_transforms"],[131,24,93,4],[131,25,93,21,"forEach"],[131,32,93,4],[131,33,93,29],[131,43,93,29,"transform"],[131,52,93,38],[131,54,93,42],[132,0,94,6],[132,15,94,11],[132,19,94,17,"key"],[132,22,94,6],[132,26,94,24,"transform"],[132,35,94,6],[132,37,94,35],[133,0,95,8],[133,16,95,14,"value"],[133,21,95,19],[133,24,95,22,"transform"],[133,33,95,31],[133,34,95,32,"key"],[133,37,95,31],[133,38,95,8],[135,0,96,8],[135,16,96,12,"value"],[135,21,96,17],[135,33,96,29,"AnimatedNode"],[135,45,96,8],[135,47,96,43],[136,0,97,10,"transConfigs"],[136,14,97,10,"transConfigs"],[136,26,97,22],[136,27,97,23,"push"],[136,31,97,10],[136,32,97,28],[137,0,98,12,"type"],[137,16,98,12,"type"],[137,20,98,16],[137,22,98,18],[137,32,97,28],[138,0,99,12,"property"],[138,16,99,12,"property"],[138,24,99,20],[138,26,99,22,"key"],[138,29,97,28],[139,0,100,12,"nodeTag"],[139,16,100,12,"nodeTag"],[139,23,100,19],[139,25,100,21,"value"],[139,30,100,26],[139,31,100,27,"__getNativeTag"],[139,45,100,21],[140,0,97,28],[140,15,97,10],[141,0,102,9],[141,13,96,8],[141,19,102,15],[142,0,103,10,"transConfigs"],[142,14,103,10,"transConfigs"],[142,26,103,22],[142,27,103,23,"push"],[142,31,103,10],[142,32,103,28],[143,0,104,12,"type"],[143,16,104,12,"type"],[143,20,104,16],[143,22,104,18],[143,30,103,28],[144,0,105,12,"property"],[144,16,105,12,"property"],[144,24,105,20],[144,26,105,22,"key"],[144,29,103,28],[145,0,106,12,"value"],[145,16,106,12,"value"],[145,21,106,17],[145,23,106,19,"NativeAnimatedHelper"],[145,43,106,39],[145,44,106,40,"transformDataType"],[145,61,106,19],[145,62,106,58,"value"],[145,67,106,19],[146,0,103,28],[146,15,103,10],[147,0,108,9],[148,0,109,7],[149,0,110,5],[149,9,93,4],[151,0,112,4,"NativeAnimatedHelper"],[151,8,112,4,"NativeAnimatedHelper"],[151,28,112,24],[151,29,112,25,"validateTransform"],[151,46,112,4],[151,47,112,43,"transConfigs"],[151,59,112,4],[152,0,113,4],[152,15,113,11],[153,0,114,6,"type"],[153,10,114,6,"type"],[153,14,114,10],[153,16,114,12],[153,27,113,11],[154,0,115,6,"transforms"],[154,10,115,6,"transforms"],[154,20,115,16],[154,22,115,18,"transConfigs"],[155,0,113,11],[155,9,113,4],[156,0,117,3],[160,4,16,32,"AnimatedWithChildren"],[160,24],[162,0,120,0,"module"],[162,2,120,0,"module"],[162,8,120,6],[162,9,120,7,"exports"],[162,16,120,0],[162,19,120,17,"AnimatedTransform"],[162,36,120,0]],"functionMap":{"names":["<global>","AnimatedTransform","constructor","__makeNative","_transforms.forEach$argument_0","__getValue","_transforms.map$argument_0","__getAnimatedValue","__attach","__detach","__getNativeConfig"],"mappings":"AAA;ACe;ECG;GDG;EEE;6BCC;KDO;GFE;EIE;gCCC;KDW;GJC;EME;gCDC;KCY;GNC;EOE;6BJC;KIO;GPC;EQE;6BLC;KKO;GRE;ESE;6BNG;KMiB;GTO;CDC"}},"type":"js/module"}]}