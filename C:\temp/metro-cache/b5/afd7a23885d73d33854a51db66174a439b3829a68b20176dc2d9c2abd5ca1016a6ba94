{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"color","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./DarkTheme","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = overlay;\n\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"color\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _DarkTheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./DarkTheme\"));\n\n  function overlay() {\n    var elevation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var surfaceColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DarkTheme.default.colors.surface;\n\n    if (elevation instanceof _reactNative.Animated.Value) {\n      var inputRange = [0, 1, 2, 3, 8, 24];\n      return elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (elevation) {\n          return calculateColor(surfaceColor, elevation);\n        })\n      });\n    }\n\n    return calculateColor(surfaceColor, elevation);\n  }\n\n  function calculateColor(surfaceColor, elevation) {\n    var overlayTransparency;\n\n    if (elevation >= 1 && elevation <= 24) {\n      overlayTransparency = elevationOverlayTransparency[elevation];\n    } else if (elevation > 24) {\n      overlayTransparency = elevationOverlayTransparency[24];\n    } else {\n      overlayTransparency = elevationOverlayTransparency[1];\n    }\n\n    return (0, _color.default)(surfaceColor).mix((0, _color.default)('white'), overlayTransparency * 0.01).hex();\n  }\n\n  var elevationOverlayTransparency = {\n    1: 5,\n    2: 7,\n    3: 8,\n    4: 9,\n    5: 10,\n    6: 11,\n    7: 11.5,\n    8: 12,\n    9: 12.5,\n    10: 13,\n    11: 13.5,\n    12: 14,\n    13: 14.25,\n    14: 14.5,\n    15: 14.75,\n    16: 15,\n    17: 15.12,\n    18: 15.24,\n    19: 15.36,\n    20: 15.48,\n    21: 15.6,\n    22: 15.72,\n    23: 15.84,\n    24: 16\n  };\n});","lineCount":72,"map":[[2,0,1,0],[2,6,1,4,"_interopRequireDefault"],[2,28,1,26],[2,31,1,27,"require"],[2,42,1,34],[2,109,1,0],[4,0,1,83,"Object"],[4,2,1,83,"Object"],[4,8,1,89],[4,9,1,90,"defineProperty"],[4,23,1,83],[4,24,1,105,"exports"],[4,31,1,83],[4,33,1,113],[4,45,1,83],[4,47,1,126],[5,0,1,127,"value"],[5,4,1,127,"value"],[5,9,1,132],[5,11,1,133],[6,0,1,126],[6,3,1,83],[7,0,1,140,"exports"],[7,2,1,140,"exports"],[7,9,1,147],[7,10,1,148,"default"],[7,17,1,140],[7,20,1,156,"overlay"],[7,27,1,140],[9,0,1,164],[9,6,1,168,"_color"],[9,12,1,174],[9,15,1,175,"_interopRequireDefault"],[9,37,1,197],[9,38,1,198,"require"],[9,49,1,205],[9,77,1,197],[9,78,1,164],[11,0,1,216],[11,6,1,220,"_reactNative"],[11,18,1,232],[11,21,1,233,"require"],[11,32,1,240],[11,67,1,216],[13,0,1,257],[13,6,1,261,"_DarkTheme"],[13,16,1,271],[13,19,1,272,"_interopRequireDefault"],[13,41,1,294],[13,42,1,295,"require"],[13,53,1,302],[13,87,1,294],[13,88,1,257],[15,0,1,319],[15,11,1,328,"overlay"],[15,18,1,319],[15,21,1,337],[16,0,1,338],[16,8,1,342,"elevation"],[16,17,1,351],[16,20,1,352,"arguments"],[16,29,1,361],[16,30,1,362,"length"],[16,36,1,352],[16,39,1,369],[16,40,1,352],[16,44,1,372,"arguments"],[16,53,1,381],[16,54,1,382],[16,55,1,381],[16,56,1,372],[16,61,1,387,"undefined"],[16,70,1,352],[16,73,1,397,"arguments"],[16,82,1,406],[16,83,1,407],[16,84,1,406],[16,85,1,352],[16,88,1,410],[16,89,1,338],[17,0,1,412],[17,8,1,416,"surfaceColor"],[17,20,1,428],[17,23,1,429,"arguments"],[17,32,1,438],[17,33,1,439,"length"],[17,39,1,429],[17,42,1,446],[17,43,1,429],[17,47,1,449,"arguments"],[17,56,1,458],[17,57,1,459],[17,58,1,458],[17,59,1,449],[17,64,1,464,"undefined"],[17,73,1,429],[17,76,1,474,"arguments"],[17,85,1,483],[17,86,1,484],[17,87,1,483],[17,88,1,429],[17,91,1,487,"_DarkTheme"],[17,101,1,497],[17,102,1,498,"default"],[17,109,1,487],[17,110,1,506,"colors"],[17,116,1,487],[17,117,1,513,"surface"],[17,124,1,412],[19,0,1,521],[19,8,1,524,"elevation"],[19,17,1,533],[19,29,1,545,"_reactNative"],[19,41,1,557],[19,42,1,558,"Animated"],[19,50,1,545],[19,51,1,567,"Value"],[19,56,1,521],[19,58,1,573],[20,0,1,574],[20,10,1,578,"inputRange"],[20,20,1,588],[20,23,1,589],[20,24,1,590],[20,25,1,589],[20,27,1,592],[20,28,1,589],[20,30,1,594],[20,31,1,589],[20,33,1,596],[20,34,1,589],[20,36,1,598],[20,37,1,589],[20,39,1,600],[20,41,1,589],[20,42,1,574],[21,0,1,604],[21,13,1,611,"elevation"],[21,22,1,620],[21,23,1,621,"interpolate"],[21,34,1,611],[21,35,1,633],[22,0,1,634,"inputRange"],[22,8,1,634,"inputRange"],[22,18,1,644],[22,20,1,645,"inputRange"],[22,30,1,633],[23,0,1,656,"outputRange"],[23,8,1,656,"outputRange"],[23,19,1,667],[23,21,1,668,"inputRange"],[23,31,1,678],[23,32,1,679,"map"],[23,35,1,668],[23,36,1,683],[23,46,1,692,"elevation"],[23,55,1,683],[23,57,1,702],[24,0,1,703],[24,17,1,710,"calculateColor"],[24,31,1,724],[24,32,1,725,"surfaceColor"],[24,44,1,724],[24,46,1,738,"elevation"],[24,55,1,724],[24,56,1,703],[25,0,1,750],[25,9,1,668],[26,0,1,633],[26,7,1,611],[26,8,1,604],[27,0,1,755],[29,0,1,755],[29,11,1,762,"calculateColor"],[29,25,1,776],[29,26,1,777,"surfaceColor"],[29,38,1,776],[29,40,1,790,"elevation"],[29,49,1,776],[29,50,1,755],[30,0,1,802],[32,0,1,802],[32,11,1,811,"calculateColor"],[32,25,1,802],[32,26,1,826,"surfaceColor"],[32,38,1,802],[32,40,1,839,"elevation"],[32,49,1,802],[32,51,1,849],[33,0,1,850],[33,8,1,854,"overlayTransparency"],[33,27,1,850],[35,0,1,874],[35,8,1,877,"elevation"],[35,17,1,886],[35,21,1,888],[35,22,1,877],[35,26,1,891,"elevation"],[35,35,1,900],[35,39,1,902],[35,41,1,874],[35,43,1,905],[36,0,1,906,"overlayTransparency"],[36,6,1,906,"overlayTransparency"],[36,25,1,925],[36,28,1,926,"elevationOverlayTransparency"],[36,56,1,954],[36,57,1,955,"elevation"],[36,66,1,954],[36,67,1,906],[37,0,1,967],[37,5,1,874],[37,11,1,972],[37,15,1,975,"elevation"],[37,24,1,984],[37,27,1,985],[37,29,1,972],[37,31,1,988],[38,0,1,989,"overlayTransparency"],[38,6,1,989,"overlayTransparency"],[38,25,1,1008],[38,28,1,1009,"elevationOverlayTransparency"],[38,56,1,1037],[38,57,1,1038],[38,59,1,1037],[38,60,1,989],[39,0,1,1043],[39,5,1,972],[39,11,1,1047],[40,0,1,1048,"overlayTransparency"],[40,6,1,1048,"overlayTransparency"],[40,25,1,1067],[40,28,1,1068,"elevationOverlayTransparency"],[40,56,1,1096],[40,57,1,1097],[40,58,1,1096],[40,59,1,1048],[41,0,1,1101],[43,0,1,1101],[43,11,1,1107],[43,12,1,1108],[43,15,1,1110,"_color"],[43,21,1,1116],[43,22,1,1117,"default"],[43,29,1,1107],[43,31,1,1126,"surfaceColor"],[43,43,1,1107],[43,45,1,1140,"mix"],[43,48,1,1107],[43,49,1,1144],[43,50,1,1145],[43,53,1,1147,"_color"],[43,59,1,1153],[43,60,1,1154,"default"],[43,67,1,1144],[43,69,1,1163],[43,76,1,1144],[43,77,1,1107],[43,79,1,1172,"overlayTransparency"],[43,98,1,1191],[43,101,1,1192],[43,105,1,1107],[43,107,1,1198,"hex"],[43,110,1,1107],[43,112,1,1101],[44,0,1,1205],[46,0,1,1205],[46,6,1,1209,"elevationOverlayTransparency"],[46,34,1,1237],[46,37,1,1238],[47,0,1,1239],[47,7,1,1241],[47,8,1,1238],[48,0,1,1243],[48,7,1,1245],[48,8,1,1238],[49,0,1,1247],[49,7,1,1249],[49,8,1,1238],[50,0,1,1251],[50,7,1,1253],[50,8,1,1238],[51,0,1,1255],[51,7,1,1257],[51,9,1,1238],[52,0,1,1260],[52,7,1,1262],[52,9,1,1238],[53,0,1,1265],[53,7,1,1267],[53,11,1,1238],[54,0,1,1272],[54,7,1,1274],[54,9,1,1238],[55,0,1,1277],[55,7,1,1279],[55,11,1,1238],[56,0,1,1284],[56,8,1,1287],[56,10,1,1238],[57,0,1,1290],[57,8,1,1293],[57,12,1,1238],[58,0,1,1298],[58,8,1,1301],[58,10,1,1238],[59,0,1,1304],[59,8,1,1307],[59,13,1,1238],[60,0,1,1313],[60,8,1,1316],[60,12,1,1238],[61,0,1,1321],[61,8,1,1324],[61,13,1,1238],[62,0,1,1330],[62,8,1,1333],[62,10,1,1238],[63,0,1,1336],[63,8,1,1339],[63,13,1,1238],[64,0,1,1345],[64,8,1,1348],[64,13,1,1238],[65,0,1,1354],[65,8,1,1357],[65,13,1,1238],[66,0,1,1363],[66,8,1,1366],[66,13,1,1238],[67,0,1,1372],[67,8,1,1375],[67,12,1,1238],[68,0,1,1380],[68,8,1,1383],[68,13,1,1238],[69,0,1,1389],[69,8,1,1392],[69,13,1,1238],[70,0,1,1398],[70,8,1,1401],[71,0,1,1238],[71,3,1,1205]],"functionMap":{"names":["<global>","overlay","inputRange.map$argument_0","calculateColor"],"mappings":"AAA,+TC,4WC,mED,oDE,mZH"}},"type":"js/module"}]}