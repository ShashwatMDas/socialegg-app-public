{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"../../Text/Text","data":{"isAsync":false}},{"name":"../../UTFSequence","data":{"isAsync":false}},{"name":"../../Utilities/stringifySafe","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  var _jsxFileName = \"/media/shashwatmdas/Shashwat2/finalapp/socialegg_app/node_modules/react-native/Libraries/YellowBox/Data/YellowBoxCategory.js\";\n\n  function _createForOfIteratorHelperLoose(o) { var i = 0; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } i = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return i.next.bind(i); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var React = _$$_REQUIRE(_dependencyMap[1], \"react\");\n\n  var Text = _$$_REQUIRE(_dependencyMap[2], \"../../Text/Text\");\n\n  var UTFSequence = _$$_REQUIRE(_dependencyMap[3], \"../../UTFSequence\");\n\n  var stringifySafe = _$$_REQUIRE(_dependencyMap[4], \"../../Utilities/stringifySafe\");\n\n  var SUBSTITUTION = UTFSequence.BOM + '%s';\n  var YellowBoxCategory = {\n    parse: function parse(args) {\n      var categoryParts = [];\n      var contentParts = [];\n      var substitutionOffsets = [];\n\n      var remaining = _toConsumableArray(args);\n\n      if (typeof remaining[0] === 'string') {\n        var formatString = String(remaining.shift());\n        var formatStringParts = formatString.split('%s');\n        var substitutionCount = formatStringParts.length - 1;\n        var substitutions = remaining.splice(0, substitutionCount);\n        var categoryString = '';\n        var contentString = '';\n        var substitutionIndex = 0;\n\n        for (var _iterator = _createForOfIteratorHelperLoose(formatStringParts), _step; !(_step = _iterator()).done;) {\n          var formatStringPart = _step.value;\n          categoryString += formatStringPart;\n          contentString += formatStringPart;\n\n          if (substitutionIndex < substitutionCount) {\n            if (substitutionIndex < substitutions.length) {\n              var substitution = stringifySafe(substitutions[substitutionIndex]);\n              substitutionOffsets.push({\n                length: substitution.length,\n                offset: contentString.length\n              });\n              categoryString += SUBSTITUTION;\n              contentString += substitution;\n            } else {\n              substitutionOffsets.push({\n                length: 2,\n                offset: contentString.length\n              });\n              categoryString += '%s';\n              contentString += '%s';\n            }\n\n            substitutionIndex++;\n          }\n        }\n\n        categoryParts.push(categoryString);\n        contentParts.push(contentString);\n      }\n\n      var remainingArgs = remaining.map(stringifySafe);\n      categoryParts.push.apply(categoryParts, _toConsumableArray(remainingArgs));\n      contentParts.push.apply(contentParts, _toConsumableArray(remainingArgs));\n      return {\n        category: categoryParts.join(' '),\n        message: {\n          content: contentParts.join(' '),\n          substitutions: substitutionOffsets\n        }\n      };\n    },\n    render: function render(_ref, substitutionStyle) {\n      var content = _ref.content,\n          substitutions = _ref.substitutions;\n      var elements = [];\n      var lastOffset = substitutions.reduce(function (prevOffset, substitution, index) {\n        var key = String(index);\n\n        if (substitution.offset > prevOffset) {\n          var prevPart = content.substr(prevOffset, substitution.offset - prevOffset);\n          elements.push(React.createElement(Text, {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }\n          }, prevPart));\n        }\n\n        var substititionPart = content.substr(substitution.offset, substitution.length);\n        elements.push(React.createElement(Text, {\n          key: key + '.5',\n          style: substitutionStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }\n        }, substititionPart));\n        return substitution.offset + substitution.length;\n      }, 0);\n\n      if (lastOffset < content.length) {\n        var lastPart = content.substr(lastOffset);\n        elements.push(React.createElement(Text, {\n          key: \"-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }\n        }, lastPart));\n      }\n\n      return elements;\n    }\n  };\n  module.exports = YellowBoxCategory;\n});","lineCount":130,"map":[[2,0,11,0],[14,0,13,0],[14,6,13,6,"React"],[14,11,13,11],[14,14,13,14,"require"],[14,25,13,21],[14,53,13,0],[16,0,14,0],[16,6,14,6,"Text"],[16,10,14,10],[16,13,14,13,"require"],[16,24,14,20],[16,62,14,0],[18,0,15,0],[18,6,15,6,"UTFSequence"],[18,17,15,17],[18,20,15,20,"require"],[18,31,15,27],[18,71,15,0],[20,0,17,0],[20,6,17,6,"stringifySafe"],[20,19,17,19],[20,22,17,22,"require"],[20,33,17,29],[20,85,17,0],[22,0,32,0],[22,6,32,6,"SUBSTITUTION"],[22,18,32,18],[22,21,32,21,"UTFSequence"],[22,32,32,32],[22,33,32,33,"BOM"],[22,36,32,21],[22,39,32,39],[22,43,32,0],[23,0,34,0],[23,6,34,6,"YellowBoxCategory"],[23,23,34,23],[23,26,34,26],[24,0,35,2,"parse"],[24,4,35,2,"parse"],[24,9,34,26],[24,26,36,4,"args"],[24,30,34,26],[24,32,40,6],[25,0,41,4],[25,10,41,10,"categoryParts"],[25,23,41,23],[25,26,41,26],[25,28,41,4],[26,0,42,4],[26,10,42,10,"contentParts"],[26,22,42,22],[26,25,42,25],[26,27,42,4],[27,0,43,4],[27,10,43,10,"substitutionOffsets"],[27,29,43,29],[27,32,43,32],[27,34,43,4],[29,0,45,4],[29,10,45,10,"remaining"],[29,19,45,19],[29,41,45,26,"args"],[29,45,45,19],[29,46,45,4],[31,0,47,4],[31,10,47,8],[31,17,47,15,"remaining"],[31,26,47,24],[31,27,47,25],[31,28,47,24],[31,29,47,8],[31,34,47,32],[31,42,47,4],[31,44,47,42],[32,0,48,6],[32,12,48,12,"formatString"],[32,24,48,24],[32,27,48,27,"String"],[32,33,48,33],[32,34,48,34,"remaining"],[32,43,48,43],[32,44,48,44,"shift"],[32,49,48,34],[32,51,48,33],[32,52,48,6],[33,0,49,6],[33,12,49,12,"formatStringParts"],[33,29,49,29],[33,32,49,32,"formatString"],[33,44,49,44],[33,45,49,45,"split"],[33,50,49,32],[33,51,49,51],[33,55,49,32],[33,56,49,6],[34,0,50,6],[34,12,50,12,"substitutionCount"],[34,29,50,29],[34,32,50,32,"formatStringParts"],[34,49,50,49],[34,50,50,50,"length"],[34,56,50,32],[34,59,50,59],[34,60,50,6],[35,0,51,6],[35,12,51,12,"substitutions"],[35,25,51,25],[35,28,51,28,"remaining"],[35,37,51,37],[35,38,51,38,"splice"],[35,44,51,28],[35,45,51,45],[35,46,51,28],[35,48,51,48,"substitutionCount"],[35,65,51,28],[35,66,51,6],[36,0,53,6],[36,12,53,10,"categoryString"],[36,26,53,24],[36,29,53,27],[36,31,53,6],[37,0,54,6],[37,12,54,10,"contentString"],[37,25,54,23],[37,28,54,26],[37,30,54,6],[38,0,56,6],[38,12,56,10,"substitutionIndex"],[38,29,56,27],[38,32,56,30],[38,33,56,6],[40,0,57,6],[40,61,57,37,"formatStringParts"],[40,78,57,6],[40,118,57,56],[41,0,57,56],[41,14,57,17,"formatStringPart"],[41,30,57,56],[42,0,58,8,"categoryString"],[42,10,58,8,"categoryString"],[42,24,58,22],[42,28,58,26,"formatStringPart"],[42,44,58,8],[43,0,59,8,"contentString"],[43,10,59,8,"contentString"],[43,23,59,21],[43,27,59,25,"formatStringPart"],[43,43,59,8],[45,0,61,8],[45,14,61,12,"substitutionIndex"],[45,31,61,29],[45,34,61,32,"substitutionCount"],[45,51,61,8],[45,53,61,51],[46,0,62,10],[46,16,62,14,"substitutionIndex"],[46,33,62,31],[46,36,62,34,"substitutions"],[46,49,62,47],[46,50,62,48,"length"],[46,56,62,10],[46,58,62,56],[47,0,63,12],[47,18,63,18,"substitution"],[47,30,63,30],[47,33,63,33,"stringifySafe"],[47,46,63,46],[47,47,64,14,"substitutions"],[47,60,64,27],[47,61,64,28,"substitutionIndex"],[47,78,64,27],[47,79,63,46],[47,80,63,12],[48,0,66,12,"substitutionOffsets"],[48,14,66,12,"substitutionOffsets"],[48,33,66,31],[48,34,66,32,"push"],[48,38,66,12],[48,39,66,37],[49,0,67,14,"length"],[49,16,67,14,"length"],[49,22,67,20],[49,24,67,22,"substitution"],[49,36,67,34],[49,37,67,35,"length"],[49,43,66,37],[50,0,68,14,"offset"],[50,16,68,14,"offset"],[50,22,68,20],[50,24,68,22,"contentString"],[50,37,68,35],[50,38,68,36,"length"],[51,0,66,37],[51,15,66,12],[52,0,71,12,"categoryString"],[52,14,71,12,"categoryString"],[52,28,71,26],[52,32,71,30,"SUBSTITUTION"],[52,44,71,12],[53,0,72,12,"contentString"],[53,14,72,12,"contentString"],[53,27,72,25],[53,31,72,29,"substitution"],[53,43,72,12],[54,0,73,11],[54,13,62,10],[54,19,73,17],[55,0,74,12,"substitutionOffsets"],[55,14,74,12,"substitutionOffsets"],[55,33,74,31],[55,34,74,32,"push"],[55,38,74,12],[55,39,74,37],[56,0,75,14,"length"],[56,16,75,14,"length"],[56,22,75,20],[56,24,75,22],[56,25,74,37],[57,0,76,14,"offset"],[57,16,76,14,"offset"],[57,22,76,20],[57,24,76,22,"contentString"],[57,37,76,35],[57,38,76,36,"length"],[58,0,74,37],[58,15,74,12],[59,0,79,12,"categoryString"],[59,14,79,12,"categoryString"],[59,28,79,26],[59,32,79,30],[59,36,79,12],[60,0,80,12,"contentString"],[60,14,80,12,"contentString"],[60,27,80,25],[60,31,80,29],[60,35,80,12],[61,0,81,11],[63,0,83,10,"substitutionIndex"],[63,12,83,10,"substitutionIndex"],[63,29,83,27],[64,0,84,9],[65,0,85,7],[67,0,87,6,"categoryParts"],[67,8,87,6,"categoryParts"],[67,21,87,19],[67,22,87,20,"push"],[67,26,87,6],[67,27,87,25,"categoryString"],[67,41,87,6],[68,0,88,6,"contentParts"],[68,8,88,6,"contentParts"],[68,20,88,18],[68,21,88,19,"push"],[68,25,88,6],[68,26,88,24,"contentString"],[68,39,88,6],[69,0,89,5],[71,0,91,4],[71,10,91,10,"remainingArgs"],[71,23,91,23],[71,26,91,26,"remaining"],[71,35,91,35],[71,36,91,36,"map"],[71,39,91,26],[71,40,91,40,"stringifySafe"],[71,53,91,26],[71,54,91,4],[72,0,92,4,"categoryParts"],[72,6,92,4,"categoryParts"],[72,19,92,17],[72,20,92,18,"push"],[72,24,92,4],[72,31,92,4,"categoryParts"],[72,44,92,17],[72,65,92,26,"remainingArgs"],[72,78,92,17],[72,80,92,4],[73,0,93,4,"contentParts"],[73,6,93,4,"contentParts"],[73,18,93,16],[73,19,93,17,"push"],[73,23,93,4],[73,30,93,4,"contentParts"],[73,42,93,16],[73,63,93,25,"remainingArgs"],[73,76,93,16],[73,78,93,4],[74,0,95,4],[74,13,95,11],[75,0,96,6,"category"],[75,8,96,6,"category"],[75,16,96,14],[75,18,96,16,"categoryParts"],[75,31,96,29],[75,32,96,30,"join"],[75,36,96,16],[75,37,96,35],[75,40,96,16],[75,41,95,11],[76,0,97,6,"message"],[76,8,97,6,"message"],[76,15,97,13],[76,17,97,15],[77,0,98,8,"content"],[77,10,98,8,"content"],[77,17,98,15],[77,19,98,17,"contentParts"],[77,31,98,29],[77,32,98,30,"join"],[77,36,98,17],[77,37,98,35],[77,40,98,17],[77,41,97,15],[78,0,99,8,"substitutions"],[78,10,99,8,"substitutions"],[78,23,99,21],[78,25,99,23,"substitutionOffsets"],[79,0,97,15],[80,0,95,11],[80,7,95,4],[81,0,102,3],[81,5,34,26],[82,0,104,2,"render"],[82,4,104,2,"render"],[82,10,34,26],[82,34,106,4,"substitutionStyle"],[82,51,34,26],[82,53,107,16],[83,0,107,16],[83,10,105,5,"content"],[83,17,107,16],[83,25,105,5,"content"],[83,32,107,16],[84,0,107,16],[84,10,105,14,"substitutions"],[84,23,107,16],[84,31,105,14,"substitutions"],[84,44,107,16],[85,0,108,4],[85,10,108,10,"elements"],[85,18,108,18],[85,21,108,21],[85,23,108,4],[86,0,110,4],[86,10,110,10,"lastOffset"],[86,20,110,20],[86,23,110,23,"substitutions"],[86,36,110,36],[86,37,110,37,"reduce"],[86,43,110,23],[86,44,111,6],[86,54,111,7,"prevOffset"],[86,64,111,6],[86,66,111,19,"substitution"],[86,78,111,6],[86,80,111,33,"index"],[86,85,111,6],[86,87,111,43],[87,0,112,8],[87,12,112,14,"key"],[87,15,112,17],[87,18,112,20,"String"],[87,24,112,26],[87,25,112,27,"index"],[87,30,112,26],[87,31,112,8],[89,0,114,8],[89,12,114,12,"substitution"],[89,24,114,24],[89,25,114,25,"offset"],[89,31,114,12],[89,34,114,34,"prevOffset"],[89,44,114,8],[89,46,114,46],[90,0,115,10],[90,14,115,16,"prevPart"],[90,22,115,24],[90,25,115,27,"content"],[90,32,115,34],[90,33,115,35,"substr"],[90,39,115,27],[90,40,116,12,"prevOffset"],[90,50,115,27],[90,52,117,12,"substitution"],[90,64,117,24],[90,65,117,25,"offset"],[90,71,117,12],[90,74,117,34,"prevOffset"],[90,84,115,27],[90,85,115,10],[91,0,119,10,"elements"],[91,10,119,10,"elements"],[91,18,119,18],[91,19,119,19,"push"],[91,23,119,10],[91,24,119,24],[91,44,119,25],[91,48,119,24],[92,0,119,30],[92,12,119,30],[92,15,119,33],[92,17,119,35,"key"],[92,20,119,24],[93,0,119,24],[94,0,119,24],[95,0,119,24],[96,0,119,24],[97,0,119,24],[98,0,119,24],[98,13,119,41,"prevPart"],[98,21,119,24],[98,22,119,10],[99,0,120,9],[101,0,122,8],[101,12,122,14,"substititionPart"],[101,28,122,30],[101,31,122,33,"content"],[101,38,122,40],[101,39,122,41,"substr"],[101,45,122,33],[101,46,123,10,"substitution"],[101,58,123,22],[101,59,123,23,"offset"],[101,65,122,33],[101,67,124,10,"substitution"],[101,79,124,22],[101,80,124,23,"length"],[101,86,122,33],[101,87,122,8],[102,0,126,8,"elements"],[102,8,126,8,"elements"],[102,16,126,16],[102,17,126,17,"push"],[102,21,126,8],[102,22,127,10],[102,42,127,11],[102,46,127,10],[103,0,127,16],[103,10,127,16],[103,13,127,19],[103,15,127,21,"key"],[103,18,127,24],[103,21,127,27],[103,25,127,10],[104,0,127,33],[104,10,127,33],[104,15,127,38],[104,17,127,40,"substitutionStyle"],[104,34,127,10],[105,0,127,10],[106,0,127,10],[107,0,127,10],[108,0,127,10],[109,0,127,10],[110,0,127,10],[110,11,128,13,"substititionPart"],[110,27,127,10],[110,28,126,8],[111,0,132,8],[111,15,132,15,"substitution"],[111,27,132,27],[111,28,132,28,"offset"],[111,34,132,15],[111,37,132,37,"substitution"],[111,49,132,49],[111,50,132,50,"length"],[111,56,132,8],[112,0,133,7],[112,7,110,23],[112,9,134,6],[112,10,110,23],[112,11,110,4],[114,0,137,4],[114,10,137,8,"lastOffset"],[114,20,137,18],[114,23,137,21,"content"],[114,30,137,28],[114,31,137,29,"length"],[114,37,137,4],[114,39,137,37],[115,0,138,6],[115,12,138,12,"lastPart"],[115,20,138,20],[115,23,138,23,"content"],[115,30,138,30],[115,31,138,31,"substr"],[115,37,138,23],[115,38,138,38,"lastOffset"],[115,48,138,23],[115,49,138,6],[116,0,139,6,"elements"],[116,8,139,6,"elements"],[116,16,139,14],[116,17,139,15,"push"],[116,21,139,6],[116,22,139,20],[116,42,139,21],[116,46,139,20],[117,0,139,26],[117,10,139,26],[117,13,139,29],[117,15,139,30],[117,19,139,20],[118,0,139,20],[119,0,139,20],[120,0,139,20],[121,0,139,20],[122,0,139,20],[123,0,139,20],[123,11,139,36,"lastPart"],[123,19,139,20],[123,20,139,6],[124,0,140,5],[126,0,142,4],[126,13,142,11,"elements"],[126,21,142,4],[127,0,143,3],[128,0,34,26],[128,3,34,0],[129,0,146,0,"module"],[129,2,146,0,"module"],[129,8,146,6],[129,9,146,7,"exports"],[129,16,146,0],[129,19,146,17,"YellowBoxCategory"],[129,36,146,0]],"functionMap":{"names":["<global>","parse","render","substitutions.reduce$argument_0"],"mappings":"AAA;ECkC;GDmE;EEE;MCO;ODsB;GFU"}},"type":"js/module"}]}