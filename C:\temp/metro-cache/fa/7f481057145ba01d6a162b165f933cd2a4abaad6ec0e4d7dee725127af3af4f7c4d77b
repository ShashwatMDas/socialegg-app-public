{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./ExpoWebBrowser","data":{"isAsync":false}},{"name":"./WebBrowser.types","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getCustomTabsSupportingBrowsersAsync = getCustomTabsSupportingBrowsersAsync;\n  exports.warmUpAsync = warmUpAsync;\n  exports.mayInitWithUrlAsync = mayInitWithUrlAsync;\n  exports.coolDownAsync = coolDownAsync;\n  exports.openBrowserAsync = openBrowserAsync;\n  exports.dismissBrowser = dismissBrowser;\n  exports.openAuthSessionAsync = openAuthSessionAsync;\n  exports.dismissAuthSession = dismissAuthSession;\n  Object.defineProperty(exports, \"WebBrowserResultType\", {\n    enumerable: true,\n    get: function get() {\n      return _WebBrowser.WebBrowserResultType;\n    }\n  });\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[2], \"@unimodules/core\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _ExpoWebBrowser = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./ExpoWebBrowser\"));\n\n  var _WebBrowser = _$$_REQUIRE(_dependencyMap[5], \"./WebBrowser.types\");\n\n  var emptyCustomTabsPackages = {\n    defaultBrowserPackage: undefined,\n    preferredBrowserPackage: undefined,\n    browserPackages: [],\n    servicePackages: []\n  };\n\n  function getCustomTabsSupportingBrowsersAsync() {\n    return _regenerator.default.async(function getCustomTabsSupportingBrowsersAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (_ExpoWebBrowser.default.getCustomTabsSupportingBrowsersAsync) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n\n          case 2:\n            if (!(_reactNative.Platform.OS !== 'android')) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", emptyCustomTabsPackages);\n\n          case 6:\n            _context.next = 8;\n            return _regenerator.default.awrap(_ExpoWebBrowser.default.getCustomTabsSupportingBrowsersAsync());\n\n          case 8:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function warmUpAsync(browserPackage) {\n    return _regenerator.default.async(function warmUpAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (_ExpoWebBrowser.default.warmUpAsync) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('WebBrowser', 'warmUpAsync');\n\n          case 2:\n            if (!(_reactNative.Platform.OS !== 'android')) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {});\n\n          case 6:\n            _context2.next = 8;\n            return _regenerator.default.awrap(_ExpoWebBrowser.default.warmUpAsync(browserPackage));\n\n          case 8:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function mayInitWithUrlAsync(url, browserPackage) {\n    return _regenerator.default.async(function mayInitWithUrlAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (_ExpoWebBrowser.default.mayInitWithUrlAsync) {\n              _context3.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('WebBrowser', 'mayInitWithUrlAsync');\n\n          case 2:\n            if (!(_reactNative.Platform.OS !== 'android')) {\n              _context3.next = 6;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", {});\n\n          case 6:\n            _context3.next = 8;\n            return _regenerator.default.awrap(_ExpoWebBrowser.default.mayInitWithUrlAsync(url, browserPackage));\n\n          case 8:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function coolDownAsync(browserPackage) {\n    return _regenerator.default.async(function coolDownAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (_ExpoWebBrowser.default.coolDownAsync) {\n              _context4.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('WebBrowser', 'coolDownAsync');\n\n          case 2:\n            if (!(_reactNative.Platform.OS !== 'android')) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", {});\n\n          case 6:\n            _context4.next = 8;\n            return _regenerator.default.awrap(_ExpoWebBrowser.default.coolDownAsync(browserPackage));\n\n          case 8:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function openBrowserAsync(url) {\n    var browserParams,\n        _args5 = arguments;\n    return _regenerator.default.async(function openBrowserAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            browserParams = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n\n            if (_ExpoWebBrowser.default.openBrowserAsync) {\n              _context5.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('WebBrowser', 'openBrowserAsync');\n\n          case 3:\n            _context5.next = 5;\n            return _regenerator.default.awrap(_ExpoWebBrowser.default.openBrowserAsync(url, browserParams));\n\n          case 5:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function dismissBrowser() {\n    if (!_ExpoWebBrowser.default.dismissBrowser) {\n      throw new _core.UnavailabilityError('WebBrowser', 'dismissBrowser');\n    }\n\n    _ExpoWebBrowser.default.dismissBrowser();\n  }\n\n  function openAuthSessionAsync(url, redirectUrl) {\n    var browserParams,\n        _args6 = arguments;\n    return _regenerator.default.async(function openAuthSessionAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            browserParams = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : {};\n\n            if (!_authSessionIsNativelySupported()) {\n              _context6.next = 7;\n              break;\n            }\n\n            if (_ExpoWebBrowser.default.openAuthSessionAsync) {\n              _context6.next = 4;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('WebBrowser', 'openAuthSessionAsync');\n\n          case 4:\n            return _context6.abrupt(\"return\", _ExpoWebBrowser.default.openAuthSessionAsync(url, redirectUrl));\n\n          case 7:\n            return _context6.abrupt(\"return\", _openAuthSessionPolyfillAsync(url, redirectUrl, browserParams));\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function dismissAuthSession() {\n    if (_authSessionIsNativelySupported()) {\n      if (!_ExpoWebBrowser.default.dismissAuthSession) {\n        throw new _core.UnavailabilityError('WebBrowser', 'dismissAuthSession');\n      }\n\n      _ExpoWebBrowser.default.dismissAuthSession();\n    } else {\n      if (!_ExpoWebBrowser.default.dismissBrowser) {\n        throw new _core.UnavailabilityError('WebBrowser', 'dismissAuthSession');\n      }\n\n      _ExpoWebBrowser.default.dismissBrowser();\n    }\n  }\n\n  function _authSessionIsNativelySupported() {\n    if (_reactNative.Platform.OS === 'android') {\n      return false;\n    }\n\n    var versionNumber = parseInt(String(_reactNative.Platform.Version), 10);\n    return versionNumber >= 11;\n  }\n\n  var _redirectHandler = null;\n  var _onWebBrowserCloseAndroid = null;\n\n  var _isAppStateAvailable = _reactNative.AppState.currentState !== null;\n\n  function _onAppStateChangeAndroid(state) {\n    if (!_isAppStateAvailable) {\n      _isAppStateAvailable = true;\n      return;\n    }\n\n    if (state === 'active' && _onWebBrowserCloseAndroid) {\n      _onWebBrowserCloseAndroid();\n    }\n  }\n\n  function _openBrowserAndWaitAndroidAsync(startUrl) {\n    var browserParams,\n        appStateChangedToActive,\n        result,\n        _await$openBrowserAsy,\n        type,\n        _args7 = arguments;\n\n    return _regenerator.default.async(function _openBrowserAndWaitAndroidAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            browserParams = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n            appStateChangedToActive = new Promise(function (resolve) {\n              _onWebBrowserCloseAndroid = resolve;\n\n              _reactNative.AppState.addEventListener('change', _onAppStateChangeAndroid);\n            });\n            result = {\n              type: 'cancel'\n            };\n            _context7.next = 5;\n            return _regenerator.default.awrap(openBrowserAsync(startUrl, browserParams));\n\n          case 5:\n            _await$openBrowserAsy = _context7.sent;\n            type = _await$openBrowserAsy.type;\n\n            if (!(type === 'opened')) {\n              _context7.next = 11;\n              break;\n            }\n\n            _context7.next = 10;\n            return _regenerator.default.awrap(appStateChangedToActive);\n\n          case 10:\n            result = {\n              type: 'dismiss'\n            };\n\n          case 11:\n            _reactNative.AppState.removeEventListener('change', _onAppStateChangeAndroid);\n\n            _onWebBrowserCloseAndroid = null;\n            return _context7.abrupt(\"return\", result);\n\n          case 14:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function _openAuthSessionPolyfillAsync(startUrl, returnUrl) {\n    var browserParams,\n        _args8 = arguments;\n    return _regenerator.default.async(function _openAuthSessionPolyfillAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            browserParams = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : {};\n\n            if (!_redirectHandler) {\n              _context8.next = 3;\n              break;\n            }\n\n            throw new Error(\"The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be\");\n\n          case 3:\n            if (!_onWebBrowserCloseAndroid) {\n              _context8.next = 5;\n              break;\n            }\n\n            throw new Error(\"WebBrowser is already open, only one can be open at a time\");\n\n          case 5:\n            _context8.prev = 5;\n\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context8.next = 12;\n              break;\n            }\n\n            _context8.next = 9;\n            return _regenerator.default.awrap(Promise.race([_openBrowserAndWaitAndroidAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]));\n\n          case 9:\n            return _context8.abrupt(\"return\", _context8.sent);\n\n          case 12:\n            _context8.next = 14;\n            return _regenerator.default.awrap(Promise.race([openBrowserAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]));\n\n          case 14:\n            return _context8.abrupt(\"return\", _context8.sent);\n\n          case 15:\n            _context8.prev = 15;\n\n            if (_ExpoWebBrowser.default.dismissBrowser) {\n              _ExpoWebBrowser.default.dismissBrowser();\n            }\n\n            _stopWaitingForRedirect();\n\n            return _context8.finish(15);\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, [[5,, 15, 19]], Promise);\n  }\n\n  function _stopWaitingForRedirect() {\n    if (!_redirectHandler) {\n      throw new Error(\"The WebBrowser auth session is in an invalid state with no redirect handler when one should be set\");\n    }\n\n    _reactNative.Linking.removeEventListener('url', _redirectHandler);\n\n    _redirectHandler = null;\n  }\n\n  function _waitForRedirectAsync(returnUrl) {\n    return new Promise(function (resolve) {\n      _redirectHandler = function _redirectHandler(event) {\n        if (event.url.startsWith(returnUrl)) {\n          resolve({\n            url: event.url,\n            type: 'success'\n          });\n        }\n      };\n\n      _reactNative.Linking.addEventListener('url', _redirectHandler);\n    });\n  }\n});","lineCount":437,"map":[[24,0,1,0],[26,0,2,0],[28,0,3,0],[30,0,4,0],[32,0,6,0],[32,6,6,6,"emptyCustomTabsPackages"],[32,29,6,29],[32,32,6,32],[33,0,7,4,"defaultBrowserPackage"],[33,4,7,4,"defaultBrowserPackage"],[33,25,7,25],[33,27,7,27,"undefined"],[33,36,6,32],[34,0,8,4,"preferredBrowserPackage"],[34,4,8,4,"preferredBrowserPackage"],[34,27,8,27],[34,29,8,29,"undefined"],[34,38,6,32],[35,0,9,4,"browserPackages"],[35,4,9,4,"browserPackages"],[35,19,9,19],[35,21,9,21],[35,23,6,32],[36,0,10,4,"servicePackages"],[36,4,10,4,"servicePackages"],[36,19,10,19],[36,21,10,21],[37,0,6,32],[37,3,6,0],[39,0,12,7],[39,11,12,22,"getCustomTabsSupportingBrowsersAsync"],[39,47,12,7],[40,0,12,7],[41,0,12,7],[42,0,12,7],[43,0,12,7],[44,0,12,7],[44,16,13,9,"ExponentWebBrowser"],[44,40,13,28,"getCustomTabsSupportingBrowsersAsync"],[44,76,12,7],[45,0,12,7],[46,0,12,7],[47,0,12,7],[49,0,12,7],[49,18,14,14],[49,22,14,18,"UnavailabilityError"],[49,47,14,14],[49,48,14,38],[49,60,14,14],[49,62,14,52],[49,100,14,14],[49,101,12,7],[51,0,12,7],[52,0,12,7],[52,18,16,8,"Platform"],[52,40,16,17,"OS"],[52,42,16,8],[52,47,16,24],[52,56,12,7],[53,0,12,7],[54,0,12,7],[55,0,12,7],[57,0,12,7],[57,45,17,15,"emptyCustomTabsPackages"],[57,68,12,7],[59,0,12,7],[60,0,12,7],[61,0,12,7],[61,46,20,21,"ExponentWebBrowser"],[61,70,20,40,"getCustomTabsSupportingBrowsersAsync"],[61,106,20,21],[61,108,12,7],[63,0,12,7],[64,0,12,7],[66,0,12,7],[67,0,12,7],[68,0,12,7],[69,0,12,7],[70,0,12,7],[71,0,12,7],[72,0,12,7],[74,0,23,7],[74,11,23,22,"warmUpAsync"],[74,22,23,7],[74,23,23,34,"browserPackage"],[74,37,23,7],[75,0,23,7],[76,0,23,7],[77,0,23,7],[78,0,23,7],[79,0,23,7],[79,16,24,9,"ExponentWebBrowser"],[79,40,24,28,"warmUpAsync"],[79,51,23,7],[80,0,23,7],[81,0,23,7],[82,0,23,7],[84,0,23,7],[84,18,25,14],[84,22,25,18,"UnavailabilityError"],[84,47,25,14],[84,48,25,38],[84,60,25,14],[84,62,25,52],[84,75,25,14],[84,76,23,7],[86,0,23,7],[87,0,23,7],[87,18,27,8,"Platform"],[87,40,27,17,"OS"],[87,42,27,8],[87,47,27,24],[87,56,23,7],[88,0,23,7],[89,0,23,7],[90,0,23,7],[92,0,23,7],[92,46,28,15],[92,48,23,7],[94,0,23,7],[95,0,23,7],[96,0,23,7],[96,46,31,21,"ExponentWebBrowser"],[96,70,31,40,"warmUpAsync"],[96,81,31,21],[96,82,31,52,"browserPackage"],[96,96,31,21],[96,97,23,7],[98,0,23,7],[99,0,23,7],[101,0,23,7],[102,0,23,7],[103,0,23,7],[104,0,23,7],[105,0,23,7],[106,0,23,7],[107,0,23,7],[109,0,34,7],[109,11,34,22,"mayInitWithUrlAsync"],[109,30,34,7],[109,31,34,42,"url"],[109,34,34,7],[109,36,34,47,"browserPackage"],[109,50,34,7],[110,0,34,7],[111,0,34,7],[112,0,34,7],[113,0,34,7],[114,0,34,7],[114,16,35,9,"ExponentWebBrowser"],[114,40,35,28,"mayInitWithUrlAsync"],[114,59,34,7],[115,0,34,7],[116,0,34,7],[117,0,34,7],[119,0,34,7],[119,18,36,14],[119,22,36,18,"UnavailabilityError"],[119,47,36,14],[119,48,36,38],[119,60,36,14],[119,62,36,52],[119,83,36,14],[119,84,34,7],[121,0,34,7],[122,0,34,7],[122,18,38,8,"Platform"],[122,40,38,17,"OS"],[122,42,38,8],[122,47,38,24],[122,56,34,7],[123,0,34,7],[124,0,34,7],[125,0,34,7],[127,0,34,7],[127,46,39,15],[127,48,34,7],[129,0,34,7],[130,0,34,7],[131,0,34,7],[131,46,42,21,"ExponentWebBrowser"],[131,70,42,40,"mayInitWithUrlAsync"],[131,89,42,21],[131,90,42,60,"url"],[131,93,42,21],[131,95,42,65,"browserPackage"],[131,109,42,21],[131,110,34,7],[133,0,34,7],[134,0,34,7],[136,0,34,7],[137,0,34,7],[138,0,34,7],[139,0,34,7],[140,0,34,7],[141,0,34,7],[142,0,34,7],[144,0,45,7],[144,11,45,22,"coolDownAsync"],[144,24,45,7],[144,25,45,36,"browserPackage"],[144,39,45,7],[145,0,45,7],[146,0,45,7],[147,0,45,7],[148,0,45,7],[149,0,45,7],[149,16,46,9,"ExponentWebBrowser"],[149,40,46,28,"coolDownAsync"],[149,53,45,7],[150,0,45,7],[151,0,45,7],[152,0,45,7],[154,0,45,7],[154,18,47,14],[154,22,47,18,"UnavailabilityError"],[154,47,47,14],[154,48,47,38],[154,60,47,14],[154,62,47,52],[154,77,47,14],[154,78,45,7],[156,0,45,7],[157,0,45,7],[157,18,49,8,"Platform"],[157,40,49,17,"OS"],[157,42,49,8],[157,47,49,24],[157,56,45,7],[158,0,45,7],[159,0,45,7],[160,0,45,7],[162,0,45,7],[162,46,50,15],[162,48,45,7],[164,0,45,7],[165,0,45,7],[166,0,45,7],[166,46,53,21,"ExponentWebBrowser"],[166,70,53,40,"coolDownAsync"],[166,83,53,21],[166,84,53,54,"browserPackage"],[166,98,53,21],[166,99,45,7],[168,0,45,7],[169,0,45,7],[171,0,45,7],[172,0,45,7],[173,0,45,7],[174,0,45,7],[175,0,45,7],[176,0,45,7],[177,0,45,7],[179,0,56,7],[179,11,56,22,"openBrowserAsync"],[179,27,56,7],[179,28,56,39,"url"],[179,31,56,7],[180,0,56,7],[181,0,56,7],[182,0,56,7],[183,0,56,7],[184,0,56,7],[185,0,56,7],[186,0,56,44,"browserParams"],[186,12,56,44,"browserParams"],[186,25,56,7],[186,87,56,60],[186,89,56,7],[188,0,56,7],[188,16,57,9,"ExponentWebBrowser"],[188,40,57,28,"openBrowserAsync"],[188,56,56,7],[189,0,56,7],[190,0,56,7],[191,0,56,7],[193,0,56,7],[193,18,58,14],[193,22,58,18,"UnavailabilityError"],[193,47,58,14],[193,48,58,38],[193,60,58,14],[193,62,58,52],[193,80,58,14],[193,81,56,7],[195,0,56,7],[196,0,56,7],[197,0,56,7],[197,46,60,17,"ExponentWebBrowser"],[197,70,60,36,"openBrowserAsync"],[197,86,60,17],[197,87,60,53,"url"],[197,90,60,17],[197,92,60,58,"browserParams"],[197,105,60,17],[197,106,56,7],[199,0,56,7],[200,0,56,7],[202,0,56,7],[203,0,56,7],[204,0,56,7],[205,0,56,7],[206,0,56,7],[207,0,56,7],[208,0,56,7],[210,0,62,7],[210,11,62,16,"dismissBrowser"],[210,25,62,7],[210,28,62,33],[211,0,63,4],[211,8,63,8],[211,9,63,9,"ExponentWebBrowser"],[211,33,63,28,"dismissBrowser"],[211,47,63,4],[211,49,63,44],[212,0,64,8],[212,12,64,14],[212,16,64,18,"UnavailabilityError"],[212,41,64,14],[212,42,64,38],[212,54,64,14],[212,56,64,52],[212,72,64,14],[212,73,64,8],[213,0,65,5],[215,0,66,4,"ExponentWebBrowser"],[215,28,66,23,"dismissBrowser"],[215,42,66,4],[216,0,67,1],[218,0,68,7],[218,11,68,22,"openAuthSessionAsync"],[218,31,68,7],[218,32,68,43,"url"],[218,35,68,7],[218,37,68,48,"redirectUrl"],[218,48,68,7],[219,0,68,7],[220,0,68,7],[221,0,68,7],[222,0,68,7],[223,0,68,7],[224,0,68,7],[225,0,68,61,"browserParams"],[225,12,68,61,"browserParams"],[225,25,68,7],[225,87,68,77],[225,89,68,7],[227,0,68,7],[227,17,69,8,"_authSessionIsNativelySupported"],[227,48,69,39],[227,50,68,7],[228,0,68,7],[229,0,68,7],[230,0,68,7],[232,0,68,7],[232,16,70,13,"ExponentWebBrowser"],[232,40,70,32,"openAuthSessionAsync"],[232,60,68,7],[233,0,68,7],[234,0,68,7],[235,0,68,7],[237,0,68,7],[237,18,71,18],[237,22,71,22,"UnavailabilityError"],[237,47,71,18],[237,48,71,42],[237,60,71,18],[237,62,71,56],[237,84,71,18],[237,85,68,7],[239,0,68,7],[240,0,68,7],[240,46,73,15,"ExponentWebBrowser"],[240,70,73,34,"openAuthSessionAsync"],[240,90,73,15],[240,91,73,55,"url"],[240,94,73,15],[240,96,73,60,"redirectUrl"],[240,107,73,15],[240,108,68,7],[242,0,68,7],[243,0,68,7],[243,46,76,15,"_openAuthSessionPolyfillAsync"],[243,75,76,44],[243,76,76,45,"url"],[243,79,76,44],[243,81,76,50,"redirectUrl"],[243,92,76,44],[243,94,76,63,"browserParams"],[243,107,76,44],[243,108,68,7],[245,0,68,7],[246,0,68,7],[247,0,68,7],[248,0,68,7],[249,0,68,7],[250,0,68,7],[251,0,68,7],[253,0,79,7],[253,11,79,16,"dismissAuthSession"],[253,29,79,7],[253,32,79,37],[254,0,80,4],[254,8,80,8,"_authSessionIsNativelySupported"],[254,39,80,39],[254,41,80,4],[254,43,80,43],[255,0,81,8],[255,10,81,12],[255,11,81,13,"ExponentWebBrowser"],[255,35,81,32,"dismissAuthSession"],[255,53,81,8],[255,55,81,52],[256,0,82,12],[256,14,82,18],[256,18,82,22,"UnavailabilityError"],[256,43,82,18],[256,44,82,42],[256,56,82,18],[256,58,82,56],[256,78,82,18],[256,79,82,12],[257,0,83,9],[259,0,84,8,"ExponentWebBrowser"],[259,30,84,27,"dismissAuthSession"],[259,48,84,8],[260,0,85,5],[260,5,80,4],[260,11,86,9],[261,0,87,8],[261,10,87,12],[261,11,87,13,"ExponentWebBrowser"],[261,35,87,32,"dismissBrowser"],[261,49,87,8],[261,51,87,48],[262,0,88,12],[262,14,88,18],[262,18,88,22,"UnavailabilityError"],[262,43,88,18],[262,44,88,42],[262,56,88,18],[262,58,88,56],[262,78,88,18],[262,79,88,12],[263,0,89,9],[265,0,90,8,"ExponentWebBrowser"],[265,30,90,27,"dismissBrowser"],[265,44,90,8],[266,0,91,5],[267,0,92,1],[269,0,94,0],[269,11,94,9,"_authSessionIsNativelySupported"],[269,42,94,0],[269,45,94,43],[270,0,95,4],[270,8,95,8,"Platform"],[270,30,95,17,"OS"],[270,32,95,8],[270,37,95,24],[270,46,95,4],[270,48,95,35],[271,0,96,8],[271,13,96,15],[271,18,96,8],[272,0,97,5],[274,0,98,4],[274,8,98,10,"versionNumber"],[274,21,98,23],[274,24,98,26,"parseInt"],[274,32,98,34],[274,33,98,35,"String"],[274,39,98,41],[274,40,98,42,"Platform"],[274,62,98,51,"Version"],[274,69,98,41],[274,70,98,34],[274,72,98,61],[274,74,98,34],[274,75,98,4],[275,0,99,4],[275,11,99,11,"versionNumber"],[275,24,99,24],[275,28,99,28],[275,30,99,4],[276,0,100,1],[278,0,101,0],[278,6,101,4,"_redirectHandler"],[278,22,101,20],[278,25,101,23],[278,29,101,0],[279,0,108,0],[279,6,108,4,"_onWebBrowserCloseAndroid"],[279,31,108,29],[279,34,108,32],[279,38,108,0],[281,0,113,0],[281,6,113,4,"_isAppStateAvailable"],[281,26,113,24],[281,29,113,27,"AppState"],[281,51,113,36,"currentState"],[281,63,113,27],[281,68,113,53],[281,72,113,0],[283,0,114,0],[283,11,114,9,"_onAppStateChangeAndroid"],[283,35,114,0],[283,36,114,34,"state"],[283,41,114,0],[283,43,114,41],[284,0,115,4],[284,8,115,8],[284,9,115,9,"_isAppStateAvailable"],[284,29,115,4],[284,31,115,31],[285,0,116,8,"_isAppStateAvailable"],[285,6,116,8,"_isAppStateAvailable"],[285,26,116,28],[285,29,116,31],[285,33,116,8],[286,0,117,8],[287,0,118,5],[289,0,119,4],[289,8,119,8,"state"],[289,13,119,13],[289,18,119,18],[289,26,119,8],[289,30,119,30,"_onWebBrowserCloseAndroid"],[289,55,119,4],[289,57,119,57],[290,0,120,8,"_onWebBrowserCloseAndroid"],[290,6,120,8,"_onWebBrowserCloseAndroid"],[290,31,120,33],[291,0,121,5],[292,0,122,1],[294,0,123,0],[294,11,123,15,"_openBrowserAndWaitAndroidAsync"],[294,42,123,0],[294,43,123,47,"startUrl"],[294,51,123,0],[295,0,123,0],[296,0,123,0],[297,0,123,0],[298,0,123,0],[299,0,123,0],[300,0,123,0],[302,0,123,0],[303,0,123,0],[304,0,123,0],[305,0,123,0],[306,0,123,57,"browserParams"],[306,12,123,57,"browserParams"],[306,25,123,0],[306,87,123,73],[306,89,123,0],[307,0,124,10,"appStateChangedToActive"],[307,12,124,10,"appStateChangedToActive"],[307,35,123,0],[307,38,124,36],[307,42,124,40,"Promise"],[307,49,124,36],[307,50,124,48],[307,60,124,48,"resolve"],[307,67,124,55],[307,69,124,59],[308,0,125,8,"_onWebBrowserCloseAndroid"],[308,14,125,8,"_onWebBrowserCloseAndroid"],[308,39,125,33],[308,42,125,36,"resolve"],[308,49,125,8],[310,0,126,8,"AppState"],[310,36,126,17,"addEventListener"],[310,52,126,8],[310,53,126,34],[310,61,126,8],[310,63,126,44,"_onAppStateChangeAndroid"],[310,87,126,8],[311,0,127,5],[311,13,124,36],[311,14,123,0],[312,0,128,8,"result"],[312,12,128,8,"result"],[312,18,123,0],[312,21,128,17],[313,0,128,19,"type"],[313,14,128,19,"type"],[313,18,128,23],[313,20,128,25],[314,0,128,17],[314,13,123,0],[315,0,123,0],[316,0,123,0],[316,46,129,27,"openBrowserAsync"],[316,62,129,43],[316,63,129,44,"startUrl"],[316,71,129,43],[316,73,129,54,"browserParams"],[316,86,129,43],[316,87,123,0],[318,0,123,0],[319,0,123,0],[320,0,129,12,"type"],[320,12,129,12,"type"],[320,16,123,0],[320,41,129,12,"type"],[320,45,123,0],[322,0,123,0],[322,18,130,8,"type"],[322,22,130,12],[322,27,130,17],[322,35,123,0],[323,0,123,0],[324,0,123,0],[325,0,123,0],[327,0,123,0],[328,0,123,0],[328,46,131,14,"appStateChangedToActive"],[328,69,123,0],[330,0,123,0],[331,0,132,8,"result"],[331,12,132,8,"result"],[331,18,132,14],[331,21,132,17],[332,0,132,19,"type"],[332,14,132,19,"type"],[332,18,132,23],[332,20,132,25],[333,0,132,17],[333,13,132,8],[335,0,123,0],[336,0,134,4,"AppState"],[336,34,134,13,"removeEventListener"],[336,53,134,4],[336,54,134,33],[336,62,134,4],[336,64,134,43,"_onAppStateChangeAndroid"],[336,88,134,4],[338,0,135,4,"_onWebBrowserCloseAndroid"],[338,12,135,4,"_onWebBrowserCloseAndroid"],[338,37,135,29],[338,40,135,32],[338,44,135,4],[339,0,123,0],[339,46,136,11,"result"],[339,52,123,0],[341,0,123,0],[342,0,123,0],[343,0,123,0],[344,0,123,0],[345,0,123,0],[346,0,123,0],[347,0,123,0],[349,0,138,0],[349,11,138,15,"_openAuthSessionPolyfillAsync"],[349,40,138,0],[349,41,138,45,"startUrl"],[349,49,138,0],[349,51,138,55,"returnUrl"],[349,60,138,0],[350,0,138,0],[351,0,138,0],[352,0,138,0],[353,0,138,0],[354,0,138,0],[355,0,138,0],[356,0,138,66,"browserParams"],[356,12,138,66,"browserParams"],[356,25,138,0],[356,87,138,82],[356,89,138,0],[358,0,138,0],[358,17,139,8,"_redirectHandler"],[358,33,138,0],[359,0,138,0],[360,0,138,0],[361,0,138,0],[363,0,138,0],[363,18,140,14],[363,22,140,18,"Error"],[363,27,140,14],[363,133,138,0],[365,0,138,0],[366,0,138,0],[366,17,142,8,"_onWebBrowserCloseAndroid"],[366,42,138,0],[367,0,138,0],[368,0,138,0],[369,0,138,0],[371,0,138,0],[371,18,143,14],[371,22,143,18,"Error"],[371,27,143,14],[371,89,138,0],[373,0,138,0],[374,0,138,0],[376,0,138,0],[376,18,146,12,"Platform"],[376,40,146,21,"OS"],[376,42,146,12],[376,47,146,28],[376,56,138,0],[377,0,138,0],[378,0,138,0],[379,0,138,0],[381,0,138,0],[382,0,138,0],[382,46,147,25,"Promise"],[382,53,147,32],[382,54,147,33,"race"],[382,58,147,25],[382,59,147,38],[382,60,148,16,"_openBrowserAndWaitAndroidAsync"],[382,91,148,47],[382,92,148,48,"startUrl"],[382,100,148,47],[382,102,148,58,"browserParams"],[382,115,148,47],[382,116,147,38],[382,118,149,16,"_waitForRedirectAsync"],[382,139,149,37],[382,140,149,38,"returnUrl"],[382,149,149,37],[382,150,147,38],[382,151,147,25],[382,152,138,0],[384,0,138,0],[385,0,138,0],[387,0,138,0],[388,0,138,0],[389,0,138,0],[389,46,153,25,"Promise"],[389,53,153,32],[389,54,153,33,"race"],[389,58,153,25],[389,59,153,38],[389,60,154,16,"openBrowserAsync"],[389,76,154,32],[389,77,154,33,"startUrl"],[389,85,154,32],[389,87,154,43,"browserParams"],[389,100,154,32],[389,101,153,38],[389,103,155,16,"_waitForRedirectAsync"],[389,124,155,37],[389,125,155,38,"returnUrl"],[389,134,155,37],[389,135,153,38],[389,136,153,25],[389,137,138,0],[391,0,138,0],[392,0,138,0],[394,0,138,0],[395,0,138,0],[397,0,162,8],[397,16,162,12,"ExponentWebBrowser"],[397,40,162,31,"dismissBrowser"],[397,54,162,8],[397,56,162,47],[398,0,163,12,"ExponentWebBrowser"],[398,38,163,31,"dismissBrowser"],[398,52,163,12],[399,0,164,9],[401,0,165,8,"_stopWaitingForRedirect"],[401,12,165,8,"_stopWaitingForRedirect"],[401,35,165,31],[403,0,138,0],[405,0,138,0],[406,0,138,0],[407,0,138,0],[408,0,138,0],[409,0,138,0],[410,0,138,0],[411,0,138,0],[413,0,168,0],[413,11,168,9,"_stopWaitingForRedirect"],[413,34,168,0],[413,37,168,35],[414,0,169,4],[414,8,169,8],[414,9,169,9,"_redirectHandler"],[414,25,169,4],[414,27,169,27],[415,0,170,8],[415,12,170,14],[415,16,170,18,"Error"],[415,21,170,14],[415,123,170,8],[416,0,171,5],[418,0,172,4,"Linking"],[418,25,172,12,"removeEventListener"],[418,44,172,4],[418,45,172,32],[418,50,172,4],[418,52,172,39,"_redirectHandler"],[418,68,172,4],[420,0,173,4,"_redirectHandler"],[420,4,173,4,"_redirectHandler"],[420,20,173,20],[420,23,173,23],[420,27,173,4],[421,0,174,1],[423,0,175,0],[423,11,175,9,"_waitForRedirectAsync"],[423,32,175,0],[423,33,175,31,"returnUrl"],[423,42,175,0],[423,44,175,42],[424,0,176,4],[424,11,176,11],[424,15,176,15,"Promise"],[424,22,176,11],[424,23,176,23],[424,33,176,23,"resolve"],[424,40,176,30],[424,42,176,34],[425,0,177,8,"_redirectHandler"],[425,6,177,8,"_redirectHandler"],[425,22,177,24],[425,25,177,27],[425,51,177,28,"event"],[425,56,177,27],[425,58,177,38],[426,0,178,12],[426,12,178,16,"event"],[426,17,178,21],[426,18,178,22,"url"],[426,21,178,16],[426,22,178,26,"startsWith"],[426,32,178,16],[426,33,178,37,"returnUrl"],[426,42,178,16],[426,43,178,12],[426,45,178,49],[427,0,179,16,"resolve"],[427,10,179,16,"resolve"],[427,17,179,23],[427,18,179,24],[428,0,179,26,"url"],[428,12,179,26,"url"],[428,15,179,29],[428,17,179,31,"event"],[428,22,179,36],[428,23,179,37,"url"],[428,26,179,24],[429,0,179,42,"type"],[429,12,179,42,"type"],[429,16,179,46],[429,18,179,48],[430,0,179,24],[430,11,179,23],[430,12,179,16],[431,0,180,13],[432,0,181,9],[432,7,177,8],[434,0,182,8,"Linking"],[434,27,182,16,"addEventListener"],[434,43,182,8],[434,44,182,33],[434,49,182,8],[434,51,182,40,"_redirectHandler"],[434,67,182,8],[435,0,183,5],[435,5,176,11],[435,6,176,4],[436,0,184,1]],"functionMap":{"names":["<global>","getCustomTabsSupportingBrowsersAsync","warmUpAsync","mayInitWithUrlAsync","coolDownAsync","openBrowserAsync","dismissBrowser","openAuthSessionAsync","dismissAuthSession","_authSessionIsNativelySupported","_onAppStateChangeAndroid","_openBrowserAndWaitAndroidAsync","Promise$argument_0","_openAuthSessionPolyfillAsync","_stopWaitingForRedirect","_waitForRedirectAsync","_redirectHandler"],"mappings":"AAA;OCW;CDU;OEC;CFU;OGC;CHU;OIC;CJU;OKC;CLK;OMC;CNK;OOC;CPU;OQC;CRa;ASE;CTM;AUc;CVQ;AWC;gDCC;KDG;CXU;AaC;Cb6B;AcC;CdM;AeC;uBHC;2BIC;SJI;KGE;CfC"}},"type":"js/module"}]}